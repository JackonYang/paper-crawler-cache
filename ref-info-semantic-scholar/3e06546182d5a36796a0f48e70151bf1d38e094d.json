{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2341914"
                        ],
                        "name": "Michael I. Gordon",
                        "slug": "Michael-I.-Gordon",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Gordon",
                            "middleNames": [
                                "I."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michael I. Gordon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1718457"
                        ],
                        "name": "William Thies",
                        "slug": "William-Thies",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Thies",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "William Thies"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1739385"
                        ],
                        "name": "M. Karczmarek",
                        "slug": "M.-Karczmarek",
                        "structuredName": {
                            "firstName": "Michal",
                            "lastName": "Karczmarek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Karczmarek"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48208672"
                        ],
                        "name": "Jasper Lin",
                        "slug": "Jasper-Lin",
                        "structuredName": {
                            "firstName": "Jasper",
                            "lastName": "Lin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jasper Lin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2602165"
                        ],
                        "name": "Ali S. Meli",
                        "slug": "Ali-S.-Meli",
                        "structuredName": {
                            "firstName": "Ali",
                            "lastName": "Meli",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ali S. Meli"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32689850"
                        ],
                        "name": "Andrew A. Lamb",
                        "slug": "Andrew-A.-Lamb",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Lamb",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew A. Lamb"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2070611374"
                        ],
                        "name": "Chris Leger",
                        "slug": "Chris-Leger",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Leger",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chris Leger"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1643893286"
                        ],
                        "name": "J.S.S.M. Wong",
                        "slug": "J.S.S.M.-Wong",
                        "structuredName": {
                            "firstName": "J.S.S.M.",
                            "lastName": "Wong",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J.S.S.M. Wong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144704832"
                        ],
                        "name": "H. Hoffmann",
                        "slug": "H.-Hoffmann",
                        "structuredName": {
                            "firstName": "Henry",
                            "lastName": "Hoffmann",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Hoffmann"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144604583"
                        ],
                        "name": "David Maze",
                        "slug": "David-Maze",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Maze",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David Maze"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 128,
                                "start": 110
                            }
                        ],
                        "text": "Sliding window optimizations can automatically optimize pipelines with overlapping data access in 1D streams [Gordon et al. 2002]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 110712,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4ce393506dc1e0ddbc65225d2dad24d31d430c90",
            "isKey": false,
            "numCitedBy": 370,
            "numCiting": 39,
            "paperAbstract": {
                "fragments": [],
                "text": "With the increasing miniaturization of transistors, wire delays are becoming a dominant factor in microprocessor performance. To address this issue, a number of emerging architectures contain replicated processing units with software-exposed communication between one unit and another (e.g., Raw, SmartMemories, TRIPS). However, for their use to be widespread, it will be necessary to develop compiler technology that enables a portable, high-level language to execute efficiently across a range of wire-exposed architectures.In this paper, we describe our compiler for StreamIt: a high-level, architecture-independent language for streaming applications. We focus on our backend for the Raw processor. Though StreamIt exposes the parallelism and communication patterns of stream programs, some analysis is needed to adapt a stream program to a software-exposed processor. We describe a partitioning algorithm that employs fission and fusion transformations to adjust the granularity of a stream graph, a layout algorithm that maps a stream graph to a given network topology, and a scheduling strategy that generates a fine-grained static communication pattern for each computational element.We have implemented a fully functional compiler that parallelizes StreamIt applications for Raw, including several load-balancing transformations. Using the cycle-accurate Raw simulator, we demonstrate that the StreamIt compiler can automatically map a high-level stream abstraction to Raw without losing performance. We consider this work to be a first step towards a portable programming model for communication-exposed architectures."
            },
            "slug": "A-stream-compiler-for-communication-exposed-Gordon-Thies",
            "title": {
                "fragments": [],
                "text": "A stream compiler for communication-exposed architectures"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "This paper describes a fully functional compiler that parallelizes StreamIt applications for Raw, including several load-balancing transformations, and demonstrates that the StreamIt compiler can automatically map a high-level stream abstraction to Raw without losing performance."
            },
            "venue": {
                "fragments": [],
                "text": "ASPLOS X"
            },
            "year": 2002
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1690697"
                        ],
                        "name": "Markus P\u00fcschel",
                        "slug": "Markus-P\u00fcschel",
                        "structuredName": {
                            "firstName": "Markus",
                            "lastName": "P\u00fcschel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Markus P\u00fcschel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144915495"
                        ],
                        "name": "Jos\u00e9 M. F. Moura",
                        "slug": "Jos\u00e9-M.-F.-Moura",
                        "structuredName": {
                            "firstName": "Jos\u00e9",
                            "lastName": "Moura",
                            "middleNames": [
                                "M.",
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jos\u00e9 M. F. Moura"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "33888389"
                        ],
                        "name": "Jeremy R. Johnson",
                        "slug": "Jeremy-R.-Johnson",
                        "structuredName": {
                            "firstName": "Jeremy",
                            "lastName": "Johnson",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jeremy R. Johnson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1729097"
                        ],
                        "name": "D. Padua",
                        "slug": "D.-Padua",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Padua",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Padua"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1956361"
                        ],
                        "name": "M. Veloso",
                        "slug": "M.-Veloso",
                        "structuredName": {
                            "firstName": "Manuela",
                            "lastName": "Veloso",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Veloso"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47525853"
                        ],
                        "name": "Bryan Singer",
                        "slug": "Bryan-Singer",
                        "structuredName": {
                            "firstName": "Bryan",
                            "lastName": "Singer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bryan Singer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2819266"
                        ],
                        "name": "Jianxin Xiong",
                        "slug": "Jianxin-Xiong",
                        "structuredName": {
                            "firstName": "Jianxin",
                            "lastName": "Xiong",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jianxin Xiong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1803350"
                        ],
                        "name": "F. Franchetti",
                        "slug": "F.-Franchetti",
                        "structuredName": {
                            "firstName": "Franz",
                            "lastName": "Franchetti",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Franchetti"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1815451"
                        ],
                        "name": "A. Gacic",
                        "slug": "A.-Gacic",
                        "structuredName": {
                            "firstName": "Aca",
                            "lastName": "Gacic",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Gacic"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2637756"
                        ],
                        "name": "Y. Voronenko",
                        "slug": "Y.-Voronenko",
                        "structuredName": {
                            "firstName": "Yevgen",
                            "lastName": "Voronenko",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Y. Voronenko"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1680073"
                        ],
                        "name": "Kang Chen",
                        "slug": "Kang-Chen",
                        "structuredName": {
                            "firstName": "Kang",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kang Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111257581"
                        ],
                        "name": "Robert W. Johnson",
                        "slug": "Robert-W.-Johnson",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Johnson",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Robert W. Johnson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2265224"
                        ],
                        "name": "Nicholas Rizzolo",
                        "slug": "Nicholas-Rizzolo",
                        "structuredName": {
                            "firstName": "Nicholas",
                            "lastName": "Rizzolo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nicholas Rizzolo"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 38,
                                "start": 19
                            }
                        ],
                        "text": "The SPIRAL system [Pu\u0308schel et al. 2005] uses a domainspecific language to specify linear signal processing operations independent of their schedule."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 12427750,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0221bee380311d75ffcc11fd66be7d5cf632f636",
            "isKey": false,
            "numCitedBy": 867,
            "numCiting": 126,
            "paperAbstract": {
                "fragments": [],
                "text": "Fast changing, increasingly complex, and diverse computing platforms pose central problems in scientific computing: How to achieve, with reasonable effort, portable optimal performance? We present SPIRAL, which considers this problem for the performance-critical domain of linear digital signal processing (DSP) transforms. For a specified transform, SPIRAL automatically generates high-performance code that is tuned to the given platform. SPIRAL formulates the tuning as an optimization problem and exploits the domain-specific mathematical structure of transform algorithms to implement a feedback-driven optimizer. Similar to a human expert, for a specified transform, SPIRAL \"intelligently\" generates and explores algorithmic and implementation choices to find the best match to the computer's microarchitecture. The \"intelligence\" is provided by search and learning techniques that exploit the structure of the algorithm and implementation space to guide the exploration and optimization. SPIRAL generates high-performance code for a broad set of DSP transforms, including the discrete Fourier transform, other trigonometric transforms, filter transforms, and discrete wavelet transforms. Experimental results show that the code generated by SPIRAL competes with, and sometimes outperforms, the best available human tuned transform library code."
            },
            "slug": "SPIRAL:-Code-Generation-for-DSP-Transforms-P\u00fcschel-Moura",
            "title": {
                "fragments": [],
                "text": "SPIRAL: Code Generation for DSP Transforms"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "SPIRAL generates high-performance code for a broad set of DSP transforms, including the discrete Fourier transform, other trigonometric transforms, filter transforms, and discrete wavelet transforms."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the IEEE"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1753290"
                        ],
                        "name": "C. Newburn",
                        "slug": "C.-Newburn",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Newburn",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Newburn"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "5194874"
                        ],
                        "name": "Byoungro So",
                        "slug": "Byoungro-So",
                        "structuredName": {
                            "firstName": "Byoungro",
                            "lastName": "So",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Byoungro So"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109128557"
                        ],
                        "name": "Zhenying Liu",
                        "slug": "Zhenying-Liu",
                        "structuredName": {
                            "firstName": "Zhenying",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhenying Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145684879"
                        ],
                        "name": "M. McCool",
                        "slug": "M.-McCool",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "McCool",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. McCool"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1759815"
                        ],
                        "name": "A. Ghuloum",
                        "slug": "A.-Ghuloum",
                        "structuredName": {
                            "firstName": "Anwar",
                            "lastName": "Ghuloum",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Ghuloum"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1763210"
                        ],
                        "name": "Stefanus Du Toit",
                        "slug": "Stefanus-Du-Toit",
                        "structuredName": {
                            "firstName": "Stefanus",
                            "lastName": "Toit",
                            "middleNames": [
                                "Du"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stefanus Du Toit"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2156969971"
                        ],
                        "name": "Zhi-Gang Wang",
                        "slug": "Zhi-Gang-Wang",
                        "structuredName": {
                            "firstName": "Zhi-Gang",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhi-Gang Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46890618"
                        ],
                        "name": "Zhaohui Du",
                        "slug": "Zhaohui-Du",
                        "structuredName": {
                            "firstName": "Zhaohui",
                            "lastName": "Du",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhaohui Du"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109291500"
                        ],
                        "name": "Yongjian Chen",
                        "slug": "Yongjian-Chen",
                        "structuredName": {
                            "firstName": "Yongjian",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yongjian Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "7315482"
                        ],
                        "name": "Gansha Wu",
                        "slug": "Gansha-Wu",
                        "structuredName": {
                            "firstName": "Gansha",
                            "lastName": "Wu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Gansha Wu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2075394294"
                        ],
                        "name": "Peng Guo",
                        "slug": "Peng-Guo",
                        "structuredName": {
                            "firstName": "Peng",
                            "lastName": "Guo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Peng Guo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2145283831"
                        ],
                        "name": "Zhanglin Liu",
                        "slug": "Zhanglin-Liu",
                        "structuredName": {
                            "firstName": "Zhanglin",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhanglin Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109983260"
                        ],
                        "name": "Dan Zhang",
                        "slug": "Dan-Zhang",
                        "structuredName": {
                            "firstName": "Dan",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dan Zhang"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 113,
                                "start": 94
                            }
                        ],
                        "text": "Array Building Blocks provides an embedded language for dataparallel array processing in C++ [Newburn et al. 2011]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 17,
                                "start": 14
                            }
                        ],
                        "text": "The following C++ code builds a Halide function that brightens its input using a uniform parameter."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 103,
                                "start": 100
                            }
                        ],
                        "text": "While Halide functions may only have integer arguments, the code that builds a pipeline may include C++ functions that take and return Halide functions."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 141,
                                "start": 138
                            }
                        ],
                        "text": "The latest hand-written GPU implementation by Chen et al. [2007] expresses the same algorithm and a similar schedule in 370 lines of CUDA C++, and takes 24 ms on the same GPU."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 43,
                                "start": 40
                            }
                        ],
                        "text": "In comparison, the moderately-optimized C++ version provided by Paris and Durand [2009] takes 472 ms using a single thread on the same machine."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 96,
                                "start": 93
                            }
                        ],
                        "text": "We construct imaging pipelines in this representation using a prototype language embedded in C++, which we call Halide."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 19,
                                "start": 16
                            }
                        ],
                        "text": "We overload the C++ comma operator to allow for tuples of expressions."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 215,
                                "start": 212
                            }
                        ],
                        "text": "For example, consider the following operator which shrinks an image by subsampling:\n// Return a new Halide function that subsamples f Func subsample(Func f) { Func g; Var x, y; g(x, y) = f(2*x, 2*y); return g; }\nC++ functions that deal in Halide expressions are also a convenient way to write generic code."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 54,
                                "start": 51
                            }
                        ],
                        "text": "The reference implementation requires 262 lines of C++, while in Halide the same algorithm is 62 lines."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 97,
                                "start": 94
                            }
                        ],
                        "text": "Embedded DSLs have also been used to specify the shaders themselves, directly inside the host C++ program that configures the pipeline [McCool et al. 2002]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 13,
                                "start": 10
                            }
                        ],
                        "text": "(a) Clean C++ : 9.94 ms per megapixel void blur(const Image &in, Image &blurred) { Image tmp(in.width(), in.height());\nfor (int y = 0; y < in.height(); y++) for (int x = 0; x < in.width(); x++) tmp(x, y) = (in(x-1, y) + in(x, y) + in(x+1, y))/3;\nfor (int y = 0; y < in.height(); y++) for (int x = 0; x < in.width(); x++) blurred(x, y) = (tmp(x, y-1) + tmp(x, y) + tmp(x, y+1))/3;\n}\n(b) Fast C++ (for x86) : 0.90 ms per megapixel void fast_blur(const Image &in, Image &blurred) {\nm128i one_third = _mm_set1_epi16(21846); #pragma omp parallel for for (int yTile = 0; yTile < in.height(); yTile += 32) {\nm128i a, b, c, sum, avg; m128i tmp[(256/8)*(32+2)];\nfor (int xTile = 0; xTile < in.width(); xTile += 256) { m128i *tmpPtr = tmp;\nfor (int y = -1; y < 32+1; y++) { const uint16_t *inPtr = &(in(xTile, yTile+y)); for (int x = 0; x < 256; x += 8) { a = _mm_loadu_si128(( m128i*)(inPtr-1)); b = _mm_loadu_si128(( m128i*)(inPtr+1)); c = _mm_load_si128(( m128i*)(inPtr)); sum = _mm_add_epi16(_mm_add_epi16(a, b), c); avg = _mm_mulhi_epi16(sum, one_third); _mm_store_si128(tmpPtr++, avg); inPtr += 8; }} tmpPtr = tmp; for (int y = 0; y < 32; y++) {\nm128i *outPtr = ( m128i *)(&(blurred(xTile, yTile+y))); for (int x = 0; x < 256; x += 8) { a = _mm_load_si128(tmpPtr+(2*256)/8); b = _mm_load_si128(tmpPtr+256/8); c = _mm_load_si128(tmpPtr++); sum = _mm_add_epi16(_mm_add_epi16(a, b), c); avg = _mm_mulhi_epi16(sum, one_third); _mm_store_si128(outPtr++, avg);\n}}}}}\n(c) Halide : 0.90 ms per megapixel Func halide_blur(Func in) { Func tmp, blurred; Var x, y, xi, yi;\nACM Transactions on Graphics, Vol. 31, No. 4, Article 32, Publication Date: July 2012\nFor image processing, the global organization of execution and storage is critical."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 26,
                                "start": 23
                            }
                        ],
                        "text": "We might write this in C++ as a sequence of two loop nests (Fig."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 22,
                                "start": 19
                            }
                        ],
                        "text": "From these, we use C++ operator overloading to build arithmetic operations, comparisons, and logical operations."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 107,
                                "start": 104
                            }
                        ],
                        "text": "We use 34 lines of code to describe the algorithm, and 6 for its schedule, compared to 122 lines in the C++ reference."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 118,
                                "start": 115
                            }
                        ],
                        "text": "With the final GPU schedule, the same 34-line Halide algorithm runs over 40\u00d7 faster than the more verbose reference C++ implementation on the CPU, and twice as fast as the reference CUDA implementation using 1/10th the code."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 25,
                                "start": 22
                            }
                        ],
                        "text": "As the host language, C++ can be used as a metaprogramming layer to more conveniently construct Halide pipelines containing repetitive substructures."
                    },
                    "intents": []
                }
            ],
            "corpusId": 6729463,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8d20273f3ecbb11fe4157a64a2d8f8d5e274ef2a",
            "isKey": true,
            "numCitedBy": 101,
            "numCiting": 61,
            "paperAbstract": {
                "fragments": [],
                "text": "Our ability to create systems with large amount of hardware parallelism is exceeding the average software developer's ability to effectively program them. This is a problem that plagues our industry. Since the vast majority of the world's software developers are not parallel programming experts, making it easy to write, port, and debug applications with sufficient core and vector parallelism is essential to enabling the use of multi- and many-core processor architectures. However, hardware architectures and vector ISAs are also shifting and diversifying quickly, making it difficult for a single binary to run well on all possible targets. Because of this, retargetability and dynamic compilation are of growing relevance. This paper introduces Intel\u00ae Array Building Blocks (ArBB), which is a retargetable dynamic compilation framework. This system focuses on making it easier to write and port programs so that they can harvest data and thread parallelism on both multi-core and heterogeneous many-core architectures, while staying within standard C++. ArBB interoperates with other programming models to help meet the demands we hear from customers for a solution with both greater programmer productivity and good performance. This work makes contributions in language features, compiler architecture, code transformations and optimizations. It presents performance data from the current beta release of ArBB and quantitatively shows the impact of some key analyses, enabling transformations and optimizations for a variety of benchmarks that are of interest to our customers."
            },
            "slug": "Intel's-Array-Building-Blocks:-A-retargetable,-and-Newburn-So",
            "title": {
                "fragments": [],
                "text": "Intel's Array Building Blocks: A retargetable, dynamic compiler and embedded language"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "This paper introduces Intel\u00ae Array Building Blocks (ArBB), which is a retargetable dynamic compilation framework that focuses on making it easier to write and port programs so that they can harvest data and thread parallelism on both multi-core and heterogeneous many-core architectures, while staying within standard C++."
            },
            "venue": {
                "fragments": [],
                "text": "International Symposium on Code Generation and Optimization (CGO 2011)"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47214516"
                        ],
                        "name": "M. Pharr",
                        "slug": "M.-Pharr",
                        "structuredName": {
                            "firstName": "Matt",
                            "lastName": "Pharr",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Pharr"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913999"
                        ],
                        "name": "W. Mark",
                        "slug": "W.-Mark",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Mark",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Mark"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 165,
                                "start": 161
                            }
                        ],
                        "text": "Particularly relevant in graphics, CUDA and OpenCL expose an imperative, single program-multiple data programming model which can target both GPUs and multicore CPUs with SIMD units [Buck 2007; OpenCL 2011]. ispc provides a similar abstraction for SIMD processing on x86 CPUs [Pharr and Mark 2012]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 89,
                                "start": 68
                            }
                        ],
                        "text": "ispc provides a similar abstraction for SIMD processing on x86 CPUs [Pharr and Mark 2012]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 53,
                                "start": 32
                            }
                        ],
                        "text": "A third implementation, in ispc [Pharr and Mark 2012], us-"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 48,
                                "start": 44
                            }
                        ],
                        "text": "It delivers impressive performance on Intel CPUs, but requires a sufficiently smart compiler to do so."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 87,
                                "start": 83
                            }
                        ],
                        "text": "Using different schedules, we compile them into optimized programs for x86 and ARM CPUs, and a CUDA GPU (Sec."
                    },
                    "intents": []
                }
            ],
            "corpusId": 7961799,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f32abf59892bc3521f1523faab6d10f86b718b2e",
            "isKey": true,
            "numCitedBy": 213,
            "numCiting": 39,
            "paperAbstract": {
                "fragments": [],
                "text": "SIMD parallelism has become an increasingly important mechanism for delivering performance in modern CPUs, due its power efficiency and relatively low cost in die area compared to other forms of parallelism. Unfortunately, languages and compilers for CPUs have not kept up with the hardware's capabilities. Existing CPU parallel programming models focus primarily on multi-core parallelism, neglecting the substantial computational capabilities that are available in CPU SIMD vector units. GPU-oriented languages like OpenCL support SIMD but lack capabilities needed to achieve maximum efficiency on CPUs and suffer from GPU-driven constraints that impair ease of use on CPUs. We have developed a compiler, the Intel R\u00ae SPMD Program Compiler (ispc), that delivers very high performance on CPUs thanks to effective use of both multiple processor cores and SIMD vector units. ispc draws from GPU programming languages, which have shown that for many applications the easiest way to program SIMD units is to use a single-program, multiple-data (SPMD) model, with each instance of the program mapped to one SIMD lane. We discuss language features that make ispc easy to adopt and use productively with existing software systems and show that ispc delivers up to 35x speedups on a 4-core system and up to 240\u00d7 speedups on a 40-core system for complex workloads (compared to serial C++ code)."
            },
            "slug": "ispc:-A-SPMD-compiler-for-high-performance-CPU-Pharr-Mark",
            "title": {
                "fragments": [],
                "text": "ispc: A SPMD compiler for high-performance CPU programming"
            },
            "tldr": {
                "abstractSimilarityScore": 47,
                "text": "A compiler, the Intel R\u00ae SPMD Program Compiler (ispc), is developed that delivers very high performance on CPUs thanks to effective use of both multiple processor cores and SIMD vector units."
            },
            "venue": {
                "fragments": [],
                "text": "2012 Innovative Parallel Computing (InPar)"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2626238"
                        ],
                        "name": "U. Kapasi",
                        "slug": "U.-Kapasi",
                        "structuredName": {
                            "firstName": "Ujval",
                            "lastName": "Kapasi",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "U. Kapasi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3325426"
                        ],
                        "name": "P. Mattson",
                        "slug": "P.-Mattson",
                        "structuredName": {
                            "firstName": "Peter",
                            "lastName": "Mattson",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Mattson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "80724002"
                        ],
                        "name": "W. Dally",
                        "slug": "W.-Dally",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Dally",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Dally"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1758404"
                        ],
                        "name": "John Douglas Owens",
                        "slug": "John-Douglas-Owens",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Owens",
                            "middleNames": [
                                "Douglas"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "John Douglas Owens"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1762455"
                        ],
                        "name": "B. Towles",
                        "slug": "B.-Towles",
                        "structuredName": {
                            "firstName": "Brian",
                            "lastName": "Towles",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Towles"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 99,
                                "start": 81
                            }
                        ],
                        "text": "Compilers automatically schedule these graphs using tiling, fusion, and fission [Kapasi et al. 2002]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 15819261,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0d83236c732d6ba433db39c839035578f6dbf0a4",
            "isKey": false,
            "numCitedBy": 37,
            "numCiting": 9,
            "paperAbstract": {
                "fragments": [],
                "text": "Media applications can be cast as a set of computation kernels operating on sequential data streams. This representation exposes the structure of an application to the hardware as well as to the compiler tools. Stream scheduling is a compiler technology that applies knowledge of the high-level structure of a program in order to target stream hardware as well as to perform high-level optimizations on the application. The basic methods used by stream scheduling are discussed in this paper. In addition, results on the Imagine stream processor are presented. These show that stream programs executed using an automated stream scheduler require on average 98% of the execution time that hand-optimized assembly versions of the same programs require."
            },
            "slug": "Stream-Scheduling-Kapasi-Mattson",
            "title": {
                "fragments": [],
                "text": "Stream Scheduling"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "It is shown that stream programs executed using an automated stream scheduler require on average 98% of the execution time that hand-optimized assembly versions of the same programs require."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2001
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144437216"
                        ],
                        "name": "I. Buck",
                        "slug": "I.-Buck",
                        "structuredName": {
                            "firstName": "Ian",
                            "lastName": "Buck",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Buck"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 192,
                                "start": 183
                            }
                        ],
                        "text": "Particularly relevant in graphics, CUDA and OpenCL expose an imperative, single program-multiple data programming model which can target both GPUs and multicore CPUs with SIMD units [Buck 2007; OpenCL 2011]. ispc provides a similar abstraction for SIMD processing on x86 CPUs [Pharr and Mark 2012]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 206,
                                "start": 182
                            }
                        ],
                        "text": "Particularly relevant in graphics, CUDA and OpenCL expose an imperative, single program-multiple data programming model which can target both GPUs and multicore CPUs with SIMD units [Buck 2007; OpenCL 2011]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 9999617,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f9f7ef4d2138b1f667ce36b8ba873cd2889963fa",
            "isKey": false,
            "numCitedBy": 61,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Summary form only given. Many researchers have observed that general purpose computing with programmable graphics hardware (GPUs) has shown promise to solve many of the world's compute intensive problems, many orders of magnitude faster the conventional CPUs. The challenge has been working within the constraints of a graphics programming environment and limited language support to leverage this huge performance potential. GPU computing with CUDA is a new approach to computing where hundreds of on-chip processor cores simultaneously communicate and cooperate to solve complex computing problems, transforming the GPU into a massively parallel processor. The NVIDIA C-compiler for the GPU provides a complete development environment that gives developers the tools they need to solve new problems in computation-intensive applications such as product design, data analysis, technical computing, and game physics. In this talk, I will provide a description of how CUDA can solve compute intensive problems and highlight the challenges when compiling parallel programs for GPUs including the differences between graphics shaders vs. CUDA applications"
            },
            "slug": "GPU-Computing:-Programming-a-Massively-Parallel-Buck",
            "title": {
                "fragments": [],
                "text": "GPU Computing: Programming a Massively Parallel Processor"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "A description of how CUDA can solve compute intensive problems and highlights the challenges when compiling parallel programs for GPUs including the differences between graphics shaders vs. CUDA applications are provided."
            },
            "venue": {
                "fragments": [],
                "text": "International Symposium on Code Generation and Optimization (CGO'07)"
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145684879"
                        ],
                        "name": "M. McCool",
                        "slug": "M.-McCool",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "McCool",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. McCool"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2099586823"
                        ],
                        "name": "Zheng Qin",
                        "slug": "Zheng-Qin",
                        "structuredName": {
                            "firstName": "Zheng",
                            "lastName": "Qin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zheng Qin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2775650"
                        ],
                        "name": "T. Popa",
                        "slug": "T.-Popa",
                        "structuredName": {
                            "firstName": "Tiberiu",
                            "lastName": "Popa",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Popa"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 154,
                                "start": 136
                            }
                        ],
                        "text": "Embedded DSLs have also been used to specify the shaders themselves, directly inside the host C++ program that configures the pipeline [McCool et al. 2002]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 15788889,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "69a3db7d221174bdd0f99eef30d6f846af1ed20d",
            "isKey": false,
            "numCitedBy": 140,
            "numCiting": 44,
            "paperAbstract": {
                "fragments": [],
                "text": "Modern graphics accelerators have embedded programmable components in the form of vertex and fragment shading units. Current APIs permit specification of the programs for these components using an assembly-language level interface. Compilers for high-level shading languages are available but these read in an external string specification, which can be inconvenient.It is possible, using standard C++, to define a high-level shading language directly in the API. Such a language can be nearly indistinguishable from a special-purpose shading language, yet permits more direct interaction with the specification of textures and parameters, simplifies implementation, and enables on-the-fly generation, manipulation, and specialization of shader programs. A shading language built into the API also permits the lifting of C++ host language type, modularity, and scoping constructs into the shading language without any additional implementation effort."
            },
            "slug": "Shader-metaprogramming-McCool-Qin",
            "title": {
                "fragments": [],
                "text": "Shader metaprogramming"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "It is possible, using standard C++, to define a high-level shading language directly in the API that permits more direct interaction with the specification of textures and parameters, simplifies implementation, and enables on-the-fly generation, manipulation, and specialization of shader programs."
            },
            "venue": {
                "fragments": [],
                "text": "HWWS '02"
            },
            "year": 2002
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1838186"
                        ],
                        "name": "P. Feautrier",
                        "slug": "P.-Feautrier",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Feautrier",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Feautrier"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 92,
                                "start": 78
                            }
                        ],
                        "text": "The polyhedral model is a powerful tool for transforming imperative programs [Feautrier 1991], but traditional loop optimizations do not consider recomputation of values: each point in each loop is computed only once."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 5738544,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "7cd685371e267a499ded869a934a4cffed591aec",
            "isKey": false,
            "numCitedBy": 454,
            "numCiting": 52,
            "paperAbstract": {
                "fragments": [],
                "text": "Given a program written in a simple imperative language (assignment statements,for loops, affine indices and loop limits), this paper presents an algorithm for analyzing the patterns along which values flow as the execution proceeds. For each array or scalar reference, the result is the name and iteration vector of the source statement as a function of the iteration vector of the referencing statement. The paper discusses several applications of the method: conversion of a program to a set of recurrence equations, array and scalar expansion, program verification and parallel program construction."
            },
            "slug": "Dataflow-analysis-of-array-and-scalar-references-Feautrier",
            "title": {
                "fragments": [],
                "text": "Dataflow analysis of array and scalar references"
            },
            "tldr": {
                "abstractSimilarityScore": 52,
                "text": "This paper presents an algorithm for analyzing the patterns along which values flow as the execution proceeds, and discusses several applications of the method: conversion of a program to a set of recurrence equations, array and scalar expansion, program verification and parallel program construction."
            },
            "venue": {
                "fragments": [],
                "text": "International Journal of Parallel Programming"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144965099"
                        ],
                        "name": "Conal Elliott",
                        "slug": "Conal-Elliott",
                        "structuredName": {
                            "firstName": "Conal",
                            "lastName": "Elliott",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Conal Elliott"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 54801877,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "05e9ea2f6382fe7324a838242ec0bcad117c764c",
            "isKey": false,
            "numCitedBy": 20,
            "numCiting": 22,
            "paperAbstract": {
                "fragments": [],
                "text": "Software used to produce visual beauty is usually created with imperative programming languages and is typically unbeautiful itself. One fundamental reason for this situation is that these languages reflect the underlying discreteness and sequentiality of the computers that run them. The essential nature of what an image is becomes muddled with details of how to display it on a computer. We can, however, generate beautiful images with beautiful programs, by making a shift of programming paradigm, from doing to being. This claim is illustrated by many examples expressed in Pan, an image synthesis language with a freely available optimizing compiler."
            },
            "slug": "Functional-Image-Synthesis-Elliott",
            "title": {
                "fragments": [],
                "text": "Functional Image Synthesis"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "Pan, an image synthesis language with a freely available optimizing compiler, proves that one can generate beautiful images with beautiful programs, by making a shift of programming paradigm, from doing to being."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2001
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2796589"
                        ],
                        "name": "P. Kornprobst",
                        "slug": "P.-Kornprobst",
                        "structuredName": {
                            "firstName": "Pierre",
                            "lastName": "Kornprobst",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Kornprobst"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2914934"
                        ],
                        "name": "J. Tumblin",
                        "slug": "J.-Tumblin",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Tumblin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Tumblin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143800609"
                        ],
                        "name": "B. Curless",
                        "slug": "B.-Curless",
                        "structuredName": {
                            "firstName": "Brian",
                            "lastName": "Curless",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Curless"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1681236"
                        ],
                        "name": "L. Gool",
                        "slug": "L.-Gool",
                        "structuredName": {
                            "firstName": "Luc",
                            "lastName": "Gool",
                            "middleNames": [
                                "Van"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Gool"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717841"
                        ],
                        "name": "R. Szeliski",
                        "slug": "R.-Szeliski",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Szeliski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Szeliski"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 67417024,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "12b1ce71ff1a73f74b65c6c283204370ba0805ee",
            "isKey": false,
            "numCitedBy": 109,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Bilateral-Filtering:-Theory-and-Applications:-and-Paris-Kornprobst",
            "title": {
                "fragments": [],
                "text": "Bilateral Filtering: Theory and Applications: Series: Foundations and Trends\u00ae in Computer Graphics and Vision"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2330227"
                        ],
                        "name": "Michael A. Shantzis",
                        "slug": "Michael-A.-Shantzis",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Shantzis",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michael A. Shantzis"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 177,
                                "start": 164
                            }
                        ],
                        "text": "Image processing languages Shantzis described a framework and runtime model for image processing systems based on graphs of operations which process tiles of data [Shantzis 1994]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 1849078,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b9984d1d766d20fff5ea6ce2f06649407ca678b4",
            "isKey": false,
            "numCitedBy": 28,
            "numCiting": 11,
            "paperAbstract": {
                "fragments": [],
                "text": "As common as imaging operations are, the literature contains little about how to build systems for image computation. This paper presents a system which addresses the major issues of image computing. The system includes an algorithm for performing imaging operations which guarantees that we only compute those regions of the image that will affect the result. The paper also discusses several other issues critical when creating a flexible image computing environment and describes solutions for these problems in the context of our model. These issues include how one handles images of any resolution and how one works in arbitrary coordinate systems. It also includes a discussion of the standard memory models, a presentation of a new model, and a discussion of each one's advantages and disadvantages."
            },
            "slug": "A-model-for-efficient-and-flexible-image-computing-Shantzis",
            "title": {
                "fragments": [],
                "text": "A model for efficient and flexible image computing"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A system which addresses the major issues of image computing is presented, which includes an algorithm for performing imaging operations which guarantees that the authors only compute those regions of the image that will affect the result."
            },
            "venue": {
                "fragments": [],
                "text": "SIGGRAPH"
            },
            "year": 1994
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145506199"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2059096618"
                        ],
                        "name": "David E. Jacobs",
                        "slug": "David-E.-Jacobs",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Jacobs",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David E. Jacobs"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2889257"
                        ],
                        "name": "Jennifer Dolson",
                        "slug": "Jennifer-Dolson",
                        "structuredName": {
                            "firstName": "Jennifer",
                            "lastName": "Dolson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jennifer Dolson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717236"
                        ],
                        "name": "M. Tico",
                        "slug": "M.-Tico",
                        "structuredName": {
                            "firstName": "Marius",
                            "lastName": "Tico",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Tico"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1704409"
                        ],
                        "name": "K. Pulli",
                        "slug": "K.-Pulli",
                        "structuredName": {
                            "firstName": "Kari",
                            "lastName": "Pulli",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Pulli"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3129635"
                        ],
                        "name": "Eino-Ville Talvala",
                        "slug": "Eino-Ville-Talvala",
                        "structuredName": {
                            "firstName": "Eino-Ville",
                            "lastName": "Talvala",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eino-Ville Talvala"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2027612"
                        ],
                        "name": "B. Ajdin",
                        "slug": "B.-Ajdin",
                        "structuredName": {
                            "firstName": "Boris",
                            "lastName": "Ajdin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Ajdin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2000950"
                        ],
                        "name": "D. Vaquero",
                        "slug": "D.-Vaquero",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Vaquero",
                            "middleNames": [
                                "Andr\u00e9"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Vaquero"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1809190"
                        ],
                        "name": "H. Lensch",
                        "slug": "H.-Lensch",
                        "structuredName": {
                            "firstName": "Hendrik",
                            "lastName": "Lensch",
                            "middleNames": [
                                "P.",
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Lensch"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144764327"
                        ],
                        "name": "M. Horowitz",
                        "slug": "M.-Horowitz",
                        "structuredName": {
                            "firstName": "Mark",
                            "lastName": "Horowitz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Horowitz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2115277036"
                        ],
                        "name": "S. H. Park",
                        "slug": "S.-H.-Park",
                        "structuredName": {
                            "firstName": "Sung",
                            "lastName": "Park",
                            "middleNames": [
                                "Hee"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. H. Park"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1683095"
                        ],
                        "name": "N. Gelfand",
                        "slug": "N.-Gelfand",
                        "structuredName": {
                            "firstName": "Natasha",
                            "lastName": "Gelfand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Gelfand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1969961"
                        ],
                        "name": "Jongmin Baek",
                        "slug": "Jongmin-Baek",
                        "structuredName": {
                            "firstName": "Jongmin",
                            "lastName": "Baek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jongmin Baek"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1752521"
                        ],
                        "name": "W. Matusik",
                        "slug": "W.-Matusik",
                        "structuredName": {
                            "firstName": "Wojciech",
                            "lastName": "Matusik",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Matusik"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1801789"
                        ],
                        "name": "M. Levoy",
                        "slug": "M.-Levoy",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Levoy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Levoy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 10154698,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5a13b81891828290426e94f74815a8cc88b05645",
            "isKey": false,
            "numCitedBy": 100,
            "numCiting": 48,
            "paperAbstract": {
                "fragments": [],
                "text": "Although there has been much interest in computational photography within the research and photography communities, progress has been hampered by the lack of a portable, programmable camera with sufficient image quality and computing power. To address this problem, we have designed and implemented an open architecture and application programming interface (API) for such cameras: the Frankencamera. It consists of a base hardware specification, a software stack based on Linux, and an API for C++. Our architecture permits control and synchronization of the sensor and image processing pipeline at the microsecond timescale, as well as the ability to incorporate and synchronize external hardware like lenses and flashes. This paper specifies our architecture and API, and it describes two reference implementations we have built. Using these implementations, we demonstrate several computational photography applications: high dynamic range (HDR) viewfinding and capture, automated acquisition of extended dynamic range panoramas, foveal imaging, and inertial measurement unit (IMU)-based hand shake detection. Our goal is to standardize the architecture and distribute Frankencameras to researchers and students, as a step toward creating a community of photographer-programmers who develop algorithms, applications, and hardware for computational cameras."
            },
            "slug": "The-Frankencamera:-an-experimental-platform-for-Adams-Jacobs",
            "title": {
                "fragments": [],
                "text": "The Frankencamera: an experimental platform for computational photography"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "The architecture and API of the Frankencamera are designed and implemented, and two reference implementations are described, which demonstrate several computational photography applications: high dynamic range viewfinding and capture, automated acquisition of extended dynamic range panoramas, foveal imaging, and inertial measurement unit-based hand shake detection."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1801789"
                        ],
                        "name": "M. Levoy",
                        "slug": "M.-Levoy",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Levoy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Levoy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 126,
                                "start": 116
                            }
                        ],
                        "text": "Spreadsheets for Images extended the spreadsheet metaphor as a functional programming model for imaging operations [Levoy 1994]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 7403497,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f1f809640e465b9e6d3f038c55a6811649f1f16c",
            "isKey": false,
            "numCitedBy": 74,
            "numCiting": 17,
            "paperAbstract": {
                "fragments": [],
                "text": "We describe a data visualization system based on spreadsheets. Cells in our spreadsheet contain graphical objects such as images, volumes, or movies. Cells may also contain widgets such as buttons, sliders, or curve editors. Objects are displayed in miniature inside each cell. Formulas for cells are written in a general-purpose programming language (Tcl) augmented with operators for array manipulation, image processing, and rendering. Compared to flow chart visualization systems, spreadsheets are more expressive, morescalable, and easier to program. Compared to conventional numerical spreadsheets, spreadsheets for images pose several unique design problems: larger formulas, longer computation times, and more complicated intercelldependencies. In response to these problems, we have extended the spreadsheet paradigm in three ways: formulas can display their results anywhere in the spreadsheet, cells can be selectively disabled, and multiple cells can be edited at once. We discuss these extensions and their implications, and we also point out some unexpected uses for our spreadsheets: as a visual database browser, as a graphical user interface builder, as a smart clipboard for the desktop, and as a presentation tool."
            },
            "slug": "Spreadsheets-for-images-Levoy",
            "title": {
                "fragments": [],
                "text": "Spreadsheets for images"
            },
            "tldr": {
                "abstractSimilarityScore": 52,
                "text": "A data visualization system based on spreadsheets that has extended the spreadsheet paradigm in three ways: formulas can display their results anywhere in the spreadsheet, cells can be selectively disabled, and multiple cellsCan be edited at once."
            },
            "venue": {
                "fragments": [],
                "text": "SIGGRAPH"
            },
            "year": 1994
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1979640"
                        ],
                        "name": "S. Hasinoff",
                        "slug": "S.-Hasinoff",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Hasinoff",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Hasinoff"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1690538"
                        ],
                        "name": "J. Kautz",
                        "slug": "J.-Kautz",
                        "structuredName": {
                            "firstName": "Jan",
                            "lastName": "Kautz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Kautz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48582897"
                        ],
                        "name": "Mathieu Aubry",
                        "slug": "Mathieu-Aubry",
                        "structuredName": {
                            "firstName": "Mathieu",
                            "lastName": "Aubry",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mathieu Aubry"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 325,
                                "start": 230
                            }
                        ],
                        "text": "Figure 2: We compare algorithms in our prototype language, Halide, to state of the art implementations of four image processing applications, ranging from MATLAB code to highly optimized NEON vector assembly and hand-written CUDA [Adams et al. 2010; Aubry et al. 2011; Paris and Durand 2009; Chen et al. 2007; Li et al. 2010]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 13343711,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "44acd8015f6df86da5025fe7f40c0dba47bc03c3",
            "isKey": false,
            "numCitedBy": 12,
            "numCiting": 18,
            "paperAbstract": {
                "fragments": [],
                "text": "Multi-scale manipulations are central to image editing but they are also prone to halos. Achieving artifact-free results requires sophisticated edge-aware techniques and careful parameter tuning. These shortcomings were recently addressed by the local Laplacian filters, which can achieve a broad range of effects using standard Laplacian pyramids. However, these filters are slow to evaluate and their relationship to other approaches is unclear. In this paper, we show that they are closely related to anisotropic diffusion and to bilateral filtering. Our study also leads to a variant of the bilateral filter that produces cleaner edges while retaining its speed. Building upon this result, we describe an acceleration scheme for local Laplacian filters that yields speed-ups on the order of 50\u00d7. Finally, we demonstrate how to use local Laplacian filters to alter the distribution of gradients in an image. We illustrate this property with a robust algorithm for photographic style transfer."
            },
            "slug": "Fast-and-Robust-Pyramid-based-Image-Processing-Paris-Hasinoff",
            "title": {
                "fragments": [],
                "text": "Fast and Robust Pyramid-based Image Processing"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This paper shows that local Laplacian filters are closely related to anisotropic diffusion and to bilateral filtering, and leads to a variant of the bilateral filter that produces cleaner edges while retaining its speed."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1967685"
                        ],
                        "name": "Jiawen Chen",
                        "slug": "Jiawen-Chen",
                        "structuredName": {
                            "firstName": "Jiawen",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jiawen Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 325,
                                "start": 230
                            }
                        ],
                        "text": "Figure 2: We compare algorithms in our prototype language, Halide, to state of the art implementations of four image processing applications, ranging from MATLAB code to highly optimized NEON vector assembly and hand-written CUDA [Adams et al. 2010; Aubry et al. 2011; Paris and Durand 2009; Chen et al. 2007; Li et al. 2010]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 43,
                                "start": 25
                            }
                        ],
                        "text": "23 ms Hand-written CUDA: [Chen et al. 2007] 51 ms Quad-core x86: 463 lines 772 ms Optimized NEON ASM: Nokia N900:"
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 78,
                                "start": 62
                            }
                        ],
                        "text": "It is efficiently computed with the bilateral grid algorithm [Chen et al. 2007; Paris and Durand 2009]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 13028666,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4ef0a1200a1d9e69a291184d5c4c7cffc562135f",
            "isKey": false,
            "numCitedBy": 312,
            "numCiting": 31,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a new data structure---the bilateral grid, that enables fast edge-aware image processing. By working in the bilateral grid, algorithms such as bilateral filtering, edge-aware painting, and local histogram equalization become simple manipulations that are both local and independent. We parallelize our algorithms on modern GPUs to achieve real-time frame rates on high-definition video. We demonstrate our method on a variety of applications such as image editing, transfer of photographic look, and contrast enhancement of medical images."
            },
            "slug": "Real-time-edge-aware-image-processing-with-the-grid-Chen-Paris",
            "title": {
                "fragments": [],
                "text": "Real-time edge-aware image processing with the bilateral grid"
            },
            "tldr": {
                "abstractSimilarityScore": 69,
                "text": "A new data structure---the bilateral grid, that enables fast edge-aware image processing that parallelize the algorithms on modern GPUs to achieve real-time frame rates on high-definition video."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32579192"
                        ],
                        "name": "A. Munshi",
                        "slug": "A.-Munshi",
                        "structuredName": {
                            "firstName": "Aaftab",
                            "lastName": "Munshi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Munshi"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 27406574,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d0dd928da77a5510f67dc114b86c677f4502654a",
            "isKey": false,
            "numCitedBy": 954,
            "numCiting": 3,
            "paperAbstract": {
                "fragments": [],
                "text": "This document begins with an overview of basic concepts and the architecture of OpenCL, followed by a detailed description of its execution model, memory model and synchronization support. It then discusses the OpenCL platform and runtime API and is followed by a detailed description of the OpenCL C programming language. Some examples are given that describe sample compute use-cases and how they would be written in OpenCL. The specification is divided into a core specification that any OpenCL compliant implementation must support; a handheld/embedded profile which relaxes the OpenCL compliance requirements for handheld and embedded devices; and a set of optional extensions that are likely to move into the core specification in later revisions of the OpenCL specification."
            },
            "slug": "The-OpenCL-specification-Munshi",
            "title": {
                "fragments": [],
                "text": "The OpenCL specification"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "The specification is divided into a core specification that any OpenCL compliant implementation must support; a handheld/embedded profile which relaxes the OpenCL compliance requirements for handheld and embedded devices; and a set of optional extensions that are likely to move into the core specification in later revisions of the Opencl specification."
            },
            "venue": {
                "fragments": [],
                "text": "2009 IEEE Hot Chips 21 Symposium (HCS)"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1979640"
                        ],
                        "name": "S. Hasinoff",
                        "slug": "S.-Hasinoff",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Hasinoff",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Hasinoff"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1690538"
                        ],
                        "name": "J. Kautz",
                        "slug": "J.-Kautz",
                        "structuredName": {
                            "firstName": "Jan",
                            "lastName": "Kautz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Kautz"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1570311,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f91afeda3f233c8f48fdb84120aecf4b1e45ad55",
            "isKey": false,
            "numCitedBy": 231,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "The Laplacian pyramid is ubiquitous for decomposing images into multiple scales and is widely used for image analysis. However, because it is constructed with spatially invariant Gaussian kernels, the Laplacian pyramid is widely believed as being unable to represent edges well and as being ill-suited for edge-aware operations such as edge-preserving smoothing and tone mapping. To tackle these tasks, a wealth of alternative techniques and representations have been proposed, e.g., anisotropic diffusion, neighborhood filtering, and specialized wavelet bases. While these methods have demonstrated successful results, they come at the price of additional complexity, often accompanied by higher computational cost or the need to post-process the generated results. In this paper, we show state-of-the-art edge-aware processing using standard Laplacian pyramids. We characterize edges with a simple threshold on pixel values that allows us to differentiate large-scale edges from small-scale details. Building upon this result, we propose a set of image filters to achieve edge-preserving smoothing, detail enhancement, tone mapping, and inverse tone mapping. The advantage of our approach is its simplicity and flexibility, relying only on simple point-wise nonlinearities and small Gaussian convolutions; no optimization or post-processing is required. As we demonstrate, our method produces consistently high-quality results, without degrading edges or introducing halos."
            },
            "slug": "Local-Laplacian-filters:-edge-aware-image-with-a-Paris-Hasinoff",
            "title": {
                "fragments": [],
                "text": "Local Laplacian filters: edge-aware image processing with a Laplacian pyramid"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This paper shows state-of-the-art edge-aware processing using standard Laplacian pyramids, and proposes a set of image filters to achieve edge-preserving smoothing, detail enhancement, tone mapping, and inverse tone mapping."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109304804"
                        ],
                        "name": "Chunming Li",
                        "slug": "Chunming-Li",
                        "structuredName": {
                            "firstName": "Chunming",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chunming Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1734206"
                        ],
                        "name": "Xu Chen",
                        "slug": "Xu-Chen",
                        "structuredName": {
                            "firstName": "Xu",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xu Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2076144"
                        ],
                        "name": "C. Gui",
                        "slug": "C.-Gui",
                        "structuredName": {
                            "firstName": "Changfeng",
                            "lastName": "Gui",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Gui"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "11370804"
                        ],
                        "name": "M. Fox",
                        "slug": "M.-Fox",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Fox",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Fox"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6458247,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "95b5f94814bea27a1538796f14d90715adf4f88f",
            "isKey": false,
            "numCitedBy": 1818,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "Level set methods have been widely used in image processing and computer vision. In conventional level set formulations, the level set function typically develops irregularities during its evolution, which may cause numerical errors and eventually destroy the stability of the evolution. Therefore, a numerical remedy, called reinitialization, is typically applied to periodically replace the degraded level set function with a signed distance function. However, the practice of reinitialization not only raises serious problems as when and how it should be performed, but also affects numerical accuracy in an undesirable way. This paper proposes a new variational level set formulation in which the regularity of the level set function is intrinsically maintained during the level set evolution. The level set evolution is derived as the gradient flow that minimizes an energy functional with a distance regularization term and an external energy that drives the motion of the zero level set toward desired locations. The distance regularization term is defined with a potential function such that the derived level set evolution has a unique forward-and-backward (FAB) diffusion effect, which is able to maintain a desired shape of the level set function, particularly a signed distance profile near the zero level set. This yields a new type of level set evolution called distance regularized level set evolution (DRLSE). The distance regularization effect eliminates the need for reinitialization and thereby avoids its induced numerical errors. In contrast to complicated implementations of conventional level set formulations, a simpler and more efficient finite difference scheme can be used to implement the DRLSE formulation. DRLSE also allows the use of more general and efficient initialization of the level set function. In its numerical implementation, relatively large time steps can be used in the finite difference scheme to reduce the number of iterations, while ensuring sufficient numerical accuracy. To demonstrate the effectiveness of the DRLSE formulation, we apply it to an edge-based active contour model for image segmentation, and provide a simple narrowband implementation to greatly reduce computational cost."
            },
            "slug": "Distance-Regularized-Level-Set-Evolution-and-Its-to-Li-Chen",
            "title": {
                "fragments": [],
                "text": "Distance Regularized Level Set Evolution and Its Application to Image Segmentation"
            },
            "tldr": {
                "abstractSimilarityScore": 48,
                "text": "A new variational level set formulation in which the regularity of the level set function is intrinsically maintained during thelevel set evolution called distance regularized level set evolution (DRLSE), which eliminates the need for reinitialization and thereby avoids its induced numerical errors."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Image Processing"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 325,
                                "start": 230
                            }
                        ],
                        "text": "Figure 2: We compare algorithms in our prototype language, Halide, to state of the art implementations of four image processing applications, ranging from MATLAB code to highly optimized NEON vector assembly and hand-written CUDA [Adams et al. 2010; Aubry et al. 2011; Paris and Durand 2009; Chen et al. 2007; Li et al. 2010]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 101,
                                "start": 80
                            }
                        ],
                        "text": "It is efficiently computed with the bilateral grid algorithm [Chen et al. 2007; Paris and Durand 2009]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 1482395,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2c8cbeb547f3c982c820794ec9cf431b133aba57",
            "isKey": false,
            "numCitedBy": 682,
            "numCiting": 58,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract\nThe bilateral filter is a nonlinear filter that smoothes a signal while preserving strong edges. It has demonstrated great effectiveness for a variety of problems in computer vision and computer graphics, and fast versions have been proposed. Unfortunately, little is known about the accuracy of such accelerations. In this paper, we propose a new signal-processing analysis of the bilateral filter which complements the recent studies that analyzed it as a PDE or as a robust statistical estimator. The key to our analysis is to express the filter in a higher-dimensional space where the signal intensity is added to the original domain dimensions. Importantly, this signal-processing perspective allows us to develop a novel bilateral filtering acceleration using downsampling in space and intensity. This affords a principled expression of accuracy in terms of bandwidth and sampling. The bilateral filter can be expressed as linear convolutions in this augmented space followed by two simple nonlinearities. This allows us to derive criteria for downsampling the key operations and achieving important acceleration of the bilateral filter. We show that, for the same running time, our method is more accurate than previous acceleration techniques. Typically, we are able to process a 2\u00a0megapixel image using our acceleration technique in less than a second, and have the result be visually similar to the exact computation that takes several tens of minutes. The acceleration is most effective with large spatial kernels. Furthermore, this approach extends naturally to color images and cross bilateral filtering.\n"
            },
            "slug": "A-Fast-Approximation-of-the-Bilateral-Filter-Using-Paris-Durand",
            "title": {
                "fragments": [],
                "text": "A Fast Approximation of the Bilateral Filter Using a Signal Processing Approach"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A new signal-processing analysis of the bilateral filter is proposed which complements the recent studies that analyzed it as a PDE or as a robust statistical estimator and develops a novel bilateral filtering acceleration using downsampling in space and intensity."
            },
            "venue": {
                "fragments": [],
                "text": "International Journal of Computer Vision"
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2796589"
                        ],
                        "name": "P. Kornprobst",
                        "slug": "P.-Kornprobst",
                        "structuredName": {
                            "firstName": "Pierre",
                            "lastName": "Kornprobst",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Kornprobst"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2914934"
                        ],
                        "name": "J. Tumblin",
                        "slug": "J.-Tumblin",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Tumblin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Tumblin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143800609"
                        ],
                        "name": "B. Curless",
                        "slug": "B.-Curless",
                        "structuredName": {
                            "firstName": "Brian",
                            "lastName": "Curless",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Curless"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1681236"
                        ],
                        "name": "L. Gool",
                        "slug": "L.-Gool",
                        "structuredName": {
                            "firstName": "Luc",
                            "lastName": "Gool",
                            "middleNames": [
                                "Van"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Gool"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717841"
                        ],
                        "name": "R. Szeliski",
                        "slug": "R.-Szeliski",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Szeliski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Szeliski"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 67417024,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "12b1ce71ff1a73f74b65c6c283204370ba0805ee",
            "isKey": false,
            "numCitedBy": 109,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Bilateral-Filtering:-Theory-and-Applications:-and-Paris-Kornprobst",
            "title": {
                "fragments": [],
                "text": "Bilateral Filtering: Theory and Applications: Series: Foundations and Trends\u00ae in Computer Graphics and Vision"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143602141"
                        ],
                        "name": "M. Kass",
                        "slug": "M.-Kass",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Kass",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Kass"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1809905"
                        ],
                        "name": "A. Witkin",
                        "slug": "A.-Witkin",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Witkin",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Witkin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1750924"
                        ],
                        "name": "Demetri Terzopoulos",
                        "slug": "Demetri-Terzopoulos",
                        "structuredName": {
                            "firstName": "Demetri",
                            "lastName": "Terzopoulos",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Demetri Terzopoulos"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 56,
                                "start": 40
                            }
                        ],
                        "text": "Active contour selection (a.k.a. snake [Kass et al. 1988]) is a method for segmenting objects from a background (Fig.10)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 24,
                                "start": 6
                            }
                        ],
                        "text": "snake [Kass et al. 1988]) is a method for segmenting objects from a background (Fig."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 12849354,
            "fieldsOfStudy": [
                "Physics"
            ],
            "id": "9394a5d5adcb626128b6a42c8810b9505a3c6487",
            "isKey": false,
            "numCitedBy": 15535,
            "numCiting": 48,
            "paperAbstract": {
                "fragments": [],
                "text": "A snake is an energy-minimizing spline guided by external constraint forces and influenced by image forces that pull it toward features such as lines and edges. Snakes are active contour models: they lock onto nearby edges, localizing them accurately. Scale-space continuation can be used to enlarge the capture region surrounding a feature. Snakes provide a unified account of a number of visual problems, including detection of edges, lines, and subjective contours; motion tracking; and stereo matching. We have used snakes successfully for interactive interpretation, in which user-imposed constraint forces guide the snake near features of interest."
            },
            "slug": "Snakes:-Active-contour-models-Kass-Witkin",
            "title": {
                "fragments": [],
                "text": "Snakes: Active contour models"
            },
            "tldr": {
                "abstractSimilarityScore": 47,
                "text": "This work uses snakes for interactive interpretation, in which user-imposed constraint forces guide the snake near features of interest, and uses scale-space continuation to enlarge the capture region surrounding a feature."
            },
            "venue": {
                "fragments": [],
                "text": "International Journal of Computer Vision"
            },
            "year": 2004
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2796589"
                        ],
                        "name": "P. Kornprobst",
                        "slug": "P.-Kornprobst",
                        "structuredName": {
                            "firstName": "Pierre",
                            "lastName": "Kornprobst",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Kornprobst"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2914934"
                        ],
                        "name": "J. Tumblin",
                        "slug": "J.-Tumblin",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Tumblin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Tumblin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 40,
                                "start": 21
                            }
                        ],
                        "text": "The bilateral filter [Paris et al. 2009] is used to decompose images into local and global details."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 62642052,
            "fieldsOfStudy": [
                "Geology"
            ],
            "id": "90ee89f9d9d669744fbea94ac8517afbc5825f87",
            "isKey": false,
            "numCitedBy": 183,
            "numCiting": 81,
            "paperAbstract": {
                "fragments": [],
                "text": "1: Introduction 2: From Gaussian Convolution to Bilateral Filter 3: Applications 4: Efficient Implementation 5: Relationship between BF and Other Methods or Framework 6: Extensions of Bilateral Filtering 7: Conclusions. Acknowledgements. References."
            },
            "slug": "Bilateral-Filtering:-Theory-and-Applications-Kornprobst-Tumblin",
            "title": {
                "fragments": [],
                "text": "Bilateral Filtering: Theory and Applications"
            },
            "tldr": {
                "abstractSimilarityScore": 72,
                "text": "From Gaussian Convolution to Bilateral Filter to Applications and Relationship between BF and Other Methods or Framework and Extensions of Bilateral Filtering."
            },
            "venue": {
                "fragments": [],
                "text": "Found. Trends Comput. Graph. Vis."
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2796589"
                        ],
                        "name": "P. Kornprobst",
                        "slug": "P.-Kornprobst",
                        "structuredName": {
                            "firstName": "Pierre",
                            "lastName": "Kornprobst",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Kornprobst"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2914934"
                        ],
                        "name": "J. Tumblin",
                        "slug": "J.-Tumblin",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Tumblin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Tumblin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143800609"
                        ],
                        "name": "B. Curless",
                        "slug": "B.-Curless",
                        "structuredName": {
                            "firstName": "Brian",
                            "lastName": "Curless",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Curless"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1681236"
                        ],
                        "name": "L. Gool",
                        "slug": "L.-Gool",
                        "structuredName": {
                            "firstName": "Luc",
                            "lastName": "Gool",
                            "middleNames": [
                                "Van"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Gool"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717841"
                        ],
                        "name": "R. Szeliski",
                        "slug": "R.-Szeliski",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Szeliski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Szeliski"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 67417024,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "12b1ce71ff1a73f74b65c6c283204370ba0805ee",
            "isKey": false,
            "numCitedBy": 109,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Bilateral-Filtering:-Theory-and-Applications:-and-Paris-Kornprobst",
            "title": {
                "fragments": [],
                "text": "Bilateral Filtering: Theory and Applications: Series: Foundations and Trends\u00ae in Computer Graphics and Vision"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32857606"
                        ],
                        "name": "B. Guenter",
                        "slug": "B.-Guenter",
                        "structuredName": {
                            "firstName": "Brian",
                            "lastName": "Guenter",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Guenter"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1764421"
                        ],
                        "name": "Diego F. Nehab",
                        "slug": "Diego-F.-Nehab",
                        "structuredName": {
                            "firstName": "Diego",
                            "lastName": "Nehab",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Diego F. Nehab"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 67,
                                "start": 45
                            }
                        ],
                        "text": "Neon embeds a similar kernel language in C# [Guenter and Nehab 2010]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 59719435,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "78082455f84b581df0173da3ff54ede538c9d9f4",
            "isKey": false,
            "numCitedBy": 3,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "The-Neon-Image-Processing-Language-Guenter-Nehab",
            "title": {
                "fragments": [],
                "text": "The Neon Image Processing Language"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2010
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Apple CoreImage programming guide"
            },
            "venue": {
                "fragments": [],
                "text": "COREIMAGE"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The Frankencamera : 884 An experimental platform for computational photography Intel array building blocks"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Adobe PixelBender reference"
            },
            "venue": {
                "fragments": [],
                "text": "Adobe PixelBender reference"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Shader 918 metaprogramming The opencl specification , version 1 . 2 OpenMP"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2009
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Bilateral filtering : Theory and applications"
            },
            "venue": {
                "fragments": [],
                "text": "Foundations 927 and Trends in Computer Graphics and Vision"
            },
            "year": 2011
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Compiling embedded languages Updated version of paper by the same name that appeared in SAIG '00 proceedings"
            },
            "venue": {
                "fragments": [],
                "text": "Journal of Functional Programming"
            },
            "year": 2003
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Intel integrated performance primitives"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1988
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Distance reg - 913 ularized level set evolution and its application to image segmen - 914 tation"
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Image Processing"
            },
            "year": 2002
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Apple core image programming guide"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2001
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A fast approximation of the 923 bilateral filter using a signal processing approach"
            },
            "venue": {
                "fragments": [],
                "text": "International 924 Journal of Computer Vision"
            },
            "year": 2009
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The neon image processing language Intel Integrated Performance Primitives"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2002
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Functional image synthesis Sequoia : programming the memory hierarchy"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2001
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Fast and robust pyramid-based image process"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2011
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Apple CoreImage programming guide"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2003
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 101,
                                "start": 80
                            }
                        ],
                        "text": "It is efficiently computed with the bilateral grid algorithm [Chen et al. 2007; Paris and Durand 2009]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A fast approximation of the"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2009
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Adobe pixel bender reference"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2005
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Snakes : 910 Active contour models"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2010
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 154,
                                "start": 136
                            }
                        ],
                        "text": "Embedded DSLs have also been used to specify the shaders themselves, directly inside the host C++ program that configures the pipeline [McCool et al. 2002]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Shader metaprogramming. In Graphics Hardware"
            },
            "venue": {
                "fragments": [],
                "text": "Shader metaprogramming. In Graphics Hardware"
            },
            "year": 2002
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Adobe PixelBender reference"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "http://developer.apple.com/library/mac/#documentation/ GraphicsImaging/Conceptual/CoreImaging"
            },
            "venue": {
                "fragments": [],
                "text": "http://developer.apple.com/library/mac/#documentation/ GraphicsImaging/Conceptual/CoreImaging"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Intel Integrated Performance Primitives. http://software. intel.com/en-us/articles/intel-ipp"
            },
            "venue": {
                "fragments": [],
                "text": "Intel Integrated Performance Primitives. http://software. intel.com/en-us/articles/intel-ipp"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The OpenCL specification , version 1 . 2"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2011
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The OpenCL specification, version 1.2"
            },
            "venue": {
                "fragments": [],
                "text": "The OpenCL specification, version 1.2"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Fast and robust pyramid - based image process"
            },
            "venue": {
                "fragments": [],
                "text": "GPU computing : Programming a massively parallel processor . In CGO \u2019 07 : Proceedings of the International Symposium on Code Generation and Optimization"
            },
            "year": 2011
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "GPU computing : Programming a massively par - 893 allel processor"
            },
            "venue": {
                "fragments": [],
                "text": "CGO \u2019 07 : Proceedings of the International 894 Symposium on Code Generation and Optimization , IEEE Com - 895 puter Society"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The LLVM compiler infrastructure"
            },
            "venue": {
                "fragments": [],
                "text": "The LLVM compiler infrastructure"
            }
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 2,
            "methodology": 19
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 50,
        "totalPages": 5
    },
    "page_url": "https://www.semanticscholar.org/paper/Decoupling-algorithms-from-schedules-for-easy-of-Ragan-Kelley-Adams/3e06546182d5a36796a0f48e70151bf1d38e094d?sort=total-citations"
}