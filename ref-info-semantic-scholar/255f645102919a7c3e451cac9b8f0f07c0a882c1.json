{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "69460268"
                        ],
                        "name": "G. Holzmann",
                        "slug": "G.-Holzmann",
                        "structuredName": {
                            "firstName": "Gerald",
                            "lastName": "Holzmann",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Holzmann"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 58157446,
            "fieldsOfStudy": [
                "Art"
            ],
            "id": "442d8b6489aec7c1f661fc33a4a9d8c9c17e981c",
            "isKey": false,
            "numCitedBy": 31,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Beyond-Photography:-The-Digital-Darkroom-Holzmann",
            "title": {
                "fragments": [],
                "text": "Beyond Photography: The Digital Darkroom"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1988
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144965099"
                        ],
                        "name": "Conal Elliott",
                        "slug": "Conal-Elliott",
                        "structuredName": {
                            "firstName": "Conal",
                            "lastName": "Elliott",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Conal Elliott"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 54801877,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "05e9ea2f6382fe7324a838242ec0bcad117c764c",
            "isKey": false,
            "numCitedBy": 20,
            "numCiting": 22,
            "paperAbstract": {
                "fragments": [],
                "text": "Software used to produce visual beauty is usually created with imperative programming languages and is typically unbeautiful itself. One fundamental reason for this situation is that these languages reflect the underlying discreteness and sequentiality of the computers that run them. The essential nature of what an image is becomes muddled with details of how to display it on a computer. We can, however, generate beautiful images with beautiful programs, by making a shift of programming paradigm, from doing to being. This claim is illustrated by many examples expressed in Pan, an image synthesis language with a freely available optimizing compiler."
            },
            "slug": "Functional-Image-Synthesis-Elliott",
            "title": {
                "fragments": [],
                "text": "Functional Image Synthesis"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "Pan, an image synthesis language with a freely available optimizing compiler, proves that one can generate beautiful images with beautiful programs, by making a shift of programming paradigm, from doing to being."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2001
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 43682230,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "200d28ea1805802e13aa0e121287e03b3205d68d",
            "isKey": false,
            "numCitedBy": 16,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Decoupling-algorithms-from-the-organization-of-for-Ragan-Kelley",
            "title": {
                "fragments": [],
                "text": "Decoupling algorithms from the organization of computation for high performance image processing"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40335288"
                        ],
                        "name": "Gabe Rudy",
                        "slug": "Gabe-Rudy",
                        "structuredName": {
                            "firstName": "Gabe",
                            "lastName": "Rudy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Gabe Rudy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "31568526"
                        ],
                        "name": "M. Khan",
                        "slug": "M.-Khan",
                        "structuredName": {
                            "firstName": "Malik",
                            "lastName": "Khan",
                            "middleNames": [
                                "Murtaza"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Khan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143896454"
                        ],
                        "name": "Mary W. Hall",
                        "slug": "Mary-W.-Hall",
                        "structuredName": {
                            "firstName": "Mary",
                            "lastName": "Hall",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mary W. Hall"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109525543"
                        ],
                        "name": "Chun Chen",
                        "slug": "Chun-Chen",
                        "structuredName": {
                            "firstName": "Chun",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chun Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1772362"
                        ],
                        "name": "Jacqueline Chame",
                        "slug": "Jacqueline-Chame",
                        "structuredName": {
                            "firstName": "Jacqueline",
                            "lastName": "Chame",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jacqueline Chame"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 19501057,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "cc2906b3a18ee0e4d0ef4ba324c01d5b60d77315",
            "isKey": false,
            "numCitedBy": 85,
            "numCiting": 38,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper presents a programming language interface, a complete scripting language, to describe composable compiler transformations. These transformation programs can be written, shared and reused by non-expert application and library developers. From a compiler writer's perspective, a scripting language interface permits rapid prototyping of compiler algorithms that can mix levels and compose different sequences of transformations, producing readable code as output. From a library or application developer's perspective, the use of transformation programs permits expression of clean high-level code, and a separate description of how to map that code to architectural features, easing maintenance and porting to new architectures. \n \nWe illustrate this interface in the context of CUDA-CHiLL, a source-to-source compiler transformation and code generation framework that transforms sequential loop nests to high-performance GPU code. We show how this high-level transformation and code generation language can be used to express: (1) complex transformation sequences, exemplified by a single loop restructuring construct used to generate a series of tiling and permute commands; and, (2) complex code generation sequences to produce CUDA code from a high-level specification. We demonstrate that the automatically-generated code either performs closely or outperforms two hand-tuned GPU library kernels from Nvidia's CUBLAS 2.2 and 3.2 libraries."
            },
            "slug": "A-Programming-Language-Interface-to-Describe-and-Rudy-Khan",
            "title": {
                "fragments": [],
                "text": "A Programming Language Interface to Describe Transformations and Code Generation"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "It is demonstrated that the automatically-generated code either performs closely or outperforms two hand-tuned GPU library kernels from Nvidia's CUBLAS 2.2 and 3.2 libraries."
            },
            "venue": {
                "fragments": [],
                "text": "LCPC"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2491805"
                        ],
                        "name": "D. Kirk",
                        "slug": "D.-Kirk",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Kirk",
                            "middleNames": [
                                "Blair"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Kirk"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143668320"
                        ],
                        "name": "W. Hwu",
                        "slug": "W.-Hwu",
                        "structuredName": {
                            "firstName": "Wen-mei",
                            "lastName": "Hwu",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Hwu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "86979251"
                        ],
                        "name": "A. Studholme",
                        "slug": "A.-Studholme",
                        "structuredName": {
                            "firstName": "Allan",
                            "lastName": "Studholme",
                            "middleNames": [
                                "T."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Studholme"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 250061266,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "88796591f3d9eee6d26f3572afc86618ddfa6afb",
            "isKey": false,
            "numCitedBy": 177,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Programming-Massively-Parallel-Processors-Kirk-Hwu",
            "title": {
                "fragments": [],
                "text": "Programming Massively Parallel Processors"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8844033"
                        ],
                        "name": "Patricia Suriana",
                        "slug": "Patricia-Suriana",
                        "structuredName": {
                            "firstName": "Patricia",
                            "lastName": "Suriana",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Patricia Suriana"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145683292"
                        ],
                        "name": "S. Kamil",
                        "slug": "S.-Kamil",
                        "structuredName": {
                            "firstName": "Shoaib",
                            "lastName": "Kamil",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kamil"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6214951,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "261178d4e8eaaf8c74d4a0fb263e9b4f94b09fe3",
            "isKey": false,
            "numCitedBy": 16,
            "numCiting": 24,
            "paperAbstract": {
                "fragments": [],
                "text": "Halide is a domain-specific language for fast image processing that separates pipelines into the algorithm, which defines what values are computed, and the schedule, which defines how they are computed. Changes to the schedule are guaranteed to not change the results. While Halide supports parallelizing and vectorizing naturally data-parallel operations, it does not support the same scheduling for reductions. Instead, the programmer must create data parallelism by manually factoring reductions into multiple stages. This manipulation of the algorithm can introduce bugs, impairs readability and portability, and makes it impossible for automatic scheduling methods to parallelize reductions. We describe a new Halide scheduling primitive rfactor which moves this factoring transformation into the schedule, as well as a novel synthesis-based technique that takes serial Halide reductions and synthesizes an equivalent binary associative reduction operator and its identity. This enables us to automatically replace the original pipeline stage with a pair of stages which first compute partial results over slices of the reduction domain, and then combine them. Our technique permits parallelization and vectorization of Halide algorithms which previously required manipulating both the algorithm and schedule."
            },
            "slug": "Parallel-associative-reductions-in-Halide-Suriana-Adams",
            "title": {
                "fragments": [],
                "text": "Parallel associative reductions in Halide"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A new Halide scheduling primitive rfactor is described which moves this factoring transformation into the schedule, as well as a novel synthesis-based technique that takes serial Halide reductions and synthesizes an equivalent binary associative reduction operator and its identity."
            },
            "venue": {
                "fragments": [],
                "text": "2017 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32579192"
                        ],
                        "name": "A. Munshi",
                        "slug": "A.-Munshi",
                        "structuredName": {
                            "firstName": "Aaftab",
                            "lastName": "Munshi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Munshi"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 27406574,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d0dd928da77a5510f67dc114b86c677f4502654a",
            "isKey": false,
            "numCitedBy": 953,
            "numCiting": 3,
            "paperAbstract": {
                "fragments": [],
                "text": "This document begins with an overview of basic concepts and the architecture of OpenCL, followed by a detailed description of its execution model, memory model and synchronization support. It then discusses the OpenCL platform and runtime API and is followed by a detailed description of the OpenCL C programming language. Some examples are given that describe sample compute use-cases and how they would be written in OpenCL. The specification is divided into a core specification that any OpenCL compliant implementation must support; a handheld/embedded profile which relaxes the OpenCL compliance requirements for handheld and embedded devices; and a set of optional extensions that are likely to move into the core specification in later revisions of the OpenCL specification."
            },
            "slug": "The-OpenCL-specification-Munshi",
            "title": {
                "fragments": [],
                "text": "The OpenCL specification"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "The specification is divided into a core specification that any OpenCL compliant implementation must support; a handheld/embedded profile which relaxes the OpenCL compliance requirements for handheld and embedded devices; and a set of optional extensions that are likely to move into the core specification in later revisions of the Opencl specification."
            },
            "venue": {
                "fragments": [],
                "text": "2009 IEEE Hot Chips 21 Symposium (HCS)"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1979640"
                        ],
                        "name": "S. Hasinoff",
                        "slug": "S.-Hasinoff",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Hasinoff",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Hasinoff"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2665634"
                        ],
                        "name": "Dillon Sharlet",
                        "slug": "Dillon-Sharlet",
                        "structuredName": {
                            "firstName": "Dillon",
                            "lastName": "Sharlet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dillon Sharlet"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2093042733"
                        ],
                        "name": "Ryan Geiss",
                        "slug": "Ryan-Geiss",
                        "structuredName": {
                            "firstName": "Ryan",
                            "lastName": "Geiss",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ryan Geiss"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145506199"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50329510"
                        ],
                        "name": "J. Barron",
                        "slug": "J.-Barron",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Barron",
                            "middleNames": [
                                "T."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Barron"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2083650304"
                        ],
                        "name": "Florian Kainz",
                        "slug": "Florian-Kainz",
                        "structuredName": {
                            "firstName": "Florian",
                            "lastName": "Kainz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Florian Kainz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1967685"
                        ],
                        "name": "Jiawen Chen",
                        "slug": "Jiawen-Chen",
                        "structuredName": {
                            "firstName": "Jiawen",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jiawen Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1801789"
                        ],
                        "name": "M. Levoy",
                        "slug": "M.-Levoy",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Levoy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Levoy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 2344617,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2d6723d19df684b21c9b40f11eb03b0a9e3d36b0",
            "isKey": false,
            "numCitedBy": 287,
            "numCiting": 79,
            "paperAbstract": {
                "fragments": [],
                "text": "Cell phone cameras have small apertures, which limits the number of photons they can gather, leading to noisy images in low light. They also have small sensor pixels, which limits the number of electrons each pixel can store, leading to limited dynamic range. We describe a computational photography pipeline that captures, aligns, and merges a burst of frames to reduce noise and increase dynamic range. Our system has several key features that help make it robust and efficient. First, we do not use bracketed exposures. Instead, we capture frames of constant exposure, which makes alignment more robust, and we set this exposure low enough to avoid blowing out highlights. The resulting merged image has clean shadows and high bit depth, allowing us to apply standard HDR tone mapping methods. Second, we begin from Bayer raw frames rather than the demosaicked RGB (or YUV) frames produced by hardware Image Signal Processors (ISPs) common on mobile platforms. This gives us more bits per pixel and allows us to circumvent the ISP's unwanted tone mapping and spatial denoising. Third, we use a novel FFT-based alignment algorithm and a hybrid 2D/3D Wiener filter to denoise and merge the frames in a burst. Our implementation is built atop Android's Camera2 API, which provides per-frame camera control and access to raw imagery, and is written in the Halide domain-specific language (DSL). It runs in 4 seconds on device (for a 12 Mpix image), requires no user intervention, and ships on several mass-produced cell phones."
            },
            "slug": "Burst-photography-for-high-dynamic-range-and-on-Hasinoff-Sharlet",
            "title": {
                "fragments": [],
                "text": "Burst photography for high dynamic range and low-light imaging on mobile cameras"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "A computational photography pipeline that captures, aligns, and merges a burst of frames to reduce noise and increase dynamic range, built atop Android's Camera2 API and written in the Halide domain-specific language (DSL)."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47368718"
                        ],
                        "name": "Ravi Teja Mullapudi",
                        "slug": "Ravi-Teja-Mullapudi",
                        "structuredName": {
                            "firstName": "Ravi",
                            "lastName": "Mullapudi",
                            "middleNames": [
                                "Teja"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ravi Teja Mullapudi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2665634"
                        ],
                        "name": "Dillon Sharlet",
                        "slug": "Dillon-Sharlet",
                        "structuredName": {
                            "firstName": "Dillon",
                            "lastName": "Sharlet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dillon Sharlet"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2789576"
                        ],
                        "name": "Kayvon Fatahalian",
                        "slug": "Kayvon-Fatahalian",
                        "structuredName": {
                            "firstName": "Kayvon",
                            "lastName": "Fatahalian",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kayvon Fatahalian"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 14400771,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "9b240a87b11d085641d6640f73cc3cc2d678e305",
            "isKey": false,
            "numCitedBy": 129,
            "numCiting": 17,
            "paperAbstract": {
                "fragments": [],
                "text": "The Halide image processing language has proven to be an effective system for authoring high-performance image processing code. Halide programmers need only provide a high-level strategy for mapping an image processing pipeline to a parallel machine (a schedule), and the Halide compiler carries out the mechanical task of generating platform-specific code that implements the schedule. Unfortunately, designing high-performance schedules for complex image processing pipelines requires substantial knowledge of modern hardware architecture and code-optimization techniques. In this paper we provide an algorithm for automatically generating high-performance schedules for Halide programs. Our solution extends the function bounds analysis already present in the Halide compiler to automatically perform locality and parallelism-enhancing global program transformations typical of those employed by expert Halide developers. The algorithm does not require costly (and often impractical) auto-tuning, and, in seconds, generates schedules for a broad set of image processing benchmarks that are performance-competitive with, and often better than, schedules manually authored by expert Halide developers on server and mobile CPUs, as well as GPUs."
            },
            "slug": "Automatically-scheduling-halide-image-processing-Mullapudi-Adams",
            "title": {
                "fragments": [],
                "text": "Automatically scheduling halide image processing pipelines"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "An algorithm for automatically generating high-performance schedules for Halide programs that does not require costly (and often impractical) auto-tuning, and generates schedules for a broad set of image processing benchmarks that are performance-competitive with, and often better than, schedules manually authored by expert Halide developers on server and mobile CPUs, as well as GPUs."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144437216"
                        ],
                        "name": "I. Buck",
                        "slug": "I.-Buck",
                        "structuredName": {
                            "firstName": "Ian",
                            "lastName": "Buck",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Buck"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 9999617,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f9f7ef4d2138b1f667ce36b8ba873cd2889963fa",
            "isKey": false,
            "numCitedBy": 61,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Summary form only given. Many researchers have observed that general purpose computing with programmable graphics hardware (GPUs) has shown promise to solve many of the world's compute intensive problems, many orders of magnitude faster the conventional CPUs. The challenge has been working within the constraints of a graphics programming environment and limited language support to leverage this huge performance potential. GPU computing with CUDA is a new approach to computing where hundreds of on-chip processor cores simultaneously communicate and cooperate to solve complex computing problems, transforming the GPU into a massively parallel processor. The NVIDIA C-compiler for the GPU provides a complete development environment that gives developers the tools they need to solve new problems in computation-intensive applications such as product design, data analysis, technical computing, and game physics. In this talk, I will provide a description of how CUDA can solve compute intensive problems and highlight the challenges when compiling parallel programs for GPUs including the differences between graphics shaders vs. CUDA applications"
            },
            "slug": "GPU-Computing:-Programming-a-Massively-Parallel-Buck",
            "title": {
                "fragments": [],
                "text": "GPU Computing: Programming a Massively Parallel Processor"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "A description of how CUDA can solve compute intensive problems and highlights the challenges when compiling parallel programs for GPUs including the differences between graphics shaders vs. CUDA applications are provided."
            },
            "venue": {
                "fragments": [],
                "text": "International Symposium on Code Generation and Optimization (CGO'07)"
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48582897"
                        ],
                        "name": "Mathieu Aubry",
                        "slug": "Mathieu-Aubry",
                        "structuredName": {
                            "firstName": "Mathieu",
                            "lastName": "Aubry",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mathieu Aubry"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46784982"
                        ],
                        "name": "S. Paris",
                        "slug": "S.-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1979640"
                        ],
                        "name": "S. Hasinoff",
                        "slug": "S.-Hasinoff",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Hasinoff",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Hasinoff"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1690538"
                        ],
                        "name": "J. Kautz",
                        "slug": "J.-Kautz",
                        "structuredName": {
                            "firstName": "Jan",
                            "lastName": "Kautz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Kautz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 216153163,
            "fieldsOfStudy": [
                "Engineering"
            ],
            "id": "c01678b351c9c8faf4d9e1b07c1a92e052cbdf90",
            "isKey": false,
            "numCitedBy": 130,
            "numCiting": 46,
            "paperAbstract": {
                "fragments": [],
                "text": "Multiscale manipulations are central to image editing but also prone to halos. Achieving artifact-free results requires sophisticated edge-aware techniques and careful parameter tuning. These shortcomings were recently addressed by the local Laplacian filters, which can achieve a broad range of effects using standard Laplacian pyramids. However, these filters are slow to evaluate and their relationship to other approaches is unclear. In this article, we show that they are closely related to anisotropic diffusion and to bilateral filtering. Our study also leads to a variant of the bilateral filter that produces cleaner edges while retaining its speed. Building upon this result, we describe an acceleration scheme for local Laplacian filters on gray-scale images that yields speedups on the order of 50\u00d7. Finally, we demonstrate how to use local Laplacian filters to alter the distribution of gradients in an image. We illustrate this property with a robust algorithm for photographic style transfer."
            },
            "slug": "Fast-Local-Laplacian-Filters-Aubry-Paris",
            "title": {
                "fragments": [],
                "text": "Fast Local Laplacian Filters"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This article shows that local Laplacian filters are closely related to anisotropic diffusion and to bilateral filtering, and leads to a variant of the bilateral filter that produces cleaner edges while retaining its speed."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3050319"
                        ],
                        "name": "N. Govindaraju",
                        "slug": "N.-Govindaraju",
                        "structuredName": {
                            "firstName": "Naga",
                            "lastName": "Govindaraju",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Govindaraju"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145190959"
                        ],
                        "name": "Brandon Lloyd",
                        "slug": "Brandon-Lloyd",
                        "structuredName": {
                            "firstName": "Brandon",
                            "lastName": "Lloyd",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Brandon Lloyd"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143633460"
                        ],
                        "name": "Yuri Dotsenko",
                        "slug": "Yuri-Dotsenko",
                        "structuredName": {
                            "firstName": "Yuri",
                            "lastName": "Dotsenko",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuri Dotsenko"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1731660"
                        ],
                        "name": "Burton J. Smith",
                        "slug": "Burton-J.-Smith",
                        "structuredName": {
                            "firstName": "Burton",
                            "lastName": "Smith",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Burton J. Smith"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2070806"
                        ],
                        "name": "John Manferdelli",
                        "slug": "John-Manferdelli",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Manferdelli",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "John Manferdelli"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 17335272,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4f97e9854807b2fa3166519b54ee58e02ae317b8",
            "isKey": false,
            "numCitedBy": 201,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": "We present novel algorithms for computing discrete Fourier transforms with high performance on GPUs. We present hierarchical, mixed radix FFT algorithms for both power-of-two and non-power-of-two sizes. Our hierarchical FFT algorithms efficiently exploit shared memory on GPUs using a Stockham formulation. We reduce the memory transpose overheads in hierarchical algorithms by combining the transposes into a block-based multi-FFT algorithm. For non-power-of-two sizes, we use a combination of mixed radix FFTs of small primes and Bluestein's algorithm. We use modular arithmetic in Bluestein's algorithm to improve the accuracy. We implemented our algorithms using the NVIDIA CUDA API and compared their performance with NVIDIA's CUFFT library and an optimized CPU-implementation (Intel's MKL) on a high-end quad-core CPU. On an NVIDIA GPU, we obtained performance of up to 300 GFlops, with typical performance improvements of 2-4times over CUFFT and 8-40times improvement over MKL for large sizes."
            },
            "slug": "High-performance-discrete-Fourier-transforms-on-Govindaraju-Lloyd",
            "title": {
                "fragments": [],
                "text": "High performance discrete Fourier transforms on graphics processors"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This work implemented their algorithms using the NVIDIA CUDA API and compared their performance with NVIDIA's CUFFT library and an optimized CPU-implementation (Intel's MKL) on a high-end quad-core CPU."
            },
            "venue": {
                "fragments": [],
                "text": "2008 SC - International Conference for High Performance Computing, Networking, Storage and Analysis"
            },
            "year": 2008
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47368718"
                        ],
                        "name": "Ravi Teja Mullapudi",
                        "slug": "Ravi-Teja-Mullapudi",
                        "structuredName": {
                            "firstName": "Ravi",
                            "lastName": "Mullapudi",
                            "middleNames": [
                                "Teja"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ravi Teja Mullapudi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2032633"
                        ],
                        "name": "Vinay Vasista",
                        "slug": "Vinay-Vasista",
                        "structuredName": {
                            "firstName": "Vinay",
                            "lastName": "Vasista",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vinay Vasista"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1751936"
                        ],
                        "name": "Uday Bondhugula",
                        "slug": "Uday-Bondhugula",
                        "structuredName": {
                            "firstName": "Uday",
                            "lastName": "Bondhugula",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Uday Bondhugula"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 16016961,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0b9aaee517e0cabb274f5d7cfb01d8f58e51d76e",
            "isKey": false,
            "numCitedBy": 175,
            "numCiting": 53,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper presents the design and implementation of PolyMage, a domain-specific language and compiler for image processing pipelines. An image processing pipeline can be viewed as a graph of interconnected stages which process images successively. Each stage typically performs one of point-wise, stencil, reduction or data-dependent operations on image pixels. Individual stages in a pipeline typically exhibit abundant data parallelism that can be exploited with relative ease. However, the stages also require high memory bandwidth preventing effective utilization of parallelism available on modern architectures. For applications that demand high performance, the traditional options are to use optimized libraries like OpenCV or to optimize manually. While using libraries precludes optimization across library routines, manual optimization accounting for both parallelism and locality is very tedious. The focus of our system, PolyMage, is on automatically generating high-performance implementations of image processing pipelines expressed in a high-level declarative language. Our optimization approach primarily relies on the transformation and code generation capabilities of the polyhedral compiler framework. To the best of our knowledge, this is the first model-driven compiler for image processing pipelines that performs complex fusion, tiling, and storage optimization automatically. Experimental results on a modern multicore system show that the performance achieved by our automatic approach is up to 1.81x better than that achieved through manual tuning in Halide, a state-of-the-art language and compiler for image processing pipelines. For a camera raw image processing pipeline, our performance is comparable to that of a hand-tuned implementation."
            },
            "slug": "PolyMage:-Automatic-Optimization-for-Image-Mullapudi-Vasista",
            "title": {
                "fragments": [],
                "text": "PolyMage: Automatic Optimization for Image Processing Pipelines"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "This is the first model-driven compiler for image processing pipelines that performs complex fusion, tiling, and storage optimization automatically and is up to 1.81x better than that achieved through manual tuning in Halide, a state-of-the-art language and compiler forimage processing pipelines."
            },
            "venue": {
                "fragments": [],
                "text": "ASPLOS"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064163066"
                        ],
                        "name": "D. Blythe",
                        "slug": "D.-Blythe",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Blythe",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Blythe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 8286644,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d3de83b4fc0e9b410e8cae9d5873832cd9082a3d",
            "isKey": false,
            "numCitedBy": 269,
            "numCiting": 43,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a system architecture for the 4th generation of PC-class programmable graphics processing units (GPUs). The new pipeline features significant additions and changes to the prior generation pipeline including a new programmable stage capable of generating additional primitives and streaming primitive data to memory, an expanded, common feature set for all of the programmable stages, generalizations to vertex and image memory resources, and new storage formats. We also describe structural modifications to the API, runtime, and shading language to complement the new pipeline. We motivate the design with descriptions of frequently encountered obstacles in current systems. Throughout the paper we present rationale behind prominent design choices and alternatives that were ultimately rejected, drawing on insights collected during a multi-year collaboration with application developers and hardware designers."
            },
            "slug": "The-Direct3D-10-system-Blythe",
            "title": {
                "fragments": [],
                "text": "The Direct3D 10 system"
            },
            "tldr": {
                "abstractSimilarityScore": 69,
                "text": "The new pipeline features significant additions and changes to the prior generation pipeline including a new programmable stage capable of generating additional primitives and streaming primitive data to memory, an expanded, common feature set for all of the programmable stages, generalizations to vertex and image memory resources, and new storage formats."
            },
            "venue": {
                "fragments": [],
                "text": "SIGGRAPH '06"
            },
            "year": 2006
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2496412"
                        ],
                        "name": "Connelly Barnes",
                        "slug": "Connelly-Barnes",
                        "structuredName": {
                            "firstName": "Connelly",
                            "lastName": "Barnes",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Connelly Barnes"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 5885207,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4d23db55e6671a82c95dacec33b2967a4b8b677d",
            "isKey": false,
            "numCitedBy": 878,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "Image processing pipelines combine the challenges of stencil computations and stream programs. They are composed of large graphs of different stencil stages, as well as complex reductions, and stages with global or data-dependent access patterns. Because of their complex structure, the performance difference between a naive implementation of a pipeline and an optimized one is often an order of magnitude. Efficient implementations require optimization of both parallelism and locality, but due to the nature of stencils, there is a fundamental tension between parallelism, locality, and introducing redundant recomputation of shared values. We present a systematic model of the tradeoff space fundamental to stencil pipelines, a schedule representation which describes concrete points in this space for each stage in an image processing pipeline, and an optimizing compiler for the Halide image processing language that synthesizes high performance implementations from a Halide algorithm and a schedule. Combining this compiler with stochastic search over the space of schedules enables terse, composable programs to achieve state-of-the-art performance on a wide range of real image processing pipelines, and across different hardware architectures, including multicores with SIMD, and heterogeneous CPU+GPU execution. From simple Halide programs written in a few hours, we demonstrate performance up to 5x faster than hand-tuned C, intrinsics, and CUDA implementations optimized by experts over weeks or months, for image processing applications beyond the reach of past automatic compilers."
            },
            "slug": "Halide:-a-language-and-compiler-for-optimizing-and-Ragan-Kelley-Barnes",
            "title": {
                "fragments": [],
                "text": "Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A systematic model of the tradeoff space fundamental to stencil pipelines is presented, a schedule representation which describes concrete points in this space for each stage in an image processing pipeline, and an optimizing compiler for the Halide image processing language that synthesizes high performance implementations from a Halide algorithm and a schedule are presented."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI"
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1690697"
                        ],
                        "name": "Markus P\u00fcschel",
                        "slug": "Markus-P\u00fcschel",
                        "structuredName": {
                            "firstName": "Markus",
                            "lastName": "P\u00fcschel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Markus P\u00fcschel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144915495"
                        ],
                        "name": "Jos\u00e9 M. F. Moura",
                        "slug": "Jos\u00e9-M.-F.-Moura",
                        "structuredName": {
                            "firstName": "Jos\u00e9",
                            "lastName": "Moura",
                            "middleNames": [
                                "M.",
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jos\u00e9 M. F. Moura"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "33888389"
                        ],
                        "name": "Jeremy R. Johnson",
                        "slug": "Jeremy-R.-Johnson",
                        "structuredName": {
                            "firstName": "Jeremy",
                            "lastName": "Johnson",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jeremy R. Johnson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1729097"
                        ],
                        "name": "D. Padua",
                        "slug": "D.-Padua",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Padua",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Padua"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1956361"
                        ],
                        "name": "M. Veloso",
                        "slug": "M.-Veloso",
                        "structuredName": {
                            "firstName": "Manuela",
                            "lastName": "Veloso",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Veloso"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47525853"
                        ],
                        "name": "Bryan Singer",
                        "slug": "Bryan-Singer",
                        "structuredName": {
                            "firstName": "Bryan",
                            "lastName": "Singer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bryan Singer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2819266"
                        ],
                        "name": "Jianxin Xiong",
                        "slug": "Jianxin-Xiong",
                        "structuredName": {
                            "firstName": "Jianxin",
                            "lastName": "Xiong",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jianxin Xiong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1803350"
                        ],
                        "name": "F. Franchetti",
                        "slug": "F.-Franchetti",
                        "structuredName": {
                            "firstName": "Franz",
                            "lastName": "Franchetti",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Franchetti"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1815451"
                        ],
                        "name": "A. Gacic",
                        "slug": "A.-Gacic",
                        "structuredName": {
                            "firstName": "Aca",
                            "lastName": "Gacic",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Gacic"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2637756"
                        ],
                        "name": "Y. Voronenko",
                        "slug": "Y.-Voronenko",
                        "structuredName": {
                            "firstName": "Yevgen",
                            "lastName": "Voronenko",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Y. Voronenko"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1680073"
                        ],
                        "name": "Kang Chen",
                        "slug": "Kang-Chen",
                        "structuredName": {
                            "firstName": "Kang",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kang Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111257581"
                        ],
                        "name": "Robert W. Johnson",
                        "slug": "Robert-W.-Johnson",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Johnson",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Robert W. Johnson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2265224"
                        ],
                        "name": "Nicholas Rizzolo",
                        "slug": "Nicholas-Rizzolo",
                        "structuredName": {
                            "firstName": "Nicholas",
                            "lastName": "Rizzolo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nicholas Rizzolo"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 12427750,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0221bee380311d75ffcc11fd66be7d5cf632f636",
            "isKey": false,
            "numCitedBy": 867,
            "numCiting": 126,
            "paperAbstract": {
                "fragments": [],
                "text": "Fast changing, increasingly complex, and diverse computing platforms pose central problems in scientific computing: How to achieve, with reasonable effort, portable optimal performance? We present SPIRAL, which considers this problem for the performance-critical domain of linear digital signal processing (DSP) transforms. For a specified transform, SPIRAL automatically generates high-performance code that is tuned to the given platform. SPIRAL formulates the tuning as an optimization problem and exploits the domain-specific mathematical structure of transform algorithms to implement a feedback-driven optimizer. Similar to a human expert, for a specified transform, SPIRAL \"intelligently\" generates and explores algorithmic and implementation choices to find the best match to the computer's microarchitecture. The \"intelligence\" is provided by search and learning techniques that exploit the structure of the algorithm and implementation space to guide the exploration and optimization. SPIRAL generates high-performance code for a broad set of DSP transforms, including the discrete Fourier transform, other trigonometric transforms, filter transforms, and discrete wavelet transforms. Experimental results show that the code generated by SPIRAL competes with, and sometimes outperforms, the best available human tuned transform library code."
            },
            "slug": "SPIRAL:-Code-Generation-for-DSP-Transforms-P\u00fcschel-Moura",
            "title": {
                "fragments": [],
                "text": "SPIRAL: Code Generation for DSP Transforms"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "SPIRAL generates high-performance code for a broad set of DSP transforms, including the discrete Fourier transform, other trigonometric transforms, filter transforms, and discrete wavelet transforms."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the IEEE"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1967685"
                        ],
                        "name": "Jiawen Chen",
                        "slug": "Jiawen-Chen",
                        "structuredName": {
                            "firstName": "Jiawen",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jiawen Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 13028666,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4ef0a1200a1d9e69a291184d5c4c7cffc562135f",
            "isKey": false,
            "numCitedBy": 312,
            "numCiting": 31,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a new data structure---the bilateral grid, that enables fast edge-aware image processing. By working in the bilateral grid, algorithms such as bilateral filtering, edge-aware painting, and local histogram equalization become simple manipulations that are both local and independent. We parallelize our algorithms on modern GPUs to achieve real-time frame rates on high-definition video. We demonstrate our method on a variety of applications such as image editing, transfer of photographic look, and contrast enhancement of medical images."
            },
            "slug": "Real-time-edge-aware-image-processing-with-the-grid-Chen-Paris",
            "title": {
                "fragments": [],
                "text": "Real-time edge-aware image processing with the bilateral grid"
            },
            "tldr": {
                "abstractSimilarityScore": 69,
                "text": "A new data structure---the bilateral grid, that enables fast edge-aware image processing that parallelize the algorithms on modern GPUs to achieve real-time frame rates on high-definition video."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48230516"
                        ],
                        "name": "Matteo Frigo",
                        "slug": "Matteo-Frigo",
                        "structuredName": {
                            "firstName": "Matteo",
                            "lastName": "Frigo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matteo Frigo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2097716"
                        ],
                        "name": "Steven G. Johnson",
                        "slug": "Steven-G.-Johnson",
                        "structuredName": {
                            "firstName": "Steven",
                            "lastName": "Johnson",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Steven G. Johnson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6644892,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f8e9b050c93af6dea582563f61b6460b590bc3af",
            "isKey": false,
            "numCitedBy": 4558,
            "numCiting": 81,
            "paperAbstract": {
                "fragments": [],
                "text": "FFTW is an implementation of the discrete Fourier transform (DFT) that adapts to the hardware in order to maximize performance. This paper shows that such an approach can yield an implementation that is competitive with hand-optimized libraries, and describes the software structure that makes our current FFTW3 version flexible and adaptive. We further discuss a new algorithm for real-data DFTs of prime size, a new way of implementing DFTs by means of machine-specific single-instruction, multiple-data (SIMD) instructions, and how a special-purpose compiler can derive optimized implementations of the discrete cosine and sine transforms automatically from a DFT algorithm."
            },
            "slug": "The-Design-and-Implementation-of-FFTW3-Frigo-Johnson",
            "title": {
                "fragments": [],
                "text": "The Design and Implementation of FFTW3"
            },
            "tldr": {
                "abstractSimilarityScore": 52,
                "text": "It is shown that such an approach can yield an implementation of the discrete Fourier transform that is competitive with hand-optimized libraries, and the software structure that makes the current FFTW3 version flexible and adaptive is described."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the IEEE"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1678228"
                        ],
                        "name": "D. Bacon",
                        "slug": "D.-Bacon",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Bacon",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Bacon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111178"
                        ],
                        "name": "S. Graham",
                        "slug": "S.-Graham",
                        "structuredName": {
                            "firstName": "Susan",
                            "lastName": "Graham",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Graham"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2990426"
                        ],
                        "name": "Oliver J. Sharp",
                        "slug": "Oliver-J.-Sharp",
                        "structuredName": {
                            "firstName": "Oliver",
                            "lastName": "Sharp",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Oliver J. Sharp"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1338971,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "89dddec47974ddf33fe8eb16c0232ab255479807",
            "isKey": false,
            "numCitedBy": 911,
            "numCiting": 341,
            "paperAbstract": {
                "fragments": [],
                "text": "In the last three decades a large number of compiler transformations for optimizing programs have been implemented. Most optimizations for uniprocessors reduce the number of instructions executed by the program using transformations based on the analysis of scalar quantities and data-flow techniques. In contrast, optimizations for high-performance superscalar, vector, and parallel processors maximize parallelism and memory locality with transformations that rely on tracking the properties of arrays using loop dependence analysis.\nThis survey is a comprehensive overview of the important high-level program restructuring techniques for imperative languages, such as C and Fortran. Transformations for both sequential and various types of parallel architectures are covered in depth. We describe the purpose of each transformation, explain how to determine if it is legal, and give an example of its application.\nProgrammers wishing to enhance the performance of their code can use this survey to improve their understanding of the optimizations that compilers can perform, or as a reference for techniques to be applied manually. Students can obtain an overview of optimizing compiler technology. Compiler writers can use this survey as a reference for most of the important optimizations developed to date, and as bibliographic reference for the details of each optimization. Readers are expected to be familiar with modern computer architecture and basic program compilation techniques."
            },
            "slug": "Compiler-transformations-for-high-performance-Bacon-Graham",
            "title": {
                "fragments": [],
                "text": "Compiler transformations for high-performance computing"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "This survey is a comprehensive overview of the important high-level program restructuring techniques for imperative languages, such as C and Fortran, and describes the purpose of each transformation, how to determine if it is legal, and an example of its application."
            },
            "venue": {
                "fragments": [],
                "text": "CSUR"
            },
            "year": 1994
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1838186"
                        ],
                        "name": "P. Feautrier",
                        "slug": "P.-Feautrier",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Feautrier",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Feautrier"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 5738544,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "7cd685371e267a499ded869a934a4cffed591aec",
            "isKey": false,
            "numCitedBy": 454,
            "numCiting": 52,
            "paperAbstract": {
                "fragments": [],
                "text": "Given a program written in a simple imperative language (assignment statements,for loops, affine indices and loop limits), this paper presents an algorithm for analyzing the patterns along which values flow as the execution proceeds. For each array or scalar reference, the result is the name and iteration vector of the source statement as a function of the iteration vector of the referencing statement. The paper discusses several applications of the method: conversion of a program to a set of recurrence equations, array and scalar expansion, program verification and parallel program construction."
            },
            "slug": "Dataflow-analysis-of-array-and-scalar-references-Feautrier",
            "title": {
                "fragments": [],
                "text": "Dataflow analysis of array and scalar references"
            },
            "tldr": {
                "abstractSimilarityScore": 52,
                "text": "This paper presents an algorithm for analyzing the patterns along which values flow as the execution proceeds, and discusses several applications of the method: conversion of a program to a set of recurrence equations, array and scalar expansion, program verification and parallel program construction."
            },
            "venue": {
                "fragments": [],
                "text": "International Journal of Parallel Programming"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2789576"
                        ],
                        "name": "Kayvon Fatahalian",
                        "slug": "Kayvon-Fatahalian",
                        "structuredName": {
                            "firstName": "Kayvon",
                            "lastName": "Fatahalian",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kayvon Fatahalian"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144353929"
                        ],
                        "name": "D. Horn",
                        "slug": "D.-Horn",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Horn",
                            "middleNames": [
                                "Reiter"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Horn"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "33524821"
                        ],
                        "name": "T. Knight",
                        "slug": "T.-Knight",
                        "structuredName": {
                            "firstName": "Timothy",
                            "lastName": "Knight",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Knight"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3076242"
                        ],
                        "name": "L. Leem",
                        "slug": "L.-Leem",
                        "structuredName": {
                            "firstName": "Larkhoon",
                            "lastName": "Leem",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Leem"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "21387495"
                        ],
                        "name": "M. Houston",
                        "slug": "M.-Houston",
                        "structuredName": {
                            "firstName": "Mike",
                            "lastName": "Houston",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Houston"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2116022755"
                        ],
                        "name": "Ji Young Park",
                        "slug": "Ji-Young-Park",
                        "structuredName": {
                            "firstName": "Ji",
                            "lastName": "Park",
                            "middleNames": [
                                "Young"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ji Young Park"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143676711"
                        ],
                        "name": "M. Erez",
                        "slug": "M.-Erez",
                        "structuredName": {
                            "firstName": "Mattan",
                            "lastName": "Erez",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Erez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50768112"
                        ],
                        "name": "Manman Ren",
                        "slug": "Manman-Ren",
                        "structuredName": {
                            "firstName": "Manman",
                            "lastName": "Ren",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Manman Ren"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144653825"
                        ],
                        "name": "A. Aiken",
                        "slug": "A.-Aiken",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Aiken",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Aiken"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "80724002"
                        ],
                        "name": "W. Dally",
                        "slug": "W.-Dally",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Dally",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Dally"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144872229"
                        ],
                        "name": "P. Hanrahan",
                        "slug": "P.-Hanrahan",
                        "structuredName": {
                            "firstName": "Pat",
                            "lastName": "Hanrahan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Hanrahan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 8396510,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0ac7e127033f1534bb2042461c653784dcf29b55",
            "isKey": false,
            "numCitedBy": 394,
            "numCiting": 48,
            "paperAbstract": {
                "fragments": [],
                "text": "We present Sequoia, a programming language designed to facilitate the development of memory hierarchy aware parallel programs that remain portable across modern machines featuring different memory hierarchy configurations. Sequoia abstractly exposes hierarchical memory in the programming model and provides language mechanisms to describe communication vertically through the machine and to localize computation to particular memory locations within it. We have implemented a complete programming system, including a compiler and runtime systems for cell processor-based blade systems and distributed memory clusters, and demonstrate efficient performance running Sequoia programs on both of these platforms"
            },
            "slug": "Sequoia:-Programming-the-Memory-Hierarchy-Fatahalian-Horn",
            "title": {
                "fragments": [],
                "text": "Sequoia: Programming the Memory Hierarchy"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This work has implemented a complete programming system, including a compiler and runtime systems for cell processor-based blade systems and distributed memory clusters, and demonstrates efficient performance running Sequoia programs on both of these platforms."
            },
            "venue": {
                "fragments": [],
                "text": "ACM/IEEE SC 2006 Conference (SC'06)"
            },
            "year": 2006
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2341914"
                        ],
                        "name": "Michael I. Gordon",
                        "slug": "Michael-I.-Gordon",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Gordon",
                            "middleNames": [
                                "I."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michael I. Gordon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1718457"
                        ],
                        "name": "William Thies",
                        "slug": "William-Thies",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Thies",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "William Thies"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1739385"
                        ],
                        "name": "M. Karczmarek",
                        "slug": "M.-Karczmarek",
                        "structuredName": {
                            "firstName": "Michal",
                            "lastName": "Karczmarek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Karczmarek"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48208672"
                        ],
                        "name": "Jasper Lin",
                        "slug": "Jasper-Lin",
                        "structuredName": {
                            "firstName": "Jasper",
                            "lastName": "Lin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jasper Lin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2602165"
                        ],
                        "name": "Ali S. Meli",
                        "slug": "Ali-S.-Meli",
                        "structuredName": {
                            "firstName": "Ali",
                            "lastName": "Meli",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ali S. Meli"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32689850"
                        ],
                        "name": "Andrew A. Lamb",
                        "slug": "Andrew-A.-Lamb",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Lamb",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew A. Lamb"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2070611374"
                        ],
                        "name": "Chris Leger",
                        "slug": "Chris-Leger",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Leger",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chris Leger"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1643893286"
                        ],
                        "name": "J.S.S.M. Wong",
                        "slug": "J.S.S.M.-Wong",
                        "structuredName": {
                            "firstName": "J.S.S.M.",
                            "lastName": "Wong",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J.S.S.M. Wong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144704832"
                        ],
                        "name": "H. Hoffmann",
                        "slug": "H.-Hoffmann",
                        "structuredName": {
                            "firstName": "Henry",
                            "lastName": "Hoffmann",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Hoffmann"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144604583"
                        ],
                        "name": "David Maze",
                        "slug": "David-Maze",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Maze",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David Maze"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 110712,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4ce393506dc1e0ddbc65225d2dad24d31d430c90",
            "isKey": false,
            "numCitedBy": 370,
            "numCiting": 39,
            "paperAbstract": {
                "fragments": [],
                "text": "With the increasing miniaturization of transistors, wire delays are becoming a dominant factor in microprocessor performance. To address this issue, a number of emerging architectures contain replicated processing units with software-exposed communication between one unit and another (e.g., Raw, SmartMemories, TRIPS). However, for their use to be widespread, it will be necessary to develop compiler technology that enables a portable, high-level language to execute efficiently across a range of wire-exposed architectures.In this paper, we describe our compiler for StreamIt: a high-level, architecture-independent language for streaming applications. We focus on our backend for the Raw processor. Though StreamIt exposes the parallelism and communication patterns of stream programs, some analysis is needed to adapt a stream program to a software-exposed processor. We describe a partitioning algorithm that employs fission and fusion transformations to adjust the granularity of a stream graph, a layout algorithm that maps a stream graph to a given network topology, and a scheduling strategy that generates a fine-grained static communication pattern for each computational element.We have implemented a fully functional compiler that parallelizes StreamIt applications for Raw, including several load-balancing transformations. Using the cycle-accurate Raw simulator, we demonstrate that the StreamIt compiler can automatically map a high-level stream abstraction to Raw without losing performance. We consider this work to be a first step towards a portable programming model for communication-exposed architectures."
            },
            "slug": "A-stream-compiler-for-communication-exposed-Gordon-Thies",
            "title": {
                "fragments": [],
                "text": "A stream compiler for communication-exposed architectures"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "This paper describes a fully functional compiler that parallelizes StreamIt applications for Raw, including several load-balancing transformations, and demonstrates that the StreamIt compiler can automatically map a high-level stream abstraction to Raw without losing performance."
            },
            "venue": {
                "fragments": [],
                "text": "ASPLOS X"
            },
            "year": 2002
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1835962"
                        ],
                        "name": "B. Chamberlain",
                        "slug": "B.-Chamberlain",
                        "structuredName": {
                            "firstName": "Bradford",
                            "lastName": "Chamberlain",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Chamberlain"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153281265"
                        ],
                        "name": "D. Callahan",
                        "slug": "D.-Callahan",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Callahan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Callahan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1772879"
                        ],
                        "name": "H. Zima",
                        "slug": "H.-Zima",
                        "structuredName": {
                            "firstName": "Hans",
                            "lastName": "Zima",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Zima"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 16560631,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "24f093129e03eb7e8911d9556d70d90153e81584",
            "isKey": false,
            "numCitedBy": 945,
            "numCiting": 90,
            "paperAbstract": {
                "fragments": [],
                "text": "In this paper we consider productivity challenges for parallel programmers and explore ways that parallel language design might help improve end-user productivity. We offer a candidate list of desirable qualities for a parallel programming language, and describe how these qualities are addressed in the design of the Chapel language. In doing so, we provide an overview of Chapel's features and how they help address parallel productivity. We also survey current techniques for parallel programming and describe ways in which we consider them to fall short of our idealized productive programming model."
            },
            "slug": "Parallel-Programmability-and-the-Chapel-Language-Chamberlain-Callahan",
            "title": {
                "fragments": [],
                "text": "Parallel Programmability and the Chapel Language"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "A candidate list of desirable qualities for a parallel programming language is offered, and how these qualities are addressed in the design of the Chapel language is described, providing an overview of Chapel's features and how they help address parallel productivity."
            },
            "venue": {
                "fragments": [],
                "text": "Int. J. High Perform. Comput. Appl."
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145506199"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2059096618"
                        ],
                        "name": "David E. Jacobs",
                        "slug": "David-E.-Jacobs",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Jacobs",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David E. Jacobs"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2889257"
                        ],
                        "name": "Jennifer Dolson",
                        "slug": "Jennifer-Dolson",
                        "structuredName": {
                            "firstName": "Jennifer",
                            "lastName": "Dolson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jennifer Dolson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717236"
                        ],
                        "name": "M. Tico",
                        "slug": "M.-Tico",
                        "structuredName": {
                            "firstName": "Marius",
                            "lastName": "Tico",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Tico"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1704409"
                        ],
                        "name": "K. Pulli",
                        "slug": "K.-Pulli",
                        "structuredName": {
                            "firstName": "Kari",
                            "lastName": "Pulli",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Pulli"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3129635"
                        ],
                        "name": "Eino-Ville Talvala",
                        "slug": "Eino-Ville-Talvala",
                        "structuredName": {
                            "firstName": "Eino-Ville",
                            "lastName": "Talvala",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eino-Ville Talvala"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2027612"
                        ],
                        "name": "B. Ajdin",
                        "slug": "B.-Ajdin",
                        "structuredName": {
                            "firstName": "Boris",
                            "lastName": "Ajdin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Ajdin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2000950"
                        ],
                        "name": "D. Vaquero",
                        "slug": "D.-Vaquero",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Vaquero",
                            "middleNames": [
                                "Andr\u00e9"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Vaquero"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1809190"
                        ],
                        "name": "H. Lensch",
                        "slug": "H.-Lensch",
                        "structuredName": {
                            "firstName": "Hendrik",
                            "lastName": "Lensch",
                            "middleNames": [
                                "P.",
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Lensch"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144764327"
                        ],
                        "name": "M. Horowitz",
                        "slug": "M.-Horowitz",
                        "structuredName": {
                            "firstName": "Mark",
                            "lastName": "Horowitz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Horowitz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2115277036"
                        ],
                        "name": "S. H. Park",
                        "slug": "S.-H.-Park",
                        "structuredName": {
                            "firstName": "Sung",
                            "lastName": "Park",
                            "middleNames": [
                                "Hee"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. H. Park"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1683095"
                        ],
                        "name": "N. Gelfand",
                        "slug": "N.-Gelfand",
                        "structuredName": {
                            "firstName": "Natasha",
                            "lastName": "Gelfand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Gelfand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1969961"
                        ],
                        "name": "Jongmin Baek",
                        "slug": "Jongmin-Baek",
                        "structuredName": {
                            "firstName": "Jongmin",
                            "lastName": "Baek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jongmin Baek"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1752521"
                        ],
                        "name": "W. Matusik",
                        "slug": "W.-Matusik",
                        "structuredName": {
                            "firstName": "Wojciech",
                            "lastName": "Matusik",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Matusik"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1801789"
                        ],
                        "name": "M. Levoy",
                        "slug": "M.-Levoy",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Levoy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Levoy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 10154698,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5a13b81891828290426e94f74815a8cc88b05645",
            "isKey": false,
            "numCitedBy": 100,
            "numCiting": 48,
            "paperAbstract": {
                "fragments": [],
                "text": "Although there has been much interest in computational photography within the research and photography communities, progress has been hampered by the lack of a portable, programmable camera with sufficient image quality and computing power. To address this problem, we have designed and implemented an open architecture and application programming interface (API) for such cameras: the Frankencamera. It consists of a base hardware specification, a software stack based on Linux, and an API for C++. Our architecture permits control and synchronization of the sensor and image processing pipeline at the microsecond timescale, as well as the ability to incorporate and synchronize external hardware like lenses and flashes. This paper specifies our architecture and API, and it describes two reference implementations we have built. Using these implementations, we demonstrate several computational photography applications: high dynamic range (HDR) viewfinding and capture, automated acquisition of extended dynamic range panoramas, foveal imaging, and inertial measurement unit (IMU)-based hand shake detection. Our goal is to standardize the architecture and distribute Frankencameras to researchers and students, as a step toward creating a community of photographer-programmers who develop algorithms, applications, and hardware for computational cameras."
            },
            "slug": "The-Frankencamera:-an-experimental-platform-for-Adams-Jacobs",
            "title": {
                "fragments": [],
                "text": "The Frankencamera: an experimental platform for computational photography"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "The architecture and API of the Frankencamera are designed and implemented, and two reference implementations are described, which demonstrate several computational photography applications: high dynamic range viewfinding and capture, automated acquisition of extended dynamic range panoramas, foveal imaging, and inertial measurement unit-based hand shake detection."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1801789"
                        ],
                        "name": "M. Levoy",
                        "slug": "M.-Levoy",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Levoy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Levoy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 9001340,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3e06546182d5a36796a0f48e70151bf1d38e094d",
            "isKey": false,
            "numCitedBy": 247,
            "numCiting": 51,
            "paperAbstract": {
                "fragments": [],
                "text": "Using existing programming tools, writing high-performance image processing code requires sacrificing readability, portability, and modularity. We argue that this is a consequence of conflating what computations define the algorithm, with decisions about storage and the order of computation. We refer to these latter two concerns as the schedule, including choices of tiling, fusion, recomputation vs. storage, vectorization, and parallelism. We propose a representation for feed-forward imaging pipelines that separates the algorithm from its schedule, enabling high-performance without sacrificing code clarity. This decoupling simplifies the algorithm specification: images and intermediate buffers become functions over an infinite integer domain, with no explicit storage or boundary conditions. Imaging pipelines are compositions of functions. Programmers separately specify scheduling strategies for the various functions composing the algorithm, which allows them to efficiently explore different optimizations without changing the algorithmic code. We demonstrate the power of this representation by expressing a range of recent image processing applications in an embedded domain specific language called Halide, and compiling them for ARM, x86, and GPUs. Our compiler targets SIMD units, multiple cores, and complex memory hierarchies. We demonstrate that it can handle algorithms such as a camera raw pipeline, the bilateral grid, fast local Laplacian filtering, and image segmentation. The algorithms expressed in our language are both shorter and faster than state-of-the-art implementations."
            },
            "slug": "Decoupling-algorithms-from-schedules-for-easy-of-Ragan-Kelley-Adams",
            "title": {
                "fragments": [],
                "text": "Decoupling algorithms from schedules for easy optimization of image processing pipelines"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This work proposes a representation for feed-forward imaging pipelines that separates the algorithm from its schedule, enabling high-performance without sacrificing code clarity, and demonstrates the power of this representation by expressing a range of recent image processing applications in an embedded domain specific language called Halide and compiling them for ARM, x86, and GPUs."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The design and implementation of FFTW 3"
            },
            "venue": {
                "fragments": [],
                "text": "Proc IEEE"
            },
            "year": 1991
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A stream compiler for communicationexposed architectures"
            },
            "venue": {
                "fragments": [],
                "text": "International Conference on Architectural Support for Programming Languages and Operating Systems"
            },
            "year": 2005
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Programming the memory hierarchy"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The Direct 3 D 10 system"
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans . Graph ."
            },
            "year": 1994
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {},
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 29,
        "totalPages": 3
    },
    "page_url": "https://www.semanticscholar.org/paper/Halide:-decoupling-algorithms-from-schedules-for-Ragan-Kelley-Adams/255f645102919a7c3e451cac9b8f0f07c0a882c1?sort=total-citations"
}