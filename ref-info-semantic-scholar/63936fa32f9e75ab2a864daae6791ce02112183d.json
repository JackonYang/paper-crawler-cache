{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35525979"
                        ],
                        "name": "T. Oliphant",
                        "slug": "T.-Oliphant",
                        "structuredName": {
                            "firstName": "Travis",
                            "lastName": "Oliphant",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Oliphant"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 206457124,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c647e8d93d85cdc6fb8c19deaf2eb9ec5c8d8941",
            "isKey": false,
            "numCitedBy": 2678,
            "numCiting": 1,
            "paperAbstract": {
                "fragments": [],
                "text": "Python is an excellent \"steering\" language for scientific codes written in other languages. However, with additional basic tools, Python transforms into a high-level language suited for scientific and engineering code that's often fast enough to be immediately useful but also flexible enough to be sped up with additional extensions."
            },
            "slug": "Python-for-Scientific-Computing-Oliphant",
            "title": {
                "fragments": [],
                "text": "Python for Scientific Computing"
            },
            "tldr": {
                "abstractSimilarityScore": 96,
                "text": "Python is an excellent \"steering\" language for scientific codes written in other languages, but with additional basic tools, it transforms into a high-level language suited for scientific and engineering code that's often fastenough to be immediately useful but also flexible enough to be sped up with additional extensions."
            },
            "venue": {
                "fragments": [],
                "text": "Computing in Science & Engineering"
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1708869"
                        ],
                        "name": "J. Dongarra",
                        "slug": "J.-Dongarra",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Dongarra",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dongarra"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1760847"
                        ],
                        "name": "J. D. Croz",
                        "slug": "J.-D.-Croz",
                        "structuredName": {
                            "firstName": "Jeremy",
                            "lastName": "Croz",
                            "middleNames": [
                                "Du"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. D. Croz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1776509"
                        ],
                        "name": "S. Hammarling",
                        "slug": "S.-Hammarling",
                        "structuredName": {
                            "firstName": "Sven",
                            "lastName": "Hammarling",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Hammarling"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1804540"
                        ],
                        "name": "I. Duff",
                        "slug": "I.-Duff",
                        "structuredName": {
                            "firstName": "Iain",
                            "lastName": "Duff",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Duff"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 38476877,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "eb4f23afcc86609d9fc5fe90000d9db44cb3e575",
            "isKey": false,
            "numCitedBy": 296,
            "numCiting": 11,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper describes a model implementation and test software for the Level 2 Basic Linear Algebra Subprograms (Level 2 BLAS). Level 2 BLAS are targeted at matrix-vector operations with the aim of providing more efficient but portable, implementations of algorithms on high-performance computers. The model implementation provides a portable set of FORTRAN 77 Level 2 BLAS for machines where specialized implementations do not exists or are not required. The test software aims to verify that specialized implementations meet the specification of Level 2 BLAS that implementations are correctly installed"
            },
            "slug": "Algorithm-679:-A-set-of-level-3-basic-linear-model-Dongarra-Croz",
            "title": {
                "fragments": [],
                "text": "Algorithm 679: A set of level 3 basic linear algebra subprograms: model implementation and test programs"
            },
            "tldr": {
                "abstractSimilarityScore": 68,
                "text": "A model implementation and test software for the Level 2 Basic Linear Algebra Subprograms, targeted at matrix-vector operations, provide a portable set of FORTRAN 77 Level 2 BLAS for machines where specialized implementations do not exists or are not required."
            },
            "venue": {
                "fragments": [],
                "text": "TOMS"
            },
            "year": 1990
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "115292111"
                        ],
                        "name": "P. L\u2019Ecuyer",
                        "slug": "P.-L\u2019Ecuyer",
                        "structuredName": {
                            "firstName": "Pierre",
                            "lastName": "L\u2019Ecuyer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. L\u2019Ecuyer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47309804"
                        ],
                        "name": "F. Blouin",
                        "slug": "F.-Blouin",
                        "structuredName": {
                            "firstName": "Fran\u00e7ois",
                            "lastName": "Blouin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Blouin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1782038"
                        ],
                        "name": "R. Couture",
                        "slug": "R.-Couture",
                        "structuredName": {
                            "firstName": "Raymond",
                            "lastName": "Couture",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Couture"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 8034105,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "80acf323f9bd02e5139f93915cfb749174fd7330",
            "isKey": false,
            "numCitedBy": 117,
            "numCiting": 38,
            "paperAbstract": {
                "fragments": [],
                "text": "We report the results of an extensive computer search for good multiple recursive generators, in terms of their lattice structure and implementation speed. Those generators are a little slower than the usual linear congruential generators, but have much longer periods and much better statistical properties. We provide specific parameter sets for 32-bit, 48-bit, and 64-bit computers. We also explain how to build efficient portable implementations and give examples of computer codes in Pascal and C."
            },
            "slug": "A-search-for-good-multiple-recursive-random-number-L\u2019Ecuyer-Blouin",
            "title": {
                "fragments": [],
                "text": "A search for good multiple recursive random number generators"
            },
            "tldr": {
                "abstractSimilarityScore": 90,
                "text": "An extensive computer search for good multiple recursive generators, in terms of their lattice structure and implementation speed, finds generators that are a little slower than the usual linear congruential generators, but have much longer periods and much better statistical properties."
            },
            "venue": {
                "fragments": [],
                "text": "TOMC"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1770186"
                        ],
                        "name": "A. Benveniste",
                        "slug": "A.-Benveniste",
                        "structuredName": {
                            "firstName": "Albert",
                            "lastName": "Benveniste",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Benveniste"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47085520"
                        ],
                        "name": "M. M\u00e9tivier",
                        "slug": "M.-M\u00e9tivier",
                        "structuredName": {
                            "firstName": "Michel",
                            "lastName": "M\u00e9tivier",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. M\u00e9tivier"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2174182"
                        ],
                        "name": "P. Priouret",
                        "slug": "P.-Priouret",
                        "structuredName": {
                            "firstName": "Pierre",
                            "lastName": "Priouret",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Priouret"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 60753831,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "990b10ce4ef643e148b6c719e99dbf2430671a74",
            "isKey": false,
            "numCitedBy": 1949,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Adaptive systems are widely encountered in many applications ranging through adaptive filtering and more generally adaptive signal processing, systems identification and adaptive control, to pattern recognition and machine intelligence: adaptation is now recognised as keystone of \"intelligence\" within computerised systems. These diverse areas echo the classes of models which conveniently describe each corresponding system. Thus although there can hardly be a \"general theory of adaptive systems\" encompassing both the modelling task and the design of the adaptation procedure, nevertheless, these diverse issues have a major common component: namely the use of adaptive algorithms, also known as stochastic approximations in the mathematical statistics literature, that is to say the adaptation procedure (once all modelling problems have been resolved). The juxtaposition of these two expressions in the title reflects the ambition of the authors to produce a reference work, both for engineers who use these adaptive algorithms and for probabilists or statisticians who would like to study stochastic approximations in terms of problems arising from real applications. Hence the book is organised in two parts, the first one user-oriented, and the second providing the mathematical foundations to support the practice described in the first part. The book covers the topcis of convergence, convergence rate, permanent adaptation and tracking, change detection, and is illustrated by various realistic applications originating from these areas of applications."
            },
            "slug": "Adaptive-Algorithms-and-Stochastic-Approximations-Benveniste-M\u00e9tivier",
            "title": {
                "fragments": [],
                "text": "Adaptive Algorithms and Stochastic Approximations"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "The juxtaposition of these two expressions in the title reflects the ambition of the authors to produce a reference work, both for engineers who use adaptive algorithms and for probabilists or statisticians who would like to study stochastic approximations in terms of problems arising from real applications."
            },
            "venue": {
                "fragments": [],
                "text": "Applications of Mathematics"
            },
            "year": 1990
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1396324435"
                        ],
                        "name": "E. Anderson",
                        "slug": "E.-Anderson",
                        "structuredName": {
                            "firstName": "Edward",
                            "lastName": "Anderson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Anderson"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 221942096,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "14dc304f9954930194a332fd759cfb255b12b6bb",
            "isKey": false,
            "numCitedBy": 2077,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Preface to the third edition Preface to the secondedition Part 1. Guide. 1. Essentials 2. Contents of LAPACK 3. Performance of LAPACK 4. Accuracy and Stability 5. Documentation and Software Conventions 6. Installing LAPACK Routines 7. Troubleshooting Appendix A. Index of Driver and Computational Routines Appendix B. Index of Auxiliary Routines Appendix C. Quick Reference Guide to the BLAS Appendix D. Converting from LINPACK or EISPACK Appendix E. LAPACK Working Notes Part 2. Specifications of Routines. Bibliography Index by Keyword Index by Routine Name."
            },
            "slug": "LAPACK-Users'-Guide-Anderson",
            "title": {
                "fragments": [],
                "text": "LAPACK Users' Guide"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "The third edition of LAPACK provided a guide to troubleshooting and installation of Routines, as well as providing examples of how to convert from LINPACK or EISPACK to BLAS."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1987
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1387119791"
                        ],
                        "name": "F. Alted",
                        "slug": "F.-Alted",
                        "structuredName": {
                            "firstName": "Francesc",
                            "lastName": "Alted",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Alted"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 42357830,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d42581535e2c593e04de7ca653ec6f755596c1c1",
            "isKey": false,
            "numCitedBy": 63,
            "numCiting": 5,
            "paperAbstract": {
                "fragments": [],
                "text": "CPUs spend most of their time waiting for data to arrive. Identifying low-level bottlenecks-and how to ameliorate them-can save hours of frustration over poor performance in apparently well-written programs."
            },
            "slug": "Why-Modern-CPUs-Are-Starving-and-What-Can-Be-Done-Alted",
            "title": {
                "fragments": [],
                "text": "Why Modern CPUs Are Starving and What Can Be Done about It"
            },
            "tldr": {
                "abstractSimilarityScore": 64,
                "text": "Identifying low-level bottlenecks-and how to ameliorate them-can save hours of frustration over poor performance in apparently well-written programs."
            },
            "venue": {
                "fragments": [],
                "text": "Computing in Science & Engineering"
            },
            "year": 2010
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Algorithm 679: A set of Level 3 Basic Linear Algebra Subprograms LAPACK Users' Guide, Third Edition"
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Math. Soft"
            },
            "year": 1990
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "EBLearn: Energy Based Learning, a C++ Machine Learning Library \" . http://eblearn. sourceforge.net/ [gpumat A Search for Good Multiple Recursive Generators"
            },
            "venue": {
                "fragments": [],
                "text": "ACM Transactions on Modeling and Computer Simulation"
            },
            "year": 1993
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "SymPy: Python Library for Symbolic Mathematics"
            },
            "venue": {
                "fragments": [],
                "text": "SymPy: Python Library for Symbolic Mathematics"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "SciPy Weave module"
            },
            "venue": {
                "fragments": [],
                "text": "SciPy Weave module"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "LAPACK Users' Guide, Third Edition \" . http://www.netlib.org/lapack/lug/index.html [DLT] Deep Learning Tutorials. http://deeplearning.net/tutorial/ [dlb] Benchmarking code: http://github"
            },
            "venue": {
                "fragments": [],
                "text": "com/pascanur/ DeepLearningBenchmarks PROC. OF THE 9th PYTHON IN SCIENCE CONF"
            },
            "year": 2010
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "SymPy ] SymPy Development Team . \u201c SymPy : Python Library for Symbolic Mathematics \u201d"
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans . Math . Soft ."
            },
            "year": 1998
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Cython: C-Extensions for Python"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A Search for Good Multiple Recursive Generators"
            },
            "venue": {
                "fragments": [],
                "text": "ACM Transactions on Modeling and Computer Simulation,"
            },
            "year": 1993
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Online Algorithms and Stochastic Approximations"
            },
            "venue": {
                "fragments": [],
                "text": "ed. Online Learning and Neural Networks"
            },
            "year": 1998
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Cython: C-Extensions for Python"
            },
            "venue": {
                "fragments": [],
                "text": "Cython: C-Extensions for Python"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Torch 5"
            },
            "venue": {
                "fragments": [],
                "text": "EBLearn: Energy Based Learning, a C++ Machine Learning Library"
            }
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {},
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 17,
        "totalPages": 2
    },
    "page_url": "https://www.semanticscholar.org/paper/Theano:-A-CPU-and-GPU-Math-Compiler-in-Python-Bergstra-Breuleux/63936fa32f9e75ab2a864daae6791ce02112183d?sort=total-citations"
}