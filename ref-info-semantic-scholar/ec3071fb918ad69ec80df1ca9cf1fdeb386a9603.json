{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1800919"
                        ],
                        "name": "Nicolas Vasilache",
                        "slug": "Nicolas-Vasilache",
                        "structuredName": {
                            "firstName": "Nicolas",
                            "lastName": "Vasilache",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nicolas Vasilache"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2054833547"
                        ],
                        "name": "O. Zinenko",
                        "slug": "O.-Zinenko",
                        "structuredName": {
                            "firstName": "Oleksandr",
                            "lastName": "Zinenko",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Zinenko"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2097631216"
                        ],
                        "name": "Theodoros Theodoridis",
                        "slug": "Theodoros-Theodoridis",
                        "structuredName": {
                            "firstName": "Theodoros",
                            "lastName": "Theodoridis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Theodoros Theodoridis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47316088"
                        ],
                        "name": "Priya Goyal",
                        "slug": "Priya-Goyal",
                        "structuredName": {
                            "firstName": "Priya",
                            "lastName": "Goyal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Priya Goyal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2375710"
                        ],
                        "name": "Zach DeVito",
                        "slug": "Zach-DeVito",
                        "structuredName": {
                            "firstName": "Zach",
                            "lastName": "DeVito",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zach DeVito"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "16521420"
                        ],
                        "name": "William S. Moses",
                        "slug": "William-S.-Moses",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Moses",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "William S. Moses"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1772079"
                        ],
                        "name": "Sven Verdoolaege",
                        "slug": "Sven-Verdoolaege",
                        "structuredName": {
                            "firstName": "Sven",
                            "lastName": "Verdoolaege",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sven Verdoolaege"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145509576"
                        ],
                        "name": "Albert Cohen",
                        "slug": "Albert-Cohen",
                        "structuredName": {
                            "firstName": "Albert",
                            "lastName": "Cohen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Albert Cohen"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 61,
                                "start": 57
                            }
                        ],
                        "text": "We include the TensorComprehension (TC, commit: ef644ba) [37] a recently introduced auto-tuning framework as an additional baseline."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 25,
                                "start": 21
                            }
                        ],
                        "text": "Tensor comprehension [37] applied black-box autotuning together with polyhedral optimizations to optimize CUDA kernels."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 44014988,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "cae9d90524cccac5081666985d5d055b71697cee",
            "isKey": false,
            "numCitedBy": 284,
            "numCiting": 102,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep learning models with convolutional and recurrent networks are now ubiquitous and analyze massive amounts of audio, image, video, text and graph data, with applications in automatic translation, speech-to-text, scene understanding, ranking user preferences, ad placement, etc. Competing frameworks for building these networks such as TensorFlow, Chainer, CNTK, Torch/PyTorch, Caffe1/2, MXNet and Theano, explore different tradeoffs between usability and expressiveness, research or production orientation and supported hardware. They operate on a DAG of computational operators, wrapping high-performance libraries such as CUDNN (for NVIDIA GPUs) or NNPACK (for various CPUs), and automate memory allocation, synchronization, distribution. Custom operators are needed where the computation does not fit existing high-performance library calls, usually at a high engineering cost. This is frequently required when new operators are invented by researchers: such operators suffer a severe performance penalty, which limits the pace of innovation. Furthermore, even if there is an existing runtime call these frameworks can use, it often doesn't offer optimal performance for a user's particular network architecture and dataset, missing optimizations between operators as well as optimizations that can be done knowing the size and shape of data. Our contributions include (1) a language close to the mathematics of deep learning called Tensor Comprehensions offering both imperative and declarative styles, (2) a polyhedral Just-In-Time compiler to convert a mathematical description of a deep learning DAG into a CUDA kernel with delegated memory management and synchronization, also providing optimizations such as operator fusion and specialization for specific sizes, (3) a compilation cache populated by an autotuner. [Abstract cutoff]"
            },
            "slug": "Tensor-Comprehensions:-Framework-Agnostic-Machine-Vasilache-Zinenko",
            "title": {
                "fragments": [],
                "text": "Tensor Comprehensions: Framework-Agnostic High-Performance Machine Learning Abstractions"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "A language close to the mathematics of deep learning called Tensor Comprehensions offering both imperative and declarative styles, a polyhedral Just-In-Time compiler to convert a mathematical description of a deep learning DAG into a CUDA kernel with delegated memory management and synchronization, and a compilation cache populated by an autotuner are contributed."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "28273319"
                        ],
                        "name": "Richard Wei",
                        "slug": "Richard-Wei",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Wei",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Richard Wei"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1720525"
                        ],
                        "name": "V. Adve",
                        "slug": "V.-Adve",
                        "structuredName": {
                            "firstName": "Vikram",
                            "lastName": "Adve",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Adve"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38879761"
                        ],
                        "name": "Lane Schwartz",
                        "slug": "Lane-Schwartz",
                        "structuredName": {
                            "firstName": "Lane",
                            "lastName": "Schwartz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lane Schwartz"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 59,
                                "start": 55
                            }
                        ],
                        "text": "Tensorflow\u2019s XLA [3], and the recently introduced DLVM [40] falls into this category."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 3284333,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c94393bc6439fecece2f4149837c90d83f742ee8",
            "isKey": false,
            "numCitedBy": 46,
            "numCiting": 23,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep learning software demands reliability and performance. However, many of the existing deep learning frameworks are software libraries that act as an unsafe DSL in Python and a computation graph interpreter. We present DLVM, a design and implementation of a compiler infrastructure with a linear algebra intermediate representation, algorithmic differentiation by adjoint code generation, domain-specific optimizations and a code generator targeting GPU via LLVM. Designed as a modern compiler infrastructure inspired by LLVM, DLVM is more modular and more generic than existing deep learning compiler frameworks, and supports tensor DSLs with high expressivity. With our prototypical staged DSL embedded in Swift, we argue that the DLVM system enables a form of modular, safe and performant frameworks for deep learning."
            },
            "slug": "DLVM:-A-modern-compiler-infrastructure-for-deep-Wei-Adve",
            "title": {
                "fragments": [],
                "text": "DLVM: A modern compiler infrastructure for deep learning systems"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "DLVM, a design and implementation of a compiler infrastructure with a linear algebra intermediate representation, algorithmic differentiation by adjoint code generation, domain-specific optimizations and a code generator targeting GPU via LLVM is presented."
            },
            "venue": {
                "fragments": [],
                "text": "ICLR"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32646274"
                        ],
                        "name": "Hardik Sharma",
                        "slug": "Hardik-Sharma",
                        "structuredName": {
                            "firstName": "Hardik",
                            "lastName": "Sharma",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hardik Sharma"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3101741"
                        ],
                        "name": "Jongse Park",
                        "slug": "Jongse-Park",
                        "structuredName": {
                            "firstName": "Jongse",
                            "lastName": "Park",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jongse Park"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "33278013"
                        ],
                        "name": "Divya Mahajan",
                        "slug": "Divya-Mahajan",
                        "structuredName": {
                            "firstName": "Divya",
                            "lastName": "Mahajan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Divya Mahajan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2053398"
                        ],
                        "name": "Emmanuel Amaro",
                        "slug": "Emmanuel-Amaro",
                        "structuredName": {
                            "firstName": "Emmanuel",
                            "lastName": "Amaro",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Emmanuel Amaro"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2117059930"
                        ],
                        "name": "J. Kim",
                        "slug": "J.-Kim",
                        "structuredName": {
                            "firstName": "Joon",
                            "lastName": "Kim",
                            "middleNames": [
                                "Kyung"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Kim"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8489620"
                        ],
                        "name": "Chenkai Shao",
                        "slug": "Chenkai-Shao",
                        "structuredName": {
                            "firstName": "Chenkai",
                            "lastName": "Shao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chenkai Shao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35769149"
                        ],
                        "name": "Asit K. Mishra",
                        "slug": "Asit-K.-Mishra",
                        "structuredName": {
                            "firstName": "Asit",
                            "lastName": "Mishra",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Asit K. Mishra"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1696563"
                        ],
                        "name": "H. Esmaeilzadeh",
                        "slug": "H.-Esmaeilzadeh",
                        "structuredName": {
                            "firstName": "Hadi",
                            "lastName": "Esmaeilzadeh",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Esmaeilzadeh"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "roperties of TPU-like accelerators and enables a concrete case study on how to compile code for accelerators. Our approach could potentially bene\ufb01t existing systems that compile deep learning to FPGA [34,40], as well. This paper provides a generic solution to effectively target accelerators via tensorization and compiler-driven latency hiding. 8 Conclusion We proposed an end-to-end compilation stack to s"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 525898,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "924d6c44fda59dc9ac1f25d7cc12d669c5f9e557",
            "isKey": false,
            "numCitedBy": 341,
            "numCiting": 53,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep Neural Networks (DNNs) are compute-intensive learning models with growing applicability in a wide range of domains. FPGAs are an attractive choice for DNNs since they offer a programmable substrate for acceleration and are becoming available across different market segments. However, obtaining both performance and energy efficiency with FPGAs is a laborious task even for expert hardware designers. Furthermore, the large memory footprint of DNNs, coupled with the FPGAs' limited on-chip storage makes DNN acceleration using FPGAs more challenging. This work tackles these challenges by devising DnnWeaver, a framework that automatically generates a synthesizable accelerator for a given (DNN, FPGA) pair from a high-level specification in Caffe [1]. To achieve large benefits while preserving automation, DNNWEAVER generates accelerators using hand-optimized design templates. First, DnnWeaver translates a given high-level DNN specification to its novel ISA that represents a macro dataflow graph of the DNN. The DnnWeaver compiler is equipped with our optimization algorithm that tiles, schedules, and batches DNN operations to maximize data reuse and best utilize target FPGA's memory and other resources. The final result is a custom synthesizable accelerator that best matches the needs of the DNN while providing high performance and efficiency gains for the target FPGA. We use DnnWeaver to generate accelerators for a set of eight different DNN models and three different FPGAs, Xilinx Zynq, Altera Stratix V, and Altera Arria 10. We use hardware measurements to compare the generated accelerators to both multicore CPUs (ARM Cortex A15 and Xeon E3) and many-core GPUs (Tegra K1, GTX 650Ti, and Tesla K40). In comparison, the generated accelerators deliver superior performance and efficiency without requiring the programmers to participate in the arduous task of hardware design."
            },
            "slug": "From-high-level-deep-neural-models-to-FPGAs-Sharma-Park",
            "title": {
                "fragments": [],
                "text": "From high-level deep neural models to FPGAs"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "DnnWeaver is devised, a framework that automatically generates a synthesizable accelerator for a given DNN, FPGA pair from a high-level specification in Caffe that best matches the needs of the DNN while providing high performance and efficiency gains for the target FPGAs."
            },
            "venue": {
                "fragments": [],
                "text": "2016 49th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1715454"
                        ],
                        "name": "N. Jouppi",
                        "slug": "N.-Jouppi",
                        "structuredName": {
                            "firstName": "Norman",
                            "lastName": "Jouppi",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Jouppi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39660914"
                        ],
                        "name": "C. Young",
                        "slug": "C.-Young",
                        "structuredName": {
                            "firstName": "Cliff",
                            "lastName": "Young",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Young"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2056800684"
                        ],
                        "name": "Nishant Patil",
                        "slug": "Nishant-Patil",
                        "structuredName": {
                            "firstName": "Nishant",
                            "lastName": "Patil",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nishant Patil"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2052996328"
                        ],
                        "name": "David A. Patterson",
                        "slug": "David-A.-Patterson",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Patterson",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David A. Patterson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1839673849"
                        ],
                        "name": "Gaurav Agrawal",
                        "slug": "Gaurav-Agrawal",
                        "structuredName": {
                            "firstName": "Gaurav",
                            "lastName": "Agrawal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Gaurav Agrawal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39892484"
                        ],
                        "name": "R. Bajwa",
                        "slug": "R.-Bajwa",
                        "structuredName": {
                            "firstName": "Raminder",
                            "lastName": "Bajwa",
                            "middleNames": [
                                "Singh"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Bajwa"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2057224801"
                        ],
                        "name": "Sarah Bates",
                        "slug": "Sarah-Bates",
                        "structuredName": {
                            "firstName": "Sarah",
                            "lastName": "Bates",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sarah Bates"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2125285255"
                        ],
                        "name": "Suresh Bhatia",
                        "slug": "Suresh-Bhatia",
                        "structuredName": {
                            "firstName": "Suresh",
                            "lastName": "Bhatia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Suresh Bhatia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35750774"
                        ],
                        "name": "N. Boden",
                        "slug": "N.-Boden",
                        "structuredName": {
                            "firstName": "Nanette",
                            "lastName": "Boden",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Boden"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1394297183"
                        ],
                        "name": "Al Borchers",
                        "slug": "Al-Borchers",
                        "structuredName": {
                            "firstName": "Al",
                            "lastName": "Borchers",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Al Borchers"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060002570"
                        ],
                        "name": "Rick Boyle",
                        "slug": "Rick-Boyle",
                        "structuredName": {
                            "firstName": "Rick",
                            "lastName": "Boyle",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Rick Boyle"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2065727960"
                        ],
                        "name": "Pierre-luc Cantin",
                        "slug": "Pierre-luc-Cantin",
                        "structuredName": {
                            "firstName": "Pierre-luc",
                            "lastName": "Cantin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Pierre-luc Cantin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1629772869"
                        ],
                        "name": "Clifford Chao",
                        "slug": "Clifford-Chao",
                        "structuredName": {
                            "firstName": "Clifford",
                            "lastName": "Chao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Clifford Chao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2113263549"
                        ],
                        "name": "Chris Clark",
                        "slug": "Chris-Clark",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Clark",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chris Clark"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213025"
                        ],
                        "name": "Jeremy Coriell",
                        "slug": "Jeremy-Coriell",
                        "structuredName": {
                            "firstName": "Jeremy",
                            "lastName": "Coriell",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jeremy Coriell"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2061461417"
                        ],
                        "name": "Mike Daley",
                        "slug": "Mike-Daley",
                        "structuredName": {
                            "firstName": "Mike",
                            "lastName": "Daley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mike Daley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153358157"
                        ],
                        "name": "Matt Dau",
                        "slug": "Matt-Dau",
                        "structuredName": {
                            "firstName": "Matt",
                            "lastName": "Dau",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matt Dau"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49959210"
                        ],
                        "name": "J. Dean",
                        "slug": "J.-Dean",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Dean",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dean"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1394723585"
                        ],
                        "name": "Ben Gelb",
                        "slug": "Ben-Gelb",
                        "structuredName": {
                            "firstName": "Ben",
                            "lastName": "Gelb",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ben Gelb"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213038"
                        ],
                        "name": "T. Ghaemmaghami",
                        "slug": "T.-Ghaemmaghami",
                        "structuredName": {
                            "firstName": "Tara",
                            "lastName": "Ghaemmaghami",
                            "middleNames": [
                                "Vazir"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Ghaemmaghami"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40301682"
                        ],
                        "name": "R. Gottipati",
                        "slug": "R.-Gottipati",
                        "structuredName": {
                            "firstName": "Rajendra",
                            "lastName": "Gottipati",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Gottipati"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213045"
                        ],
                        "name": "William Gulland",
                        "slug": "William-Gulland",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Gulland",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "William Gulland"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2330986"
                        ],
                        "name": "R. Hagmann",
                        "slug": "R.-Hagmann",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Hagmann",
                            "middleNames": [
                                "B."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Hagmann"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2148846139"
                        ],
                        "name": "C. R. Ho",
                        "slug": "C.-R.-Ho",
                        "structuredName": {
                            "firstName": "C.",
                            "lastName": "Ho",
                            "middleNames": [
                                "Richard"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. R. Ho"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1629763752"
                        ],
                        "name": "Doug Hogberg",
                        "slug": "Doug-Hogberg",
                        "structuredName": {
                            "firstName": "Doug",
                            "lastName": "Hogberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Doug Hogberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49268145"
                        ],
                        "name": "John Hu",
                        "slug": "John-Hu",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Hu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "John Hu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1701671"
                        ],
                        "name": "R. Hundt",
                        "slug": "R.-Hundt",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Hundt",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Hundt"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38786988"
                        ],
                        "name": "D. Hurt",
                        "slug": "D.-Hurt",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Hurt",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Hurt"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46920727"
                        ],
                        "name": "Julian Ibarz",
                        "slug": "Julian-Ibarz",
                        "structuredName": {
                            "firstName": "Julian",
                            "lastName": "Ibarz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Julian Ibarz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "10433955"
                        ],
                        "name": "A. Jaffey",
                        "slug": "A.-Jaffey",
                        "structuredName": {
                            "firstName": "Aaron",
                            "lastName": "Jaffey",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Jaffey"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064306865"
                        ],
                        "name": "Alek Jaworski",
                        "slug": "Alek-Jaworski",
                        "structuredName": {
                            "firstName": "Alek",
                            "lastName": "Jaworski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alek Jaworski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064354536"
                        ],
                        "name": "Alexander Kaplan",
                        "slug": "Alexander-Kaplan",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Kaplan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alexander Kaplan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398212995"
                        ],
                        "name": "Harshit Khaitan",
                        "slug": "Harshit-Khaitan",
                        "structuredName": {
                            "firstName": "Harshit",
                            "lastName": "Khaitan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Harshit Khaitan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35002044"
                        ],
                        "name": "Daniel Killebrew",
                        "slug": "Daniel-Killebrew",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Killebrew",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daniel Killebrew"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1406011741"
                        ],
                        "name": "A. Koch",
                        "slug": "A.-Koch",
                        "structuredName": {
                            "firstName": "Andy",
                            "lastName": "Koch",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Koch"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2116960562"
                        ],
                        "name": "Naveen Kumar",
                        "slug": "Naveen-Kumar",
                        "structuredName": {
                            "firstName": "Naveen",
                            "lastName": "Kumar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Naveen Kumar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40476752"
                        ],
                        "name": "Steve Lacy",
                        "slug": "Steve-Lacy",
                        "structuredName": {
                            "firstName": "Steve",
                            "lastName": "Lacy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Steve Lacy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2926266"
                        ],
                        "name": "J. Laudon",
                        "slug": "J.-Laudon",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Laudon",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Laudon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2057766961"
                        ],
                        "name": "James Law",
                        "slug": "James-Law",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Law",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "James Law"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1397916881"
                        ],
                        "name": "Diemthu Le",
                        "slug": "Diemthu-Le",
                        "structuredName": {
                            "firstName": "Diemthu",
                            "lastName": "Le",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Diemthu Le"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3362246"
                        ],
                        "name": "Chris Leary",
                        "slug": "Chris-Leary",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Leary",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chris Leary"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2144265117"
                        ],
                        "name": "Zhuyuan Liu",
                        "slug": "Zhuyuan-Liu",
                        "structuredName": {
                            "firstName": "Zhuyuan",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhuyuan Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49432518"
                        ],
                        "name": "Kyle A. Lucke",
                        "slug": "Kyle-A.-Lucke",
                        "structuredName": {
                            "firstName": "Kyle",
                            "lastName": "Lucke",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kyle A. Lucke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1397991868"
                        ],
                        "name": "Alan Lundin",
                        "slug": "Alan-Lundin",
                        "structuredName": {
                            "firstName": "Alan",
                            "lastName": "Lundin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alan Lundin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213046"
                        ],
                        "name": "G. MacKean",
                        "slug": "G.-MacKean",
                        "structuredName": {
                            "firstName": "Gordon",
                            "lastName": "MacKean",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. MacKean"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1973715"
                        ],
                        "name": "A. Maggiore",
                        "slug": "A.-Maggiore",
                        "structuredName": {
                            "firstName": "Adriana",
                            "lastName": "Maggiore",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Maggiore"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2105943261"
                        ],
                        "name": "Maire Mahony",
                        "slug": "Maire-Mahony",
                        "structuredName": {
                            "firstName": "Maire",
                            "lastName": "Mahony",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Maire Mahony"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50092571"
                        ],
                        "name": "K. Miller",
                        "slug": "K.-Miller",
                        "structuredName": {
                            "firstName": "Kieran",
                            "lastName": "Miller",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Miller"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1395811464"
                        ],
                        "name": "R. Nagarajan",
                        "slug": "R.-Nagarajan",
                        "structuredName": {
                            "firstName": "Rahul",
                            "lastName": "Nagarajan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Nagarajan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213032"
                        ],
                        "name": "Ravi Narayanaswami",
                        "slug": "Ravi-Narayanaswami",
                        "structuredName": {
                            "firstName": "Ravi",
                            "lastName": "Narayanaswami",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ravi Narayanaswami"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1393195759"
                        ],
                        "name": "Ray Ni",
                        "slug": "Ray-Ni",
                        "structuredName": {
                            "firstName": "Ray",
                            "lastName": "Ni",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ray Ni"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213062"
                        ],
                        "name": "K. Nix",
                        "slug": "K.-Nix",
                        "structuredName": {
                            "firstName": "Kathy",
                            "lastName": "Nix",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Nix"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3222376"
                        ],
                        "name": "Thomas Norrie",
                        "slug": "Thomas-Norrie",
                        "structuredName": {
                            "firstName": "Thomas",
                            "lastName": "Norrie",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Thomas Norrie"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3175815"
                        ],
                        "name": "Mark Omernick",
                        "slug": "Mark-Omernick",
                        "structuredName": {
                            "firstName": "Mark",
                            "lastName": "Omernick",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mark Omernick"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398212990"
                        ],
                        "name": "Narayana Penukonda",
                        "slug": "Narayana-Penukonda",
                        "structuredName": {
                            "firstName": "Narayana",
                            "lastName": "Penukonda",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Narayana Penukonda"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064991162"
                        ],
                        "name": "Andy Phelps",
                        "slug": "Andy-Phelps",
                        "structuredName": {
                            "firstName": "Andy",
                            "lastName": "Phelps",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andy Phelps"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2116470453"
                        ],
                        "name": "Jonathan Ross",
                        "slug": "Jonathan-Ross",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ross",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ross"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2068076326"
                        ],
                        "name": "Matt Ross",
                        "slug": "Matt-Ross",
                        "structuredName": {
                            "firstName": "Matt",
                            "lastName": "Ross",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matt Ross"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144717532"
                        ],
                        "name": "Amir Salek",
                        "slug": "Amir-Salek",
                        "structuredName": {
                            "firstName": "Amir",
                            "lastName": "Salek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Amir Salek"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9364218"
                        ],
                        "name": "E. Samadiani",
                        "slug": "E.-Samadiani",
                        "structuredName": {
                            "firstName": "Emad",
                            "lastName": "Samadiani",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Samadiani"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1395804389"
                        ],
                        "name": "C. Severn",
                        "slug": "C.-Severn",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Severn",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Severn"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2473816"
                        ],
                        "name": "G. Sizikov",
                        "slug": "G.-Sizikov",
                        "structuredName": {
                            "firstName": "Gregory",
                            "lastName": "Sizikov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Sizikov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398212969"
                        ],
                        "name": "Matthew Snelham",
                        "slug": "Matthew-Snelham",
                        "structuredName": {
                            "firstName": "Matthew",
                            "lastName": "Snelham",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matthew Snelham"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2144885096"
                        ],
                        "name": "Jed Souter",
                        "slug": "Jed-Souter",
                        "structuredName": {
                            "firstName": "Jed",
                            "lastName": "Souter",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jed Souter"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39566019"
                        ],
                        "name": "D. Steinberg",
                        "slug": "D.-Steinberg",
                        "structuredName": {
                            "firstName": "Dan",
                            "lastName": "Steinberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Steinberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1394189636"
                        ],
                        "name": "Andy Swing",
                        "slug": "Andy-Swing",
                        "structuredName": {
                            "firstName": "Andy",
                            "lastName": "Swing",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andy Swing"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1393173244"
                        ],
                        "name": "Mercedes Tan",
                        "slug": "Mercedes-Tan",
                        "structuredName": {
                            "firstName": "Mercedes",
                            "lastName": "Tan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mercedes Tan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48930610"
                        ],
                        "name": "G. Thorson",
                        "slug": "G.-Thorson",
                        "structuredName": {
                            "firstName": "Gregory",
                            "lastName": "Thorson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Thorson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064522407"
                        ],
                        "name": "Bo Tian",
                        "slug": "Bo-Tian",
                        "structuredName": {
                            "firstName": "Bo",
                            "lastName": "Tian",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bo Tian"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50042144"
                        ],
                        "name": "H. Toma",
                        "slug": "H.-Toma",
                        "structuredName": {
                            "firstName": "Horia",
                            "lastName": "Toma",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Toma"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1397585416"
                        ],
                        "name": "Erick Tuttle",
                        "slug": "Erick-Tuttle",
                        "structuredName": {
                            "firstName": "Erick",
                            "lastName": "Tuttle",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Erick Tuttle"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2053781980"
                        ],
                        "name": "Vijay Vasudevan",
                        "slug": "Vijay-Vasudevan",
                        "structuredName": {
                            "firstName": "Vijay",
                            "lastName": "Vasudevan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vijay Vasudevan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060269562"
                        ],
                        "name": "Richard Walter",
                        "slug": "Richard-Walter",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Walter",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Richard Walter"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2108459300"
                        ],
                        "name": "Walter Wang",
                        "slug": "Walter-Wang",
                        "structuredName": {
                            "firstName": "Walter",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Walter Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064779797"
                        ],
                        "name": "Eric Wilcox",
                        "slug": "Eric-Wilcox",
                        "structuredName": {
                            "firstName": "Eric",
                            "lastName": "Wilcox",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eric Wilcox"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1712426"
                        ],
                        "name": "D. Yoon",
                        "slug": "D.-Yoon",
                        "structuredName": {
                            "firstName": "Doe",
                            "lastName": "Yoon",
                            "middleNames": [
                                "Hyun"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Yoon"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 72,
                                "start": 68
                            }
                        ],
                        "text": "In contrast, specialized deep learning accelerators such as the TPU [20] usually favor leaner control with a decoupled access-execute (DAE) architecture [32] and offload the problem of finegrained synchronization to software."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 139,
                                "start": 128
                            }
                        ],
                        "text": "Leveraging Specific Hardware Features and Abstractions Deep learning accelerators introduce optimized tensor compute primitives [1, 11, 20], while GPUs and CPUs continuously evolve with improvements to their processing elements."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 137,
                                "start": 125
                            }
                        ],
                        "text": "We introduce the Vanilla Deep Learning Accelerator (VDLA) which distills characteristics from previous accelerator proposals [11, 20, 25] into a minimalist hardware architecture."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 90,
                                "start": 86
                            }
                        ],
                        "text": "Aside from compute primitives, accelerator designs also commonly favor leaner control [20] and offload most of the scheduling complexity to the compiler stack."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 105,
                                "start": 94
                            }
                        ],
                        "text": "These natural decompositions have led to the recent trend of adding tensor compute primitives [1, 11, 20]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 35,
                                "start": 32
                            }
                        ],
                        "text": "Register\nFile\nWgt. FIFO\nCPU GPU \u2018TPU\u2019\nimplicitly managed mixed explicitly managed\nMemory Subsystem Architecture\nCompute Primitive\ndiverge in terms of memory organization, compute functional units, etc., as shown in Figure 1."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 74,
                                "start": 66
                            }
                        ],
                        "text": "Despite the emerging popularity of accelerators for deep learning [10, 20], it is yet unclear how a compilation stack can be built to effectively target these devices."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 172,
                                "start": 169
                            }
                        ],
                        "text": "Mapping deep learning workloads to these devices is complicated by the diversity of hardware characteristics, including embedded CPUs, GPUs, FPGAs, and ASICs (e.g., the TPU [20])."
                    },
                    "intents": []
                }
            ],
            "corpusId": 4202768,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2dfeb5a90abc49ab2a80a492a01a4e2c8e92ec22",
            "isKey": true,
            "numCitedBy": 2951,
            "numCiting": 119,
            "paperAbstract": {
                "fragments": [],
                "text": "Many architects believe that major improvements in cost-energy-performance must now come from domain-specific hardware. This paper evaluates a custom ASIC-called a Tensor Processing Unit (TPU)-deployed in datacenters since 2015 that accelerates the inference phase of neural networks (NN). The heart of the TPU is a 65,536 8-bit MAC matrix multiply unit that offers a peak throughput of 92 TeraOps/second (TOPS) and a large (28 MiB) software-managed on-chip memory. The TPU's deterministic execution model is a better match to the 99th-percentile response-time requirement of our NN applications than are the time-varying optimizations of CPUs and GPUs that help average throughput more than guaranteed latency. The lack of such features helps explain why, despite having myriad MACs and a big memory, the TPU is relatively small and low power. We compare the TPU to a server-class Intel Haswell CPU and an Nvidia K80 GPU, which are contemporaries deployed in the same datacenters. Our workload, written in the high-level TensorFlow framework, uses production NN applications (MLPs, CNNs, and LSTMs) that represent 95% of our datacenters' NN inference demand. Despite low utilization for some applications, the TPU is on average about 15X\u201330X faster than its contemporary GPU or CPU, with TOPS/Watt about 30X\u201380X higher. Moreover, using the GPU's GDDR5 memory in the TPU would triple achieved TOPS and raise TOPS/Watt to nearly 70X the GPU and 200X the CPU."
            },
            "slug": "In-datacenter-performance-analysis-of-a-tensor-unit-Jouppi-Young",
            "title": {
                "fragments": [],
                "text": "In-datacenter performance analysis of a tensor processing unit"
            },
            "tldr": {
                "abstractSimilarityScore": 59,
                "text": "This paper evaluates a custom ASIC-called a Tensor Processing Unit (TPU)-deployed in datacenters since 2015 that accelerates the inference phase of neural networks (NN) and compares it to a server-class Intel Haswell CPU and an Nvidia K80 GPU, which are contemporaries deployed in the samedatacenters."
            },
            "venue": {
                "fragments": [],
                "text": "2017 ACM/IEEE 44th Annual International Symposium on Computer Architecture (ISCA)"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "7377735"
                        ],
                        "name": "Yunji Chen",
                        "slug": "Yunji-Chen",
                        "structuredName": {
                            "firstName": "Yunji",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yunji Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2068286576"
                        ],
                        "name": "Tao Luo",
                        "slug": "Tao-Luo",
                        "structuredName": {
                            "firstName": "Tao",
                            "lastName": "Luo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tao Luo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39419985"
                        ],
                        "name": "Shaoli Liu",
                        "slug": "Shaoli-Liu",
                        "structuredName": {
                            "firstName": "Shaoli",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shaoli Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2145407329"
                        ],
                        "name": "Shijin Zhang",
                        "slug": "Shijin-Zhang",
                        "structuredName": {
                            "firstName": "Shijin",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shijin Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37167270"
                        ],
                        "name": "Liqiang He",
                        "slug": "Liqiang-He",
                        "structuredName": {
                            "firstName": "Liqiang",
                            "lastName": "He",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Liqiang He"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110368816"
                        ],
                        "name": "Jia Wang",
                        "slug": "Jia-Wang",
                        "structuredName": {
                            "firstName": "Jia",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jia Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3353457"
                        ],
                        "name": "Ling Li",
                        "slug": "Ling-Li",
                        "structuredName": {
                            "firstName": "Ling",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ling Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144049725"
                        ],
                        "name": "Tianshi Chen",
                        "slug": "Tianshi-Chen",
                        "structuredName": {
                            "firstName": "Tianshi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianshi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1719934"
                        ],
                        "name": "Zhiwei Xu",
                        "slug": "Zhiwei-Xu",
                        "structuredName": {
                            "firstName": "Zhiwei",
                            "lastName": "Xu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhiwei Xu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145550877"
                        ],
                        "name": "Ninghui Sun",
                        "slug": "Ninghui-Sun",
                        "structuredName": {
                            "firstName": "Ninghui",
                            "lastName": "Sun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ninghui Sun"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1731764"
                        ],
                        "name": "O. Temam",
                        "slug": "O.-Temam",
                        "structuredName": {
                            "firstName": "Olivier",
                            "lastName": "Temam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Temam"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 74,
                                "start": 66
                            }
                        ],
                        "text": "Despite the emerging popularity of accelerators for deep learning [10, 20], it is yet unclear how a compilation stack can be built to effectively target these devices."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 6838992,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4157ed3db4c656854e69931cb6089b64b08784b9",
            "isKey": false,
            "numCitedBy": 1065,
            "numCiting": 56,
            "paperAbstract": {
                "fragments": [],
                "text": "Many companies are deploying services, either for consumers or industry, which are largely based on machine-learning algorithms for sophisticated processing of large amounts of data. The state-of-the-art and most popular such machine-learning algorithms are Convolutional and Deep Neural Networks (CNNs and DNNs), which are known to be both computationally and memory intensive. A number of neural network accelerators have been recently proposed which can offer high computational capacity/area ratio, but which remain hampered by memory accesses. However, unlike the memory wall faced by processors on general-purpose workloads, the CNNs and DNNs memory footprint, while large, is not beyond the capability of the on chip storage of a multi-chip system. This property, combined with the CNN/DNN algorithmic characteristics, can lead to high internal bandwidth and low external communications, which can in turn enable high-degree parallelism at a reasonable area cost. In this article, we introduce a custom multi-chip machine-learning architecture along those lines. We show that, on a subset of the largest known neural network layers, it is possible to achieve a speedup of 450.65x over a GPU, and reduce the energy by 150.31x on average for a 64-chip system. We implement the node down to the place and route at 28nm, containing a combination of custom storage and computational units, with industry-grade interconnects."
            },
            "slug": "DaDianNao:-A-Machine-Learning-Supercomputer-Chen-Luo",
            "title": {
                "fragments": [],
                "text": "DaDianNao: A Machine-Learning Supercomputer"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This article introduces a custom multi-chip machine-learning architecture, showing that, on a subset of the largest known neural network layers, it is possible to achieve a speedup of 450.65x over a GPU, and reduce the energy by 150.31x on average for a 64-chip system."
            },
            "venue": {
                "fragments": [],
                "text": "2014 47th Annual IEEE/ACM International Symposium on Microarchitecture"
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2620980"
                        ],
                        "name": "A. Kl\u00f6ckner",
                        "slug": "A.-Kl\u00f6ckner",
                        "structuredName": {
                            "firstName": "Andreas",
                            "lastName": "Kl\u00f6ckner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Kl\u00f6ckner"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 205,
                                "start": 201
                            }
                        ],
                        "text": "Experimental results demonstrate that TVM delivers performance across hardware back-ends that are competitive with state-of-the-art hand tuned libraries for low-power CPU, mobile GPU, and server-class GPUs."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 44,
                                "start": 40
                            }
                        ],
                        "text": "Finally, in addition to being useful to GPUs, memory scopes allow us to tag special memory buffers and create special lowering rules when targeting specialized deep learning accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 123,
                                "start": 119
                            }
                        ],
                        "text": "We reuse useful primitives and the low-level loop program AST from Halide and introduce new primitives to optimize for GPUs and accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 4,
                                "start": 0
                            }
                        ],
                        "text": "GPUs rely on rapid context switching of many warps of threads [39]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 73,
                                "start": 69
                            }
                        ],
                        "text": "This optimization can greatly reduce execution time, particularly in GPUs and specialized accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 94,
                                "start": 90
                            }
                        ],
                        "text": "Moreover, we introduce new transformation primitives to address the challenges brought by GPUs and also enable deployment to specialized accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 238,
                                "start": 234
                            }
                        ],
                        "text": "By combining these three modules, TVM can take model descriptions from existing deep learning frameworks, perform joint high-level and low-level optimizations, and generate hardware-specific optimized code for back-ends such as CPUs, GPUs, and FPGA-based specialized accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 11,
                                "start": 7
                            }
                        ],
                        "text": "Modern GPUs offer massive parallelism, requiring us to bake parallel patterns into schedule transformations."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 151,
                                "start": 147
                            }
                        ],
                        "text": "Leveraging Specific Hardware Features and Abstractions Deep learning accelerators introduce optimized tensor compute primitives [1, 11, 20], while GPUs and CPUs continuously evolve with improvements to their processing elements."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 94,
                                "start": 78
                            }
                        ],
                        "text": "The tensor operator scheduling is also related to other works on DSL for GPUs [17, 23, 33, 34] as well as works on polyhedral-based loop transformation [5, 38]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 251,
                                "start": 247
                            }
                        ],
                        "text": "\u2022 We build an end-to-end compilation and optimization stack allowing the deployment of deep learning workloads specified in high-level frameworks (including Caffe, MXNet, PyTorch, Caffe2, CNTK) to diverse hardware back-ends (including CPUs, server GPUs, mobile GPUs, and FPGA-based accelerators)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 139,
                                "start": 135
                            }
                        ],
                        "text": "Mapping deep learning workloads to these devices is complicated by the diversity of hardware characteristics, including embedded CPUs, GPUs, FPGAs, and ASICs (e.g., the TPU [20])."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 114,
                                "start": 110
                            }
                        ],
                        "text": "Current frameworks rely on vendor-specific operator libraries and optimize for a narrow range of server-class GPUs."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 98,
                                "start": 94
                            }
                        ],
                        "text": "We specifically focus on solving the new scheduling challenges of deep learning workloads for GPUs and specialized accelerators."
                    },
                    "intents": []
                }
            ],
            "corpusId": 15391941,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "43646798f334bba75401737909f812ed04acba4c",
            "isKey": true,
            "numCitedBy": 44,
            "numCiting": 27,
            "paperAbstract": {
                "fragments": [],
                "text": "Today's highly heterogeneous computing landscape places a burden on programmers wanting to achieve high performance on a reasonably broad cross-section of machines. To do so, computations need to be expressed in many different but mathematically equivalent ways, with, in the worst case, one variant per target machine. Loo.py, a programming system embedded in Python, meets this challenge by defining a data model for array-style computations and a library of transformations that operate on this model. Offering transformations such as loop tiling, vectorization, storage management, unrolling, instruction-level parallelism, change of data layout, and many more, it provides a convenient way to capture, parametrize, and re-unify the growth among code variants. Optional, deep integration with numpy and PyOpenCL provides a convenient computing environment where the transition from prototype to high-performance implementation can occur in a gradual, machine-assisted form."
            },
            "slug": "Loo.py:-transformation-based-code-generation-for-Kl\u00f6ckner",
            "title": {
                "fragments": [],
                "text": "Loo.py: transformation-based code generation for GPUs and CPUs"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "Loo.py, a programming system embedded in Python, meets this challenge by defining a data model for array-style computations and a library of transformations that operate on this model, providing a convenient way to capture, parametrize, and re-unify the growth among code variants."
            },
            "venue": {
                "fragments": [],
                "text": "ARRAY@PLDI"
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2057642721"
                        ],
                        "name": "Mart\u00edn Abadi",
                        "slug": "Mart\u00edn-Abadi",
                        "structuredName": {
                            "firstName": "Mart\u00edn",
                            "lastName": "Abadi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mart\u00edn Abadi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144758007"
                        ],
                        "name": "P. Barham",
                        "slug": "P.-Barham",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Barham",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Barham"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2108406634"
                        ],
                        "name": "Jianmin Chen",
                        "slug": "Jianmin-Chen",
                        "structuredName": {
                            "firstName": "Jianmin",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jianmin Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2545358"
                        ],
                        "name": "Z. Chen",
                        "slug": "Z.-Chen",
                        "structuredName": {
                            "firstName": "Z.",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Z. Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "36347083"
                        ],
                        "name": "Andy Davis",
                        "slug": "Andy-Davis",
                        "structuredName": {
                            "firstName": "Andy",
                            "lastName": "Davis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andy Davis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49959210"
                        ],
                        "name": "J. Dean",
                        "slug": "J.-Dean",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Dean",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dean"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145139947"
                        ],
                        "name": "Matthieu Devin",
                        "slug": "Matthieu-Devin",
                        "structuredName": {
                            "firstName": "Matthieu",
                            "lastName": "Devin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matthieu Devin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1780892"
                        ],
                        "name": "S. Ghemawat",
                        "slug": "S.-Ghemawat",
                        "structuredName": {
                            "firstName": "Sanjay",
                            "lastName": "Ghemawat",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Ghemawat"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060655766"
                        ],
                        "name": "Geoffrey Irving",
                        "slug": "Geoffrey-Irving",
                        "structuredName": {
                            "firstName": "Geoffrey",
                            "lastName": "Irving",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Geoffrey Irving"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2090818"
                        ],
                        "name": "M. Isard",
                        "slug": "M.-Isard",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Isard",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Isard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1942300"
                        ],
                        "name": "M. Kudlur",
                        "slug": "M.-Kudlur",
                        "structuredName": {
                            "firstName": "Manjunath",
                            "lastName": "Kudlur",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Kudlur"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3369421"
                        ],
                        "name": "J. Levenberg",
                        "slug": "J.-Levenberg",
                        "structuredName": {
                            "firstName": "Josh",
                            "lastName": "Levenberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Levenberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3089272"
                        ],
                        "name": "R. Monga",
                        "slug": "R.-Monga",
                        "structuredName": {
                            "firstName": "Rajat",
                            "lastName": "Monga",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Monga"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144375552"
                        ],
                        "name": "Sherry Moore",
                        "slug": "Sherry-Moore",
                        "structuredName": {
                            "firstName": "Sherry",
                            "lastName": "Moore",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sherry Moore"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "20154699"
                        ],
                        "name": "D. Murray",
                        "slug": "D.-Murray",
                        "structuredName": {
                            "firstName": "Derek",
                            "lastName": "Murray",
                            "middleNames": [
                                "Gordon"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Murray"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32163737"
                        ],
                        "name": "Benoit Steiner",
                        "slug": "Benoit-Steiner",
                        "structuredName": {
                            "firstName": "Benoit",
                            "lastName": "Steiner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Benoit Steiner"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2080690"
                        ],
                        "name": "P. Tucker",
                        "slug": "P.-Tucker",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Tucker",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Tucker"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2053781980"
                        ],
                        "name": "Vijay Vasudevan",
                        "slug": "Vijay-Vasudevan",
                        "structuredName": {
                            "firstName": "Vijay",
                            "lastName": "Vasudevan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vijay Vasudevan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47941411"
                        ],
                        "name": "P. Warden",
                        "slug": "P.-Warden",
                        "structuredName": {
                            "firstName": "Pete",
                            "lastName": "Warden",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Warden"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35078078"
                        ],
                        "name": "M. Wicke",
                        "slug": "M.-Wicke",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Wicke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Wicke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2117163698"
                        ],
                        "name": "Yuan Yu",
                        "slug": "Yuan-Yu",
                        "structuredName": {
                            "firstName": "Yuan",
                            "lastName": "Yu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuan Yu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2144533795"
                        ],
                        "name": "Xiaoqiang Zhang",
                        "slug": "Xiaoqiang-Zhang",
                        "structuredName": {
                            "firstName": "Xiaoqiang",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xiaoqiang Zhang"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 37,
                                "start": 25
                            }
                        ],
                        "text": "Deep learning frameworks [3, 4, 6, 8] provide convenient interfaces for users to express deep learning workloads, and deploy them easily on different hardware back-ends."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 88
                            }
                        ],
                        "text": "Computational graphs are a common way to represent programs in deep learning frameworks [3, 4, 6, 8]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 33,
                                "start": 30
                            }
                        ],
                        "text": "On the other hand, Tensorflow XLA uses JIT compilation."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 233,
                                "start": 224
                            }
                        ],
                        "text": "Current deep learning frameworks, such as TensorFlow, MXNet, Caffe, and PyTorch rely on a computational graph intermediate representation to implement optimizations such as auto differentiation and dynamic memory management [3, 4, 8]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 20,
                                "start": 17
                            }
                        ],
                        "text": "Tensorflow\u2019s XLA [3], and the recently introduced DLVM [40] falls into this category."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 22,
                                "start": 19
                            }
                        ],
                        "text": "7), and Tensorflow XLA on an Nvidia Titan X. MXNet and Tensorflow both use cuDNN v7 for convolution operators and implement their own versions of depthwise convolution as it is relatively new and is not yet supported by the latest libraries."
                    },
                    "intents": []
                }
            ],
            "corpusId": 6287870,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "46200b99c40e8586c8a0f588488ab6414119fb28",
            "isKey": true,
            "numCitedBy": 12805,
            "numCiting": 111,
            "paperAbstract": {
                "fragments": [],
                "text": "TensorFlow is a machine learning system that operates at large scale and in heterogeneous environments. Tensor-Flow uses dataflow graphs to represent computation, shared state, and the operations that mutate that state. It maps the nodes of a dataflow graph across many machines in a cluster, and within a machine across multiple computational devices, including multicore CPUs, general-purpose GPUs, and custom-designed ASICs known as Tensor Processing Units (TPUs). This architecture gives flexibility to the application developer: whereas in previous \"parameter server\" designs the management of shared state is built into the system, TensorFlow enables developers to experiment with novel optimizations and training algorithms. TensorFlow supports a variety of applications, with a focus on training and inference on deep neural networks. Several Google services use TensorFlow in production, we have released it as an open-source project, and it has become widely used for machine learning research. In this paper, we describe the TensorFlow dataflow model and demonstrate the compelling performance that TensorFlow achieves for several real-world applications."
            },
            "slug": "TensorFlow:-A-system-for-large-scale-machine-Abadi-Barham",
            "title": {
                "fragments": [],
                "text": "TensorFlow: A system for large-scale machine learning"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "The TensorFlow dataflow model is described and the compelling performance that Tensor Flow achieves for several real-world applications is demonstrated."
            },
            "venue": {
                "fragments": [],
                "text": "OSDI"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2067445"
                        ],
                        "name": "Yaman Umuroglu",
                        "slug": "Yaman-Umuroglu",
                        "structuredName": {
                            "firstName": "Yaman",
                            "lastName": "Umuroglu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yaman Umuroglu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1809409"
                        ],
                        "name": "Nicholas J. Fraser",
                        "slug": "Nicholas-J.-Fraser",
                        "structuredName": {
                            "firstName": "Nicholas",
                            "lastName": "Fraser",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nicholas J. Fraser"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1779727"
                        ],
                        "name": "G. Gambardella",
                        "slug": "G.-Gambardella",
                        "structuredName": {
                            "firstName": "Giulio",
                            "lastName": "Gambardella",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Gambardella"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1791399"
                        ],
                        "name": "Michaela Blott",
                        "slug": "Michaela-Blott",
                        "structuredName": {
                            "firstName": "Michaela",
                            "lastName": "Blott",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michaela Blott"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1682246"
                        ],
                        "name": "P. Leong",
                        "slug": "P.-Leong",
                        "structuredName": {
                            "firstName": "Philip",
                            "lastName": "Leong",
                            "middleNames": [
                                "Heng",
                                "Wai"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Leong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2054413"
                        ],
                        "name": "Magnus Jahre",
                        "slug": "Magnus-Jahre",
                        "structuredName": {
                            "firstName": "Magnus",
                            "lastName": "Jahre",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Magnus Jahre"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145732571"
                        ],
                        "name": "K. Vissers",
                        "slug": "K.-Vissers",
                        "structuredName": {
                            "firstName": "Kees",
                            "lastName": "Vissers",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Vissers"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 10530917,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3b2491ddeeaa7beae4d311b217c292a9e16112cf",
            "isKey": false,
            "numCitedBy": 590,
            "numCiting": 35,
            "paperAbstract": {
                "fragments": [],
                "text": "Research has shown that convolutional neural networks contain significant redundancy, and high classification accuracy can be obtained even when weights and activations are reduced from floating point to binary values. In this paper, we present FINN, a framework for building fast and flexible FPGA accelerators using a flexible heterogeneous streaming architecture. By utilizing a novel set of optimizations that enable efficient mapping of binarized neural networks to hardware, we implement fully connected, convolutional and pooling layers, with per-layer compute resources being tailored to user-provided throughput requirements. On a ZC706 embedded FPGA platform drawing less than 25 W total system power, we demonstrate up to 12.3 million image classifications per second with 0.31 \u03bcs latency on the MNIST dataset with 95.8% accuracy, and 21906 image classifications per second with 283 \u03bcs latency on the CIFAR-10 and SVHN datasets with respectively 80.1% and 94.9% accuracy. To the best of our knowledge, ours are the fastest classification rates reported to date on these benchmarks."
            },
            "slug": "FINN:-A-Framework-for-Fast,-Scalable-Binarized-Umuroglu-Fraser",
            "title": {
                "fragments": [],
                "text": "FINN: A Framework for Fast, Scalable Binarized Neural Network Inference"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "FINN, a framework for building fast and flexible FPGA accelerators using a flexible heterogeneous streaming architecture that implements fully connected, convolutional and pooling layers, with per-layer compute resources being tailored to user-provided throughput requirements is presented."
            },
            "venue": {
                "fragments": [],
                "text": "FPGA"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1758245"
                        ],
                        "name": "Riyadh Baghdadi",
                        "slug": "Riyadh-Baghdadi",
                        "structuredName": {
                            "firstName": "Riyadh",
                            "lastName": "Baghdadi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Riyadh Baghdadi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2978162"
                        ],
                        "name": "Ulysse Beaugnon",
                        "slug": "Ulysse-Beaugnon",
                        "structuredName": {
                            "firstName": "Ulysse",
                            "lastName": "Beaugnon",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ulysse Beaugnon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145509576"
                        ],
                        "name": "Albert Cohen",
                        "slug": "Albert-Cohen",
                        "structuredName": {
                            "firstName": "Albert",
                            "lastName": "Cohen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Albert Cohen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1756389"
                        ],
                        "name": "T. Grosser",
                        "slug": "T.-Grosser",
                        "structuredName": {
                            "firstName": "Tobias",
                            "lastName": "Grosser",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Grosser"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "152835390"
                        ],
                        "name": "Michael Kruse",
                        "slug": "Michael-Kruse",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Kruse",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michael Kruse"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144122184"
                        ],
                        "name": "Chandan Reddy",
                        "slug": "Chandan-Reddy",
                        "structuredName": {
                            "firstName": "Chandan",
                            "lastName": "Reddy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chandan Reddy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1772079"
                        ],
                        "name": "Sven Verdoolaege",
                        "slug": "Sven-Verdoolaege",
                        "structuredName": {
                            "firstName": "Sven",
                            "lastName": "Verdoolaege",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sven Verdoolaege"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34781062"
                        ],
                        "name": "A. Betts",
                        "slug": "A.-Betts",
                        "structuredName": {
                            "firstName": "Adam",
                            "lastName": "Betts",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Betts"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1734519"
                        ],
                        "name": "A. Donaldson",
                        "slug": "A.-Donaldson",
                        "structuredName": {
                            "firstName": "Alastair",
                            "lastName": "Donaldson",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Donaldson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2303821"
                        ],
                        "name": "J. Ketema",
                        "slug": "J.-Ketema",
                        "structuredName": {
                            "firstName": "Jeroen",
                            "lastName": "Ketema",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Ketema"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1796386"
                        ],
                        "name": "J. Absar",
                        "slug": "J.-Absar",
                        "structuredName": {
                            "firstName": "Javed",
                            "lastName": "Absar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Absar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1807282"
                        ],
                        "name": "S. V. Haastregt",
                        "slug": "S.-V.-Haastregt",
                        "structuredName": {
                            "firstName": "Sven",
                            "lastName": "Haastregt",
                            "middleNames": [
                                "van"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. V. Haastregt"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145510407"
                        ],
                        "name": "Alexey Kravets",
                        "slug": "Alexey-Kravets",
                        "structuredName": {
                            "firstName": "Alexey",
                            "lastName": "Kravets",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alexey Kravets"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1777324"
                        ],
                        "name": "Anton Lokhmotov",
                        "slug": "Anton-Lokhmotov",
                        "structuredName": {
                            "firstName": "Anton",
                            "lastName": "Lokhmotov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Anton Lokhmotov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2061545111"
                        ],
                        "name": "R. David",
                        "slug": "R.-David",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "David",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. David"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1988507"
                        ],
                        "name": "Elnar Hajiyev",
                        "slug": "Elnar-Hajiyev",
                        "structuredName": {
                            "firstName": "Elnar",
                            "lastName": "Hajiyev",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Elnar Hajiyev"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": " its existing useful scheduling primitives in our compiler. The tensor operator scheduling is also related other works on DSL for GPUs [24,14] as well as works on polyhedral-based loop transformation [5,25]. TACO [18] introduces a generic way to generate sparse tensor operators on CPU. Weld [21] is a DSL for data processing tasks. We speci\ufb01cally focus on solving the new scheduling challenges of deep lea"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "n hardware. The lowering is correct as long as the ordering between each sender/receiver pair in the original virtual stream is preserved after lowering. resnet[1] resnet[2] resnet[3] resnet[4] resnet[5] resnet[6] resnet[7] resnet[8] resnet[9] resnet[10] resnet[11] 0.000 0.002 0.004 0.006 0.008 0.010 Inference Time (ms) Baseline Latency Hiding Figure 19: The effect of latency hiding on a FPGA-based h"
                    },
                    "intents": []
                }
            ],
            "corpusId": 16354348,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e61e896ee96c8d6ae13c34c9d66e8ee879489f75",
            "isKey": true,
            "numCitedBy": 90,
            "numCiting": 39,
            "paperAbstract": {
                "fragments": [],
                "text": "Programming accelerators such as GPUs with low-level APIs and languages such as OpenCL and CUDA is difficult, error-prone, and not performance-portable. Automatic parallelization and domain specific languages (DSLs) have been proposed to hide complexity and regain performance portability. We present PENCIL, a rigorously-defined subset of GNU C99-enriched with additional language constructs-that enables compilers to exploit parallelism and produce highly optimized code when targeting accelerators. PENCIL aims to serve both as a portable implementation language for libraries, and as a target language for DSL compilers. We implemented a PENCIL-to-OpenCL backend using a state-of-the-art polyhedral compiler. The polyhedral compiler, extended to handle data-dependent control flow and non-affine array accesses, generates optimized OpenCL code. To demonstrate the potential and performance portability of PENCIL and the PENCIL-to-OpenCL compiler, we consider a number of image processing kernels, a set of benchmarks from the Rodinia and SHOC suites, and DSL embedding scenarios for linear algebra (BLAS) and signal processing radar applications (SpearDE), and present experimental results for four GPU platforms: AMD Radeon HD 5670 and R9 285, NVIDIA GTX 470, and ARM Mali-T604."
            },
            "slug": "PENCIL:-A-Platform-Neutral-Compute-Intermediate-for-Baghdadi-Beaugnon",
            "title": {
                "fragments": [],
                "text": "PENCIL: A Platform-Neutral Compute Intermediate Language for Accelerator Programming"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "PENCIL, a rigorously-defined subset of GNU C99-enriched with additional language constructs-that enables compilers to exploit parallelism and produce highly optimized code when targeting accelerators, is presented."
            },
            "venue": {
                "fragments": [],
                "text": "2015 International Conference on Parallel Architecture and Compilation (PACT)"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3609856"
                        ],
                        "name": "Andrew Tulloch",
                        "slug": "Andrew-Tulloch",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Tulloch",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Tulloch"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39978391"
                        ],
                        "name": "Yangqing Jia",
                        "slug": "Yangqing-Jia",
                        "structuredName": {
                            "firstName": "Yangqing",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yangqing Jia"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 39524270,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a04ac2f7c0f4da3a00a22a9a10266c89fc1d4cb4",
            "isKey": false,
            "numCitedBy": 21,
            "numCiting": 13,
            "paperAbstract": {
                "fragments": [],
                "text": "Many applications of mobile deep learning, especially real-time computer vision workloads, are constrained by computation power. This is particularly true for workloads running on older consumer phones, where a typical device might be powered by a single- or dual-core ARMv7 CPU. We provide an open-source implementation and a comprehensive analysis of (to our knowledge) the state of the art ultra-low-precision (<4 bit precision) implementation of the core primitives required for modern deep learning workloads on ARMv7 devices, and demonstrate speedups of 4x-20x over our additional state-of-the-art float32 and int8 baselines."
            },
            "slug": "High-performance-ultra-low-precision-convolutions-Tulloch-Jia",
            "title": {
                "fragments": [],
                "text": "High performance ultra-low-precision convolutions on mobile devices"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "This work provides an open-source implementation and a comprehensive analysis of the state of the art ultra-low-precision (<4 bit precision) implementation of the core primitives required for modern deep learning workloads on ARMv7 devices, and demonstrates speedups of 4x-20x over the authors' additional state-of-the-art float32 and int8 baselines."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1795890"
                        ],
                        "name": "Michel Steuwer",
                        "slug": "Michel-Steuwer",
                        "structuredName": {
                            "firstName": "Michel",
                            "lastName": "Steuwer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michel Steuwer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2539451"
                        ],
                        "name": "Toomas Remmelg",
                        "slug": "Toomas-Remmelg",
                        "structuredName": {
                            "firstName": "Toomas",
                            "lastName": "Remmelg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Toomas Remmelg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3224333"
                        ],
                        "name": "Christophe Dubach",
                        "slug": "Christophe-Dubach",
                        "structuredName": {
                            "firstName": "Christophe",
                            "lastName": "Dubach",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christophe Dubach"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 205,
                                "start": 201
                            }
                        ],
                        "text": "Experimental results demonstrate that TVM delivers performance across hardware back-ends that are competitive with state-of-the-art hand tuned libraries for low-power CPU, mobile GPU, and server-class GPUs."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 44,
                                "start": 40
                            }
                        ],
                        "text": "Finally, in addition to being useful to GPUs, memory scopes allow us to tag special memory buffers and create special lowering rules when targeting specialized deep learning accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 123,
                                "start": 119
                            }
                        ],
                        "text": "We reuse useful primitives and the low-level loop program AST from Halide and introduce new primitives to optimize for GPUs and accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 4,
                                "start": 0
                            }
                        ],
                        "text": "GPUs rely on rapid context switching of many warps of threads [39]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 73,
                                "start": 69
                            }
                        ],
                        "text": "This optimization can greatly reduce execution time, particularly in GPUs and specialized accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 94,
                                "start": 90
                            }
                        ],
                        "text": "Moreover, we introduce new transformation primitives to address the challenges brought by GPUs and also enable deployment to specialized accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 238,
                                "start": 234
                            }
                        ],
                        "text": "By combining these three modules, TVM can take model descriptions from existing deep learning frameworks, perform joint high-level and low-level optimizations, and generate hardware-specific optimized code for back-ends such as CPUs, GPUs, and FPGA-based specialized accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 11,
                                "start": 7
                            }
                        ],
                        "text": "Modern GPUs offer massive parallelism, requiring us to bake parallel patterns into schedule transformations."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 151,
                                "start": 147
                            }
                        ],
                        "text": "Leveraging Specific Hardware Features and Abstractions Deep learning accelerators introduce optimized tensor compute primitives [1, 11, 20], while GPUs and CPUs continuously evolve with improvements to their processing elements."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 94,
                                "start": 78
                            }
                        ],
                        "text": "The tensor operator scheduling is also related to other works on DSL for GPUs [17, 23, 33, 34] as well as works on polyhedral-based loop transformation [5, 38]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 251,
                                "start": 247
                            }
                        ],
                        "text": "\u2022 We build an end-to-end compilation and optimization stack allowing the deployment of deep learning workloads specified in high-level frameworks (including Caffe, MXNet, PyTorch, Caffe2, CNTK) to diverse hardware back-ends (including CPUs, server GPUs, mobile GPUs, and FPGA-based accelerators)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 139,
                                "start": 135
                            }
                        ],
                        "text": "Mapping deep learning workloads to these devices is complicated by the diversity of hardware characteristics, including embedded CPUs, GPUs, FPGAs, and ASICs (e.g., the TPU [20])."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 114,
                                "start": 110
                            }
                        ],
                        "text": "Current frameworks rely on vendor-specific operator libraries and optimize for a narrow range of server-class GPUs."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 98,
                                "start": 94
                            }
                        ],
                        "text": "We specifically focus on solving the new scheduling challenges of deep learning workloads for GPUs and specialized accelerators."
                    },
                    "intents": []
                }
            ],
            "corpusId": 7490888,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "aa3553beb4bfa0793a4bed05704e35412342800e",
            "isKey": true,
            "numCitedBy": 132,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": "Parallel patterns (e.g., map, reduce) have gained traction as an abstraction for targeting parallel accelerators and are a promising answer to the performance portability problem. However, compiling high-level programs into efficient low-level parallel code is challenging. Current approaches start from a high-level parallel IR and proceed to emit GPU code directly in one big step. Fixed strategies are used to optimize and map parallelism exploiting properties of a particular GPU generation leading to performance portability issues. We introduce the LIFT IR, a new data-parallel IR which encodes OpenCL-specific constructs as functional patterns. Our prior work has shown that this functional nature simplifies the exploration of optimizations and mapping of parallelism from portable high-level programs using rewrite-rules. This paper describes how LIFT IR programs are compiled into efficient OpenCL code. This is non-trivial as many performance sensitive details such as memory allocation, array accesses or synchronization are not explicitly represented in the LIFT IR. We present techniques which overcome this challenge by exploiting the pattern's high-level semantics. Our evaluation shows that the LIFT IR is flexible enough to express GPU programs with complex optimizations achieving performance on par with manually optimized code."
            },
            "slug": "LIFT:-A-functional-data-parallel-IR-for-GPU-code-Steuwer-Remmelg",
            "title": {
                "fragments": [],
                "text": "LIFT: A functional data-parallel IR for high-performance GPU code generation"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This paper describes how LIFT IR programs are compiled into efficient OpenCL code, a new data-parallel IR which encodes OpenCL-specific constructs as functional patterns which is flexible enough to express GPU programs with complex optimizations achieving performance on par with manually optimized code."
            },
            "venue": {
                "fragments": [],
                "text": "2017 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2388466"
                        ],
                        "name": "Matthieu Courbariaux",
                        "slug": "Matthieu-Courbariaux",
                        "structuredName": {
                            "firstName": "Matthieu",
                            "lastName": "Courbariaux",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matthieu Courbariaux"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1751762"
                        ],
                        "name": "Yoshua Bengio",
                        "slug": "Yoshua-Bengio",
                        "structuredName": {
                            "firstName": "Yoshua",
                            "lastName": "Bengio",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yoshua Bengio"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145719986"
                        ],
                        "name": "J. David",
                        "slug": "J.-David",
                        "structuredName": {
                            "firstName": "Jean-Pierre",
                            "lastName": "David",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. David"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 108,
                                "start": 100
                            }
                        ],
                        "text": "Ultra Low Precision Operators We demonstrate TVM\u2019s ability to support ultra low precision inference [12, 31] by generating highly optimized operators that operate on fixed-point data types of less than 8-bits."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 1518846,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a5733ff08daff727af834345b9cfff1d0aa109ec",
            "isKey": false,
            "numCitedBy": 2134,
            "numCiting": 52,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep Neural Networks (DNN) have achieved state-of-the-art results in a wide range of tasks, with the best results obtained with large training sets and large models. In the past, GPUs enabled these breakthroughs because of their greater computational speed. In the future, faster computation at both training and test time is likely to be crucial for further progress and for consumer applications on low-power devices. As a result, there is much interest in research and development of dedicated hardware for Deep Learning (DL). Binary weights, i.e., weights which are constrained to only two possible values (e.g. -1 or 1), would bring great benefits to specialized DL hardware by replacing many multiply-accumulate operations by simple accumulations, as multipliers are the most space and power-hungry components of the digital implementation of neural networks. We introduce BinaryConnect, a method which consists in training a DNN with binary weights during the forward and backward propagations, while retaining precision of the stored weights in which gradients are accumulated. Like other dropout schemes, we show that BinaryConnect acts as regularizer and we obtain near state-of-the-art results with BinaryConnect on the permutation-invariant MNIST, CIFAR-10 and SVHN."
            },
            "slug": "BinaryConnect:-Training-Deep-Neural-Networks-with-Courbariaux-Bengio",
            "title": {
                "fragments": [],
                "text": "BinaryConnect: Training Deep Neural Networks with binary weights during propagations"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "BinaryConnect is introduced, a method which consists in training a DNN with binary weights during the forward and backward propagations, while retaining precision of the stored weights in which gradients are accumulated, and near state-of-the-art results with BinaryConnect are obtained on the permutation-invariant MNIST, CIFAR-10 and SVHN."
            },
            "venue": {
                "fragments": [],
                "text": "NIPS"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1706327"
                        ],
                        "name": "Arvind K. Sujeeth",
                        "slug": "Arvind-K.-Sujeeth",
                        "structuredName": {
                            "firstName": "Arvind",
                            "lastName": "Sujeeth",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Arvind K. Sujeeth"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34946720"
                        ],
                        "name": "HyoukJoong Lee",
                        "slug": "HyoukJoong-Lee",
                        "structuredName": {
                            "firstName": "HyoukJoong",
                            "lastName": "Lee",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "HyoukJoong Lee"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144806284"
                        ],
                        "name": "Kevin J. Brown",
                        "slug": "Kevin-J.-Brown",
                        "structuredName": {
                            "firstName": "Kevin",
                            "lastName": "Brown",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kevin J. Brown"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1712987"
                        ],
                        "name": "Tiark Rompf",
                        "slug": "Tiark-Rompf",
                        "structuredName": {
                            "firstName": "Tiark",
                            "lastName": "Rompf",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tiark Rompf"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1694512"
                        ],
                        "name": "H. Chafi",
                        "slug": "H.-Chafi",
                        "structuredName": {
                            "firstName": "Hassan",
                            "lastName": "Chafi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Chafi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110541864"
                        ],
                        "name": "Michael Wu",
                        "slug": "Michael-Wu",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Wu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michael Wu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2920004"
                        ],
                        "name": "Anand R. Atreya",
                        "slug": "Anand-R.-Atreya",
                        "structuredName": {
                            "firstName": "Anand",
                            "lastName": "Atreya",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Anand R. Atreya"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1795826"
                        ],
                        "name": "Martin Odersky",
                        "slug": "Martin-Odersky",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Odersky",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Martin Odersky"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1746638"
                        ],
                        "name": "K. Olukotun",
                        "slug": "K.-Olukotun",
                        "structuredName": {
                            "firstName": "Kunle",
                            "lastName": "Olukotun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Olukotun"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 205,
                                "start": 201
                            }
                        ],
                        "text": "Experimental results demonstrate that TVM delivers performance across hardware back-ends that are competitive with state-of-the-art hand tuned libraries for low-power CPU, mobile GPU, and server-class GPUs."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 44,
                                "start": 40
                            }
                        ],
                        "text": "Finally, in addition to being useful to GPUs, memory scopes allow us to tag special memory buffers and create special lowering rules when targeting specialized deep learning accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 123,
                                "start": 119
                            }
                        ],
                        "text": "We reuse useful primitives and the low-level loop program AST from Halide and introduce new primitives to optimize for GPUs and accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 4,
                                "start": 0
                            }
                        ],
                        "text": "GPUs rely on rapid context switching of many warps of threads [39]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 73,
                                "start": 69
                            }
                        ],
                        "text": "This optimization can greatly reduce execution time, particularly in GPUs and specialized accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 94,
                                "start": 90
                            }
                        ],
                        "text": "Moreover, we introduce new transformation primitives to address the challenges brought by GPUs and also enable deployment to specialized accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 238,
                                "start": 234
                            }
                        ],
                        "text": "By combining these three modules, TVM can take model descriptions from existing deep learning frameworks, perform joint high-level and low-level optimizations, and generate hardware-specific optimized code for back-ends such as CPUs, GPUs, and FPGA-based specialized accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 11,
                                "start": 7
                            }
                        ],
                        "text": "Modern GPUs offer massive parallelism, requiring us to bake parallel patterns into schedule transformations."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 151,
                                "start": 147
                            }
                        ],
                        "text": "Leveraging Specific Hardware Features and Abstractions Deep learning accelerators introduce optimized tensor compute primitives [1, 11, 20], while GPUs and CPUs continuously evolve with improvements to their processing elements."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 94,
                                "start": 78
                            }
                        ],
                        "text": "The tensor operator scheduling is also related to other works on DSL for GPUs [17, 23, 33, 34] as well as works on polyhedral-based loop transformation [5, 38]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 251,
                                "start": 247
                            }
                        ],
                        "text": "\u2022 We build an end-to-end compilation and optimization stack allowing the deployment of deep learning workloads specified in high-level frameworks (including Caffe, MXNet, PyTorch, Caffe2, CNTK) to diverse hardware back-ends (including CPUs, server GPUs, mobile GPUs, and FPGA-based accelerators)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 139,
                                "start": 135
                            }
                        ],
                        "text": "Mapping deep learning workloads to these devices is complicated by the diversity of hardware characteristics, including embedded CPUs, GPUs, FPGAs, and ASICs (e.g., the TPU [20])."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 114,
                                "start": 110
                            }
                        ],
                        "text": "Current frameworks rely on vendor-specific operator libraries and optimize for a narrow range of server-class GPUs."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 98,
                                "start": 94
                            }
                        ],
                        "text": "We specifically focus on solving the new scheduling challenges of deep learning workloads for GPUs and specialized accelerators."
                    },
                    "intents": []
                }
            ],
            "corpusId": 14168355,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "63dc0896fd3fd7a6c40beff5beca638e778db4fc",
            "isKey": true,
            "numCitedBy": 218,
            "numCiting": 17,
            "paperAbstract": {
                "fragments": [],
                "text": "As the size of datasets continues to grow, machine learning applications are becoming increasingly limited by the amount of available computational power. Taking advantage of modern hardware requires using multiple parallel programming models targeted at different devices (e.g. CPUs and GPUs). However, programming these devices to run efficiently and correctly is difficult, error-prone, and results in software that is harder to read and maintain. We present OptiML, a domain-specific language (DSL) for machine learning. OptiML is an implicitly parallel, expressive and high performance alternative to MATLAB and C++. OptiML performs domain-specific analyses and optimizations and automatically generates CUDA code for GPUs. We show that OptiML outperforms explicitly parallelized MATLAB code in nearly all cases."
            },
            "slug": "OptiML:-An-Implicitly-Parallel-Domain-Specific-for-Sujeeth-Lee",
            "title": {
                "fragments": [],
                "text": "OptiML: An Implicitly Parallel Domain-Specific Language for Machine Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 37,
                "text": "OptiML is an implicitly parallel, expressive and high performance alternative to MATLAB and C++ and shows that OptiML outperforms explicitly parallelized MATLAB code in nearly all cases."
            },
            "venue": {
                "fragments": [],
                "text": "ICML"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144604354"
                        ],
                        "name": "James Hegarty",
                        "slug": "James-Hegarty",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Hegarty",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "James Hegarty"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2207916"
                        ],
                        "name": "J. Brunhaver",
                        "slug": "J.-Brunhaver",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Brunhaver",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Brunhaver"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2375710"
                        ],
                        "name": "Zach DeVito",
                        "slug": "Zach-DeVito",
                        "structuredName": {
                            "firstName": "Zach",
                            "lastName": "DeVito",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zach DeVito"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34973968"
                        ],
                        "name": "Noy Cohen",
                        "slug": "Noy-Cohen",
                        "structuredName": {
                            "firstName": "Noy",
                            "lastName": "Cohen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Noy Cohen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32534031"
                        ],
                        "name": "Steven Bell",
                        "slug": "Steven-Bell",
                        "structuredName": {
                            "firstName": "Steven",
                            "lastName": "Bell",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Steven Bell"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153088378"
                        ],
                        "name": "Artem Vasilyev",
                        "slug": "Artem-Vasilyev",
                        "structuredName": {
                            "firstName": "Artem",
                            "lastName": "Vasilyev",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Artem Vasilyev"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144764327"
                        ],
                        "name": "M. Horowitz",
                        "slug": "M.-Horowitz",
                        "structuredName": {
                            "firstName": "Mark",
                            "lastName": "Horowitz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Horowitz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144872229"
                        ],
                        "name": "P. Hanrahan",
                        "slug": "P.-Hanrahan",
                        "structuredName": {
                            "firstName": "Pat",
                            "lastName": "Hanrahan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Hanrahan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 64,
                                "start": 60
                            }
                        ],
                        "text": "Our tensor expression takes cues from Halide [30], Darkroom [16], and TACO [22], with the primary enhancements being support for new schedule optimizations discussed below."
                    },
                    "intents": []
                }
            ],
            "corpusId": 14571476,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6e0c9e737eb7eb153a6b4a000faae3c1c6c753e4",
            "isKey": false,
            "numCitedBy": 141,
            "numCiting": 35,
            "paperAbstract": {
                "fragments": [],
                "text": "Specialized image signal processors (ISPs) exploit the structure of image processing pipelines to minimize memory bandwidth using the architectural pattern of line-buffering, where all intermediate data between each stage is stored in small on-chip buffers. This provides high energy efficiency, allowing long pipelines with tera-op/sec. image processing in battery-powered devices, but traditionally requires painstaking manual design in hardware. Based on this pattern, we present Darkroom, a language and compiler for image processing. The semantics of the Darkroom language allow it to compile programs directly into line-buffered pipelines, with all intermediate values in local line-buffer storage, eliminating unnecessary communication with off-chip DRAM. We formulate the problem of optimally scheduling line-buffered pipelines to minimize buffering as an integer linear program. Finally, given an optimally scheduled pipeline, Darkroom synthesizes hardware descriptions for ASIC or FPGA, or fast CPU code. We evaluate Darkroom implementations of a range of applications, including a camera pipeline, low-level feature detection algorithms, and deblurring. For many applications, we demonstrate gigapixel/sec. performance in under 0.5mm2 of ASIC silicon at 250 mW (simulated on a 45nm foundry process), real-time 1080p/60 video processing using a fraction of the resources of a modern FPGA, and tens of megapixels/sec. of throughput on a quad-core x86 processor."
            },
            "slug": "Darkroom:-compiling-high-level-image-processing-Hegarty-Brunhaver",
            "title": {
                "fragments": [],
                "text": "Darkroom: compiling high-level image processing code into hardware pipelines"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "The semantics of the Darkroom language allow it to compile programs directly into line-buffered pipelines, with all intermediate values in local line-buffer storage, eliminating unnecessary communication with off-chip DRAM."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50579876"
                        ],
                        "name": "Yu-hsin Chen",
                        "slug": "Yu-hsin-Chen",
                        "structuredName": {
                            "firstName": "Yu-hsin",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yu-hsin Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1775477"
                        ],
                        "name": "J. Emer",
                        "slug": "J.-Emer",
                        "structuredName": {
                            "firstName": "Joel",
                            "lastName": "Emer",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Emer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1691305"
                        ],
                        "name": "V. Sze",
                        "slug": "V.-Sze",
                        "structuredName": {
                            "firstName": "Vivienne",
                            "lastName": "Sze",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Sze"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 139,
                                "start": 128
                            }
                        ],
                        "text": "Leveraging Specific Hardware Features and Abstractions Deep learning accelerators introduce optimized tensor compute primitives [1, 11, 20], while GPUs and CPUs continuously evolve with improvements to their processing elements."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 137,
                                "start": 125
                            }
                        ],
                        "text": "We introduce the Vanilla Deep Learning Accelerator (VDLA) which distills characteristics from previous accelerator proposals [11, 20, 25] into a minimalist hardware architecture."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 105,
                                "start": 94
                            }
                        ],
                        "text": "These natural decompositions have led to the recent trend of adding tensor compute primitives [1, 11, 20]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 3291270,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5ec594e9f5ca4b629be28625cd78c882514ea3be",
            "isKey": false,
            "numCitedBy": 838,
            "numCiting": 46,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep convolutional neural networks (CNNs) are widely used in modern AI systems for their superior accuracy but at the cost of high computational complexity. The complexity comes from the need to simultaneously process hundreds of filters and channels in the high-dimensional convolutions, which involve a significant amount of data movement. Although highly-parallel compute paradigms, such as SIMD/SIMT, effectively address the computation requirement to achieve high throughput, energy consumption still remains high as data movement can be more expensive than computation. Accordingly, finding a dataflow that supports parallel processing with minimal data movement cost is crucial to achieving energy-efficient CNN processing without compromising accuracy. In this paper, we present a novel dataflow, called row-stationary (RS), that minimizes data movement energy consumption on a spatial architecture. This is realized by exploiting local data reuse of filter weights and feature map pixels, i.e., activations, in the high-dimensional convolutions, and minimizing data movement of partial sum accumulations. Unlike dataflows used in existing designs, which only reduce certain types of data movement, the proposed RS dataflow can adapt to different CNN shape configurations and reduces all types of data movement through maximally utilizing the processing engine (PE) local storage, direct inter-PE communication and spatial parallelism. To evaluate the energy efficiency of the different dataflows, we propose an analysis framework that compares energy cost under the same hardware area and processing parallelism constraints. Experiments using the CNN configurations of AlexNet show that the proposed RS dataflow is more energy efficient than existing dataflows in both convolutional (1.4\u00d7 to 2.5\u00d7) and fully-connected layers (at least 1.3\u00d7 for batch size larger than 16). The RS dataflow has also been demonstrated on a fabricated chip, which verifies our energy analysis."
            },
            "slug": "Eyeriss:-A-Spatial-Architecture-for-Dataflow-for-Chen-Emer",
            "title": {
                "fragments": [],
                "text": "Eyeriss: A Spatial Architecture for Energy-Efficient Dataflow for Convolutional Neural Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "A novel dataflow, called row-stationary (RS), is presented that minimizes data movement energy consumption on a spatial architecture and can adapt to different CNN shape configurations and reduces all types of data movement through maximally utilizing the processing engine local storage, direct inter-PE communication and spatial parallelism."
            },
            "venue": {
                "fragments": [],
                "text": "2016 ACM/IEEE 43rd Annual International Symposium on Computer Architecture (ISCA)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913774"
                        ],
                        "name": "Tianqi Chen",
                        "slug": "Tianqi-Chen",
                        "structuredName": {
                            "firstName": "Tianqi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianqi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2124778071"
                        ],
                        "name": "Mu Li",
                        "slug": "Mu-Li",
                        "structuredName": {
                            "firstName": "Mu",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mu Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110420880"
                        ],
                        "name": "Yutian Li",
                        "slug": "Yutian-Li",
                        "structuredName": {
                            "firstName": "Yutian",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yutian Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1491081747"
                        ],
                        "name": "Min Lin",
                        "slug": "Min-Lin",
                        "structuredName": {
                            "firstName": "Min",
                            "lastName": "Lin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Min Lin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48246959"
                        ],
                        "name": "Naiyan Wang",
                        "slug": "Naiyan-Wang",
                        "structuredName": {
                            "firstName": "Naiyan",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Naiyan Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1508337194"
                        ],
                        "name": "Minjie Wang",
                        "slug": "Minjie-Wang",
                        "structuredName": {
                            "firstName": "Minjie",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Minjie Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39102205"
                        ],
                        "name": "Tianjun Xiao",
                        "slug": "Tianjun-Xiao",
                        "structuredName": {
                            "firstName": "Tianjun",
                            "lastName": "Xiao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianjun Xiao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2113742783"
                        ],
                        "name": "Bing Xu",
                        "slug": "Bing-Xu",
                        "structuredName": {
                            "firstName": "Bing",
                            "lastName": "Xu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bing Xu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "151505981"
                        ],
                        "name": "Chiyuan Zhang",
                        "slug": "Chiyuan-Zhang",
                        "structuredName": {
                            "firstName": "Chiyuan",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chiyuan Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38448016"
                        ],
                        "name": "Zheng Zhang",
                        "slug": "Zheng-Zhang",
                        "structuredName": {
                            "firstName": "Zheng",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zheng Zhang"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 88
                            }
                        ],
                        "text": "Computational graphs are a common way to represent programs in deep learning frameworks [3, 4, 6, 8]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 211,
                                "start": 208
                            }
                        ],
                        "text": "Barrier inserted automatically by compiler All threads cooperatively load AS and BS in different parallel patterns for thread_group (by, bx) in cross(64, 64): for thread_item (ty, tx) in cross(2, 2): local CL[8][8] = 0 shared AS[2][8], BS[2][8] for k in range(1024): for i in range(4): AS[ty][i*4+tx] = A[k][by*64+ty*8+i*4+tx] for each i in 0."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 16,
                                "start": 13
                            }
                        ],
                        "text": "inp_buffer AL[8][8], BL[8][8] acc_buffer CL[8][8] for yo in range(128): for xo in range(128): vdla."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 233,
                                "start": 224
                            }
                        ],
                        "text": "Current deep learning frameworks, such as TensorFlow, MXNet, Caffe, and PyTorch rely on a computational graph intermediate representation to implement optimizations such as auto differentiation and dynamic memory management [3, 4, 8]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 211,
                                "start": 206
                            }
                        ],
                        "text": "Barrier inserted automatically by compiler\nAll threads cooperatively load AS and BS in different parallel patterns for thread_group (by, bx) in cross(64, 64): for thread_item (ty, tx) in cross(2, 2): local CL[8][8] = 0 shared AS[2][8], BS[2][8] for k in range(1024): for i in range(4): AS[ty][i*4+tx] = A[k][by*64+ty*8+i*4+tx] for each i in 0..4: BS[ty][i*4+tx] = B[k][bx*64+ty*8+i*4+tx] memory_barrier_among_threads() for yi in range(8): for xi in range(8): CL[yi][xi] += AS[yi] * BS[xi] for yi in range(8): for xi in range(8): C[yo*8+yi][xo*8+xi] = CL[yi][xi]\nWe introduce the concept of memory scopes to the schedule space so that a compute stage (AS and BS in the code) can be marked as shared."
                    },
                    "intents": []
                }
            ],
            "corpusId": 1507815,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "62df84d6a4d26f95e4714796c2337c9848cc13b5",
            "isKey": false,
            "numCitedBy": 1891,
            "numCiting": 16,
            "paperAbstract": {
                "fragments": [],
                "text": "MXNet is a multi-language machine learning (ML) library to ease the development of ML algorithms, especially for deep neural networks. Embedded in the host language, it blends declarative symbolic expression with imperative tensor computation. It offers auto differentiation to derive gradients. MXNet is computation and memory efficient and runs on various heterogeneous systems, ranging from mobile devices to distributed GPU clusters. \nThis paper describes both the API design and the system implementation of MXNet, and explains how embedding of both symbolic expression and tensor operation is handled in a unified fashion. Our preliminary experiments reveal promising results on large scale deep neural network applications using multiple GPU machines."
            },
            "slug": "MXNet:-A-Flexible-and-Efficient-Machine-Learning-Chen-Li",
            "title": {
                "fragments": [],
                "text": "MXNet: A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "The API design and the system implementation of MXNet are described, and it is explained how embedding of both symbolic expression and tensor operation is handled in a unified fashion."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2115490017"
                        ],
                        "name": "Dao-Fu Liu",
                        "slug": "Dao-Fu-Liu",
                        "structuredName": {
                            "firstName": "Dao-Fu",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dao-Fu Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144049725"
                        ],
                        "name": "Tianshi Chen",
                        "slug": "Tianshi-Chen",
                        "structuredName": {
                            "firstName": "Tianshi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianshi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39419985"
                        ],
                        "name": "Shaoli Liu",
                        "slug": "Shaoli-Liu",
                        "structuredName": {
                            "firstName": "Shaoli",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shaoli Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2069662"
                        ],
                        "name": "Jinhong Zhou",
                        "slug": "Jinhong-Zhou",
                        "structuredName": {
                            "firstName": "Jinhong",
                            "lastName": "Zhou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jinhong Zhou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2115867314"
                        ],
                        "name": "Shengyuan Zhou",
                        "slug": "Shengyuan-Zhou",
                        "structuredName": {
                            "firstName": "Shengyuan",
                            "lastName": "Zhou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shengyuan Zhou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1731764"
                        ],
                        "name": "O. Temam",
                        "slug": "O.-Temam",
                        "structuredName": {
                            "firstName": "Olivier",
                            "lastName": "Temam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Temam"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32215073"
                        ],
                        "name": "Xiaobing Feng",
                        "slug": "Xiaobing-Feng",
                        "structuredName": {
                            "firstName": "Xiaobing",
                            "lastName": "Feng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xiaobing Feng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8453780"
                        ],
                        "name": "Xuehai Zhou",
                        "slug": "Xuehai-Zhou",
                        "structuredName": {
                            "firstName": "Xuehai",
                            "lastName": "Zhou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xuehai Zhou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "7377735"
                        ],
                        "name": "Yunji Chen",
                        "slug": "Yunji-Chen",
                        "structuredName": {
                            "firstName": "Yunji",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yunji Chen"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 137,
                                "start": 125
                            }
                        ],
                        "text": "We introduce the Vanilla Deep Learning Accelerator (VDLA) which distills characteristics from previous accelerator proposals [11, 20, 25] into a minimalist hardware architecture."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 8940335,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "68837728232463651283edbb7ef0c93b2f502b2b",
            "isKey": false,
            "numCitedBy": 266,
            "numCiting": 49,
            "paperAbstract": {
                "fragments": [],
                "text": "Machine Learning (ML) techniques are pervasive tools in various emerging commercial applications, but have to be accommodated by powerful computer systems to process very large data. Although general-purpose CPUs and GPUs have provided straightforward solutions, their energy-efficiencies are limited due to their excessive supports for flexibility. Hardware accelerators may achieve better energy-efficiencies, but each accelerator often accommodates only a single ML technique (family). According to the famous No-Free-Lunch theorem in the ML domain, however, an ML technique performs well on a dataset may perform poorly on another dataset, which implies that such accelerator may sometimes lead to poor learning accuracy. Even if regardless of the learning accuracy, such accelerator can still become inapplicable simply because the concrete ML task is altered, or the user chooses another ML technique. In this study, we present an ML accelerator called PuDianNao, which accommodates seven representative ML techniques, including k-means, k-nearest neighbors, naive bayes, support vector machine, linear regression, classification tree, and deep neural network. Benefited from our thorough analysis on computational primitives and locality properties of different ML techniques, PuDianNao can perform up to 1056 GOP/s (e.g., additions and multiplications) in an area of 3.51 mm^2, and consumes 596 mW only. Compared with the NVIDIA K20M GPU (28nm process), PuDianNao (65nm process) is 1.20x faster, and can reduce the energy by 128.41x."
            },
            "slug": "PuDianNao:-A-Polyvalent-Machine-Learning-Liu-Chen",
            "title": {
                "fragments": [],
                "text": "PuDianNao: A Polyvalent Machine Learning Accelerator"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "An ML accelerator called PuDianNao is presented, which accommodates seven representative ML techniques, including k-means, k-nearest neighbors, naive bayes, support vector machine, linear regression, classification tree, and deep neural network, and can perform up to 1056 GOP/s, and consumes 596 mW only."
            },
            "venue": {
                "fragments": [],
                "text": "ASPLOS"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145687683"
                        ],
                        "name": "V. Volkov",
                        "slug": "V.-Volkov",
                        "structuredName": {
                            "firstName": "Vasily",
                            "lastName": "Volkov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Volkov"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 66,
                                "start": 62
                            }
                        ],
                        "text": "GPUs rely on rapid context switching of many warps of threads [39]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 57827291,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "ac425b104c5884f0fa7b98d764d4785a7ee3d822",
            "isKey": false,
            "numCitedBy": 63,
            "numCiting": 60,
            "paperAbstract": {
                "fragments": [],
                "text": "Modern commodity processors such as GPUs may execute up to about a thousand of physical threads per chip to better utilize their numerous execution units and hide execution latencies. Understanding this novel capability, however, is hindered by the overall complexity of the hardware and complexity of typical workloads. In this dissertation, we suggest a better way to understand modern multithreaded performance by considering a family of synthetic workloads, which use the same key hardware capabilities \u2013 memory access, arithmetic operations, and multithreading \u2013 but are otherwise as simple as possible.One of our surprising findings is that prior performance models for GPUs fail on these workloads: they mispredict observed throughputs by factors of up to 1.7. We analyze these prior approaches, identify a number of common pitfalls, and discuss the related subtleties in understanding concurrency and Little\u2019s Law. Also, we help to further our understanding by considering a few basic questions, such as on how different latencies compare with each other in terms of latency hiding, and how the number of threads needed to hide latency depends on basic parameters of executed code such as arithmetic intensity. Finally, we outline a performance modeling framework that is free from the found limitations.As a tangential development, we present a number of novel experimental studies, such as on how mean memory latency depends on memory throughput, how latencies of individual memory accesses are distributed around the mean, and how occupancy varies during execution."
            },
            "slug": "Understanding-Latency-Hiding-on-GPUs-Volkov",
            "title": {
                "fragments": [],
                "text": "Understanding Latency Hiding on GPUs"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "A better way to understand modern multithreaded performance is suggested by considering a family of synthetic workloads, which use the same key hardware capabilities \u2013 memory access, arithmetic operations, and multithreading \u2013 but are otherwise as simple as possible."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2965025"
                        ],
                        "name": "Troels Henriksen",
                        "slug": "Troels-Henriksen",
                        "structuredName": {
                            "firstName": "Troels",
                            "lastName": "Henriksen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Troels Henriksen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "17859936"
                        ],
                        "name": "Niels G. W. Serup",
                        "slug": "Niels-G.-W.-Serup",
                        "structuredName": {
                            "firstName": "Niels",
                            "lastName": "Serup",
                            "middleNames": [
                                "G.",
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Niels G. W. Serup"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1911509"
                        ],
                        "name": "M. Elsman",
                        "slug": "M.-Elsman",
                        "structuredName": {
                            "firstName": "M.",
                            "lastName": "Elsman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Elsman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1749372"
                        ],
                        "name": "F. Henglein",
                        "slug": "F.-Henglein",
                        "structuredName": {
                            "firstName": "Fritz",
                            "lastName": "Henglein",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Henglein"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1943909"
                        ],
                        "name": "C. Oancea",
                        "slug": "C.-Oancea",
                        "structuredName": {
                            "firstName": "Cosmin",
                            "lastName": "Oancea",
                            "middleNames": [
                                "Eugen"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Oancea"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 9148755,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f463b6d692704baf9463e7d8b39e6032c23c4ec9",
            "isKey": false,
            "numCitedBy": 99,
            "numCiting": 59,
            "paperAbstract": {
                "fragments": [],
                "text": "Futhark is a purely functional data-parallel array language that offers a machine-neutral programming model and an optimising compiler that generates OpenCL code for GPUs. This paper presents the design and implementation of three key features of Futhark that seek a suitable middle ground with imperative approaches. First, in order to express efficient code inside the parallel constructs, we introduce a simple type system for in-place updates that ensures referential transparency and supports equational reasoning. Second, we furnish Futhark with parallel operators capable of expressing efficient strength-reduced code, along with their fusion rules. Third, we present a flattening transformation aimed at enhancing the degree of parallelism that (i) builds on loop interchange and distribution but uses higher-order reasoning rather than array-dependence analysis, and (ii) still allows further locality-of-reference optimisations. Finally, an evaluation on 16 benchmarks demonstrates the impact of the language and compiler features and shows application-level performance competitive with hand-written GPU code."
            },
            "slug": "Futhark:-purely-functional-GPU-programming-with-and-Henriksen-Serup",
            "title": {
                "fragments": [],
                "text": "Futhark: purely functional GPU-programming with nested parallelism and in-place array updates"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This paper presents the design and implementation of three key features of Futhark that seek a suitable middle ground with imperative approaches and presents a flattening transformation aimed at enhancing the degree of parallelism."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2496412"
                        ],
                        "name": "Connelly Barnes",
                        "slug": "Connelly-Barnes",
                        "structuredName": {
                            "firstName": "Connelly",
                            "lastName": "Barnes",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Connelly Barnes"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 163,
                                "start": 159
                            }
                        ],
                        "text": "The process of generating multiple valid implementations builds on Halide\u2019s idea of decoupling descriptions from computation rules (or schedule optimizations) [30], for y in range(1024): for x in range(1024): C[y][x] = 0 for k in range(1024): C[y][x] += A[k][y] * B[k][x]"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 49,
                                "start": 45
                            }
                        ],
                        "text": "Our tensor expression takes cues from Halide [30], Darkroom [16], and TACO [22], with the primary enhancements being support for new schedule optimizations discussed below."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 11,
                                "start": 7
                            }
                        ],
                        "text": "Halide [30] introduced the idea of separation between"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 66,
                                "start": 62
                            }
                        ],
                        "text": "Adopting the decoupled compute/schedule principle from Halide [30], we use a schedule to denote a specific mapping from a tensor expression to low-level code."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 30,
                                "start": 26
                            }
                        ],
                        "text": "This layer extends Halide [30]\u2019s compute/schedule separation concept by also separating target hardware intrinsics from transformation primitives, which enables support for novel accelerators and their corresponding new intrinsics."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 5885207,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4d23db55e6671a82c95dacec33b2967a4b8b677d",
            "isKey": true,
            "numCitedBy": 878,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "Image processing pipelines combine the challenges of stencil computations and stream programs. They are composed of large graphs of different stencil stages, as well as complex reductions, and stages with global or data-dependent access patterns. Because of their complex structure, the performance difference between a naive implementation of a pipeline and an optimized one is often an order of magnitude. Efficient implementations require optimization of both parallelism and locality, but due to the nature of stencils, there is a fundamental tension between parallelism, locality, and introducing redundant recomputation of shared values. We present a systematic model of the tradeoff space fundamental to stencil pipelines, a schedule representation which describes concrete points in this space for each stage in an image processing pipeline, and an optimizing compiler for the Halide image processing language that synthesizes high performance implementations from a Halide algorithm and a schedule. Combining this compiler with stochastic search over the space of schedules enables terse, composable programs to achieve state-of-the-art performance on a wide range of real image processing pipelines, and across different hardware architectures, including multicores with SIMD, and heterogeneous CPU+GPU execution. From simple Halide programs written in a few hours, we demonstrate performance up to 5x faster than hand-tuned C, intrinsics, and CUDA implementations optimized by experts over weeks or months, for image processing applications beyond the reach of past automatic compilers."
            },
            "slug": "Halide:-a-language-and-compiler-for-optimizing-and-Ragan-Kelley-Barnes",
            "title": {
                "fragments": [],
                "text": "Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A systematic model of the tradeoff space fundamental to stencil pipelines is presented, a schedule representation which describes concrete points in this space for each stage in an image processing pipeline, and an optimizing compiler for the Halide image processing language that synthesizes high performance implementations from a Halide algorithm and a schedule are presented."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI"
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144580027"
                        ],
                        "name": "Dong Yu",
                        "slug": "Dong-Yu",
                        "structuredName": {
                            "firstName": "Dong",
                            "lastName": "Yu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dong Yu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1883205"
                        ],
                        "name": "Adam Eversole",
                        "slug": "Adam-Eversole",
                        "structuredName": {
                            "firstName": "Adam",
                            "lastName": "Eversole",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Adam Eversole"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1727524"
                        ],
                        "name": "M. Seltzer",
                        "slug": "M.-Seltzer",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Seltzer",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Seltzer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39922478"
                        ],
                        "name": "K. Yao",
                        "slug": "K.-Yao",
                        "structuredName": {
                            "firstName": "Kaisheng",
                            "lastName": "Yao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Yao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32857606"
                        ],
                        "name": "B. Guenter",
                        "slug": "B.-Guenter",
                        "structuredName": {
                            "firstName": "Brian",
                            "lastName": "Guenter",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Guenter"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2787022"
                        ],
                        "name": "O. Kuchaiev",
                        "slug": "O.-Kuchaiev",
                        "structuredName": {
                            "firstName": "Oleksii",
                            "lastName": "Kuchaiev",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Kuchaiev"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1745715"
                        ],
                        "name": "F. Seide",
                        "slug": "F.-Seide",
                        "structuredName": {
                            "firstName": "Frank",
                            "lastName": "Seide",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Seide"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2145337420"
                        ],
                        "name": "Huaming Wang",
                        "slug": "Huaming-Wang",
                        "structuredName": {
                            "firstName": "Huaming",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Huaming Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1755472"
                        ],
                        "name": "J. Droppo",
                        "slug": "J.-Droppo",
                        "structuredName": {
                            "firstName": "Jasha",
                            "lastName": "Droppo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Droppo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3109481"
                        ],
                        "name": "Zhiheng Huang",
                        "slug": "Zhiheng-Huang",
                        "structuredName": {
                            "firstName": "Zhiheng",
                            "lastName": "Huang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhiheng Huang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1681543"
                        ],
                        "name": "G. Zweig",
                        "slug": "G.-Zweig",
                        "structuredName": {
                            "firstName": "Geoffrey",
                            "lastName": "Zweig",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Zweig"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1692790"
                        ],
                        "name": "C. Rossbach",
                        "slug": "C.-Rossbach",
                        "structuredName": {
                            "firstName": "Christopher",
                            "lastName": "Rossbach",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Rossbach"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145369739"
                        ],
                        "name": "J. Currey",
                        "slug": "J.-Currey",
                        "structuredName": {
                            "firstName": "Jon",
                            "lastName": "Currey",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Currey"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "116506812"
                        ],
                        "name": "Bhaskar Mitra",
                        "slug": "Bhaskar-Mitra",
                        "structuredName": {
                            "firstName": "Bhaskar",
                            "lastName": "Mitra",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bhaskar Mitra"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "s TVM\u2019s architecture and how a system programmer can extend it to support new back-ends. 3 Optimizing Computational Graphs Computational graphs are a common way to represent programs in DL frameworks [3,4,7,9]. Figure 3 shows Figure 3: Example computational graph of a two-layer convolutional neural network. Each node in the graph represents an operation that consumes one or more tensors and produces one or"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "s will help reduce cost even further. This FPGA-based experiment showcases TVM\u2019s ability to adapt to new architectures and the hardware intrinsics they expose. 7 Related Work Deep learning frameworks [3,4,7,9] provide convenient interfaces for users to express DL workloads and deploy them easily on different hardware back-ends. While existing frameworks currently depend on vendor-speci\ufb01c tensor operator li"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "ameworks, such as TensorFlow, MXNet, Caffe, and PyTorch, rely on a computational graph intermediate representation to implement optimizations, e.g., auto differentiation and dynamic memory management [3, 4, 9]. Graph-level optimizations, however, are often too high-level to handle hardware back-endspeci\ufb01c operator-level transformations. Most of these frameworks focus on a narrow class of server-class GPU d"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 38247584,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3fc68a68225edce1635bc32054c1425db287fba3",
            "isKey": true,
            "numCitedBy": 383,
            "numCiting": 38,
            "paperAbstract": {
                "fragments": [],
                "text": "We introduce computational network (CN), a unified framework for describing arbitrary learning machines, such as deep neural networks (DNNs), convolutional neural networks (CNNs), recurrent neural networks (RNNs), long short term memory (LSTM), logistic regression, and maximum entropy model, that can be illustrated as a series of computational steps. A CN is a directed graph in which each leaf node represents an input value or a parameter and each non-leaf node represents a matrix operation upon its children. We describe algorithms to carry out forward computation and gradient calculation in CN and introduce most popular computation node types used in a typical CN. We further introduce the computational network toolkit (CNTK), an implementation of CN that supports both GPU and CPU. We describe the architecture and the key components of the CNTK, the command line options to use CNTK, and the network definition and model editing language, and provide sample setups for acoustic model, language model, and spoken language understanding. We also describe the Argon speech recognition decoder as an example to integrate with CNTK."
            },
            "slug": "An-introduction-to-computational-networks-and-the-Yu-Eversole",
            "title": {
                "fragments": [],
                "text": "An introduction to computational networks and the computational network toolkit (invited talk)"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "The computational network toolkit (CNTK), an implementation of CN that supports both GPU and CPU, is introduced and the architecture and the key components of the CNTK are described, the command line options to use C NTK, and the network definition and model editing language are described."
            },
            "venue": {
                "fragments": [],
                "text": "INTERSPEECH"
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47368718"
                        ],
                        "name": "Ravi Teja Mullapudi",
                        "slug": "Ravi-Teja-Mullapudi",
                        "structuredName": {
                            "firstName": "Ravi",
                            "lastName": "Mullapudi",
                            "middleNames": [
                                "Teja"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ravi Teja Mullapudi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2665634"
                        ],
                        "name": "Dillon Sharlet",
                        "slug": "Dillon-Sharlet",
                        "structuredName": {
                            "firstName": "Dillon",
                            "lastName": "Sharlet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dillon Sharlet"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2789576"
                        ],
                        "name": "Kayvon Fatahalian",
                        "slug": "Kayvon-Fatahalian",
                        "structuredName": {
                            "firstName": "Kayvon",
                            "lastName": "Fatahalian",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kayvon Fatahalian"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 73,
                                "start": 67
                            }
                        ],
                        "text": "We reuse useful primitives and the low-level loop program AST from Halide and introduce new primitives to optimize for GPUs and accelerators."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 73,
                                "start": 67
                            }
                        ],
                        "text": "The process of generating multiple valid implementations builds on Halide\u2019s idea of decoupling descriptions from computation rules (or schedule optimizations) [30],\nand extends it to support new optimizations (nested parallelism, tensorization, and latency hiding) and a wide array of hardware back-ends."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 99,
                                "start": 95
                            }
                        ],
                        "text": "A predefined cost model is used to automatically schedule image processing pipelines in Halide [27]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 15,
                                "start": 9
                            }
                        ],
                        "text": "We adopt Halide\u2019s insights and reuse its existing useful scheduling primitives in our compiler."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 6,
                                "start": 0
                            }
                        ],
                        "text": "Halide [30] introduced the idea of separation between\ncompute and scheduling."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 44,
                                "start": 38
                            }
                        ],
                        "text": "Our tensor expression takes cues from Halide [30], Darkroom [16], and TACO [22], with the primary enhancements being support for new schedule optimizations discussed below."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 61,
                                "start": 55
                            }
                        ],
                        "text": "Adopting the decoupled compute/schedule principle from Halide [30], we use a schedule to denote a specific mapping from a tensor expression to low-level code."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 25,
                                "start": 19
                            }
                        ],
                        "text": "This layer extends Halide [30]\u2019s compute/schedule separation concept by also separating target hardware intrinsics from transformation primitives, which enables support for novel accelerators and their corresponding new intrinsics."
                    },
                    "intents": []
                }
            ],
            "corpusId": 14400771,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "9b240a87b11d085641d6640f73cc3cc2d678e305",
            "isKey": true,
            "numCitedBy": 129,
            "numCiting": 17,
            "paperAbstract": {
                "fragments": [],
                "text": "The Halide image processing language has proven to be an effective system for authoring high-performance image processing code. Halide programmers need only provide a high-level strategy for mapping an image processing pipeline to a parallel machine (a schedule), and the Halide compiler carries out the mechanical task of generating platform-specific code that implements the schedule. Unfortunately, designing high-performance schedules for complex image processing pipelines requires substantial knowledge of modern hardware architecture and code-optimization techniques. In this paper we provide an algorithm for automatically generating high-performance schedules for Halide programs. Our solution extends the function bounds analysis already present in the Halide compiler to automatically perform locality and parallelism-enhancing global program transformations typical of those employed by expert Halide developers. The algorithm does not require costly (and often impractical) auto-tuning, and, in seconds, generates schedules for a broad set of image processing benchmarks that are performance-competitive with, and often better than, schedules manually authored by expert Halide developers on server and mobile CPUs, as well as GPUs."
            },
            "slug": "Automatically-scheduling-halide-image-processing-Mullapudi-Adams",
            "title": {
                "fragments": [],
                "text": "Automatically scheduling halide image processing pipelines"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "An algorithm for automatically generating high-performance schedules for Halide programs that does not require costly (and often impractical) auto-tuning, and generates schedules for a broad set of image processing benchmarks that are performance-competitive with, and often better than, schedules manually authored by expert Halide developers on server and mobile CPUs, as well as GPUs."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143887493"
                        ],
                        "name": "Mohammad Rastegari",
                        "slug": "Mohammad-Rastegari",
                        "structuredName": {
                            "firstName": "Mohammad",
                            "lastName": "Rastegari",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mohammad Rastegari"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2004053"
                        ],
                        "name": "Vicente Ordonez",
                        "slug": "Vicente-Ordonez",
                        "structuredName": {
                            "firstName": "Vicente",
                            "lastName": "Ordonez",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vicente Ordonez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40497777"
                        ],
                        "name": "Joseph Redmon",
                        "slug": "Joseph-Redmon",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Redmon",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Joseph Redmon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143787583"
                        ],
                        "name": "Ali Farhadi",
                        "slug": "Ali-Farhadi",
                        "structuredName": {
                            "firstName": "Ali",
                            "lastName": "Farhadi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ali Farhadi"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 108,
                                "start": 100
                            }
                        ],
                        "text": "Ultra Low Precision Operators We demonstrate TVM\u2019s ability to support ultra low precision inference [12, 31] by generating highly optimized operators that operate on fixed-point data types of less than 8-bits."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 14925907,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b649a98ce77ece8cd7638bb74ab77d22d9be77e7",
            "isKey": false,
            "numCitedBy": 2591,
            "numCiting": 48,
            "paperAbstract": {
                "fragments": [],
                "text": "We propose two efficient approximations to standard convolutional neural networks: Binary-Weight-Networks and XNOR-Networks. In Binary-Weight-Networks, the filters are approximated with binary values resulting in 32\\(\\times \\) memory saving. In XNOR-Networks, both the filters and the input to convolutional layers are binary. XNOR-Networks approximate convolutions using primarily binary operations. This results in 58\\(\\times \\) faster convolutional operations (in terms of number of the high precision operations) and 32\\(\\times \\) memory savings. XNOR-Nets offer the possibility of running state-of-the-art networks on CPUs (rather than GPUs) in real-time. Our binary networks are simple, accurate, efficient, and work on challenging visual tasks. We evaluate our approach on the ImageNet classification task. The classification accuracy with a Binary-Weight-Network version of AlexNet is the same as the full-precision AlexNet. We compare our method with recent network binarization methods, BinaryConnect and BinaryNets, and outperform these methods by large margins on ImageNet, more than \\(16\\,\\%\\) in top-1 accuracy. Our code is available at: http://allenai.org/plato/xnornet."
            },
            "slug": "XNOR-Net:-ImageNet-Classification-Using-Binary-Rastegari-Ordonez",
            "title": {
                "fragments": [],
                "text": "XNOR-Net: ImageNet Classification Using Binary Convolutional Neural Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "The Binary-Weight-Network version of AlexNet is compared with recent network binarization methods, BinaryConnect and BinaryNets, and outperform these methods by large margins on ImageNet, more than \\(16\\,\\%\\) in top-1 accuracy."
            },
            "venue": {
                "fragments": [],
                "text": "ECCV"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39353098"
                        ],
                        "name": "Kaiming He",
                        "slug": "Kaiming-He",
                        "structuredName": {
                            "firstName": "Kaiming",
                            "lastName": "He",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kaiming He"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1771551"
                        ],
                        "name": "X. Zhang",
                        "slug": "X.-Zhang",
                        "structuredName": {
                            "firstName": "X.",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "X. Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3080683"
                        ],
                        "name": "Shaoqing Ren",
                        "slug": "Shaoqing-Ren",
                        "structuredName": {
                            "firstName": "Shaoqing",
                            "lastName": "Ren",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shaoqing Ren"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [],
                        "name": "Jian Sun",
                        "slug": "Jian-Sun",
                        "structuredName": {
                            "firstName": "Jian",
                            "lastName": "Sun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jian Sun"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 58,
                                "start": 52
                            }
                        ],
                        "text": "Overall, latency hiding improves performance on all ResNet layers."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 26,
                                "start": 20
                            }
                        ],
                        "text": "Figure 20 shows the ResNet inference time breakdown between the CPU-only execution and the CPU+FPGA execution."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 94,
                                "start": 90
                            }
                        ],
                        "text": "The benchmarks are based on real world deep learning inference workloads including ResNet [15], MobileNet [18], LSTM Language Model [43], Deep Q Network (DQN) [26] and Deep Convolutional Generative Adversarial Networks (DCGAN) [29]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 135,
                                "start": 129
                            }
                        ],
                        "text": "To evaluate the effectiveness of operator level optimization, we also perform a breakdown comparison for\neach tensor operator in ResNet and MobileNet, shown in Figure 14."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 54,
                                "start": 48
                            }
                        ],
                        "text": "Due to its shallow convolution depth, the first ResNet convolution layer could not be efficiently offloaded on the FPGA and is instead computed on the CPU."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 27,
                                "start": 21
                            }
                        ],
                        "text": "We run each layer of ResNet on the accelerator, and use TVM to generate two schedules: one with latency hiding, and one without."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 98,
                                "start": 92
                            }
                        ],
                        "text": "Figure 16 shows the comparison between TVM tensor operators against hand-optimized ones for ResNet and\nMobileNet."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 154,
                                "start": 148
                            }
                        ],
                        "text": "The result of DQN (3.8\u00d7 speedup) is due to its use of unconventional operators (4\u00d74 conv2d, strides=2) that are not well optimized by cuDNN while the ResNet workloads are more conventional."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 17,
                                "start": 11
                            }
                        ],
                        "text": "End-to-end ResNet Evaluation We leverage TVM to generate ResNet inference kernels on the PYNQ platform and offload as many layers as possible to VDLA."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 38,
                                "start": 32
                            }
                        ],
                        "text": "All other convolution layers in ResNet, however, are amenable to efficient offloading."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 85,
                                "start": 79
                            }
                        ],
                        "text": "In Figure 17, we compare TVM against the Caffe2 ultra low precision library on ResNet for 2-bit activations, 1-bit weights inference."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 114,
                                "start": 108
                            }
                        ],
                        "text": "These on-chip buffers are nowhere near large enough to provide enough on-chip storage for a single layer of ResNet, and therefore enable a case study on effective memory reuse and latency hiding."
                    },
                    "intents": []
                }
            ],
            "corpusId": 6447277,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "77f0a39b8e02686fd85b01971f8feb7f60971f80",
            "isKey": true,
            "numCitedBy": 6555,
            "numCiting": 33,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep residual networks have emerged as a family of extremely deep architectures showing compelling accuracy and nice convergence behaviors. In this paper, we analyze the propagation formulations behind the residual building blocks, which suggest that the forward and backward signals can be directly propagated from one block to any other block, when using identity mappings as the skip connections and after-addition activation. A series of ablation experiments support the importance of these identity mappings. This motivates us to propose a new residual unit, which makes training easier and improves generalization. We report improved results using a 1001-layer ResNet on CIFAR-10 (4.62 % error) and CIFAR-100, and a 200-layer ResNet on ImageNet. Code is available at: https://github.com/KaimingHe/resnet-1k-layers."
            },
            "slug": "Identity-Mappings-in-Deep-Residual-Networks-He-Zhang",
            "title": {
                "fragments": [],
                "text": "Identity Mappings in Deep Residual Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "The propagation formulations behind the residual building blocks suggest that the forward and backward signals can be directly propagated from one block to any other block, when using identity mappings as the skip connections and after-addition activation."
            },
            "venue": {
                "fragments": [],
                "text": "ECCV"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "73175007"
                        ],
                        "name": "Andrew Lavin",
                        "slug": "Andrew-Lavin",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Lavin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Lavin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145565184"
                        ],
                        "name": "Scott Gray",
                        "slug": "Scott-Gray",
                        "structuredName": {
                            "firstName": "Scott",
                            "lastName": "Gray",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Scott Gray"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "nv2d operators in ResNet-18 and all depthwise conv2d operators in MobileNet. Tested on TITAN X. See Table 2 for the con\ufb01gurations of these operators. We also include a weight pre-transformed Winograd [24] for 3x3 conv2d (TVM PT). ResNet-18 MobileNet 0.0 100.0 200.0 300.0 400.0 500.0 600.0 700.0 800.0 Time(ms) DQN 0.0 2.0 4.0 6.0 8.0 10.0 12.0 Tensorflow Lite TVM w/o graph opt TVM Figure 15: ARM A53 en"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 962822,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d5eadd6f059d742d76441fd0a635a21694dd7392",
            "isKey": true,
            "numCitedBy": 617,
            "numCiting": 31,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep convolutional neural networks take GPU-days of computation to train on large data sets. Pedestrian detection for self driving cars requires very low latency. Image recognition for mobile phones is constrained by limited processing resources. The success of convolutional neural networks in these situations is limited by how fast we can compute them. Conventional FFT based convolution is fast for large filters, but state of the art convolutional neural networks use small, 3 3 filters. We introduce a new class of fast algorithms for convolutional neural networks using Winograd's minimal filtering algorithms. The algorithms compute minimal complexity convolution over small tiles, which makes them fast with small filters and small batch sizes. We benchmark a GPU implementation of our algorithm with the VGG network and show state of the art throughput at batch sizes from 1 to 64."
            },
            "slug": "Fast-Algorithms-for-Convolutional-Neural-Networks-Lavin-Gray",
            "title": {
                "fragments": [],
                "text": "Fast Algorithms for Convolutional Neural Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "A new class of fast algorithms for convolutional neural networks is introduced using Winograd's minimal filtering algorithms, which compute minimal complexity convolution over small tiles, which makes them fast with small filters and small batch sizes."
            },
            "venue": {
                "fragments": [],
                "text": "2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1773260"
                        ],
                        "name": "Jason Ansel",
                        "slug": "Jason-Ansel",
                        "structuredName": {
                            "firstName": "Jason",
                            "lastName": "Ansel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jason Ansel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145683292"
                        ],
                        "name": "S. Kamil",
                        "slug": "S.-Kamil",
                        "structuredName": {
                            "firstName": "Shoaib",
                            "lastName": "Kamil",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kamil"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1803567"
                        ],
                        "name": "K. Veeramachaneni",
                        "slug": "K.-Veeramachaneni",
                        "structuredName": {
                            "firstName": "Kalyan",
                            "lastName": "Veeramachaneni",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Veeramachaneni"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1867647"
                        ],
                        "name": "Jeffrey Bosboom",
                        "slug": "Jeffrey-Bosboom",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Bosboom",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jeffrey Bosboom"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398192342"
                        ],
                        "name": "Una-May O\u2019Reilly",
                        "slug": "Una-May-O\u2019Reilly",
                        "structuredName": {
                            "firstName": "Una-May",
                            "lastName": "O\u2019Reilly",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Una-May O\u2019Reilly"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "TLAS [46] and FFTW [15] use auto-tuning to get the best performance. Tensor comprehension [42] applied black-box auto-tuning together with polyhedral optimizations to optimize CUDA kernels. OpenTuner [5] and existing hyper parameter-tuning algorithms [26] apply domainagnostic search. A prede\ufb01ned cost model is used to automatically schedule image processing pipelines in Halide [29]. TVM\u2019s ML model use"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 10489926,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "1ccaac0fdcc5ab37a45d0cc616feeaa67a3d4ca1",
            "isKey": false,
            "numCitedBy": 425,
            "numCiting": 45,
            "paperAbstract": {
                "fragments": [],
                "text": "Program autotuning has been shown to achieve better or more portable performance in a number of domains. However, autotuners themselves are rarely portable between projects, for a number of reasons: using a domain-informed search space representation is critical to achieving good results; search spaces can be intractably large and require advanced machine learning techniques; and the landscape of search spaces can vary greatly between different problems, sometimes requiring domain specific search techniques to explore efficiently. This paper introduces OpenTuner, a new open source framework for building domain-specific multi-objective program autotuners. OpenTuner supports fully-customizable configuration representations, an extensible technique representation to allow for domain-specific techniques, and an easy to use interface for communicating with the program to be autotuned. A key capability inside OpenTuner is the use of ensembles of disparate search techniques simultaneously; techniques that perform well will dynamically be allocated a larger proportion of tests. We demonstrate the efficacy and generality of OpenTuner by building autotuners for 7 distinct projects and 16 total benchmarks, showing speedups over prior techniques of these projects of up to 2.8\u03c7 with little programmer effort."
            },
            "slug": "OpenTuner:-An-extensible-framework-for-program-Ansel-Kamil",
            "title": {
                "fragments": [],
                "text": "OpenTuner: An extensible framework for program autotuning"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "The efficacy and generality of OpenTuner are demonstrated by building autotuners for 7 distinct projects and 16 total benchmarks, showing speedups over prior techniques of these projects of up to 2.8\u03c7 with little programmer effort."
            },
            "venue": {
                "fragments": [],
                "text": "2014 23rd International Conference on Parallel Architecture and Compilation (PACT)"
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2290932"
                        ],
                        "name": "Fredrik Kjolstad",
                        "slug": "Fredrik-Kjolstad",
                        "structuredName": {
                            "firstName": "Fredrik",
                            "lastName": "Kjolstad",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Fredrik Kjolstad"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145683292"
                        ],
                        "name": "S. Kamil",
                        "slug": "S.-Kamil",
                        "structuredName": {
                            "firstName": "Shoaib",
                            "lastName": "Kamil",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kamil"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145381703"
                        ],
                        "name": "Stephen Chou",
                        "slug": "Stephen-Chou",
                        "structuredName": {
                            "firstName": "Stephen",
                            "lastName": "Chou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stephen Chou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2636191"
                        ],
                        "name": "D. Lugato",
                        "slug": "D.-Lugato",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Lugato",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Lugato"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 9,
                                "start": 5
                            }
                        ],
                        "text": "TACO [22] introduces a generic way to generate sparse tensor operators on CPU."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 79,
                                "start": 75
                            }
                        ],
                        "text": "Our tensor expression takes cues from Halide [30], Darkroom [16], and TACO [22], with the primary enhancements being support for new schedule optimizations discussed below."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 6326740,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c2e1139691c3a337831e36ee7afeab8817ab5d48",
            "isKey": false,
            "numCitedBy": 201,
            "numCiting": 99,
            "paperAbstract": {
                "fragments": [],
                "text": "Tensor algebra is a powerful tool with applications in machine learning, data analytics, engineering and the physical sciences. Tensors are often sparse and compound operations must frequently be computed in a single kernel for performance and to save memory. Programmers are left to write kernels for every operation of interest, with different mixes of dense and sparse tensors in different formats. The combinations are infinite, which makes it impossible to manually implement and optimize them all. This paper introduces the first compiler technique to automatically generate kernels for any compound tensor algebra operation on dense and sparse tensors. The technique is implemented in a C++ library called taco. Its performance is competitive with best-in-class hand-optimized kernels in popular libraries, while supporting far more tensor operations."
            },
            "slug": "The-tensor-algebra-compiler-Kjolstad-Kamil",
            "title": {
                "fragments": [],
                "text": "The tensor algebra compiler"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "The first compiler technique to automatically generate kernels for any compound tensor algebra operation on dense and sparse tensors is introduced, which is competitive with best-in-class hand-optimized kernels in popular libraries, while supporting far more tensor operations."
            },
            "venue": {
                "fragments": [],
                "text": "Proc. ACM Program. Lang."
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144727050"
                        ],
                        "name": "Andrew G. Howard",
                        "slug": "Andrew-G.-Howard",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Howard",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew G. Howard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2717876"
                        ],
                        "name": "Menglong Zhu",
                        "slug": "Menglong-Zhu",
                        "structuredName": {
                            "firstName": "Menglong",
                            "lastName": "Zhu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Menglong Zhu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [],
                        "name": "Bo Chen",
                        "slug": "Bo-Chen",
                        "structuredName": {
                            "firstName": "Bo",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bo Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2741985"
                        ],
                        "name": "Dmitry Kalenichenko",
                        "slug": "Dmitry-Kalenichenko",
                        "structuredName": {
                            "firstName": "Dmitry",
                            "lastName": "Kalenichenko",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dmitry Kalenichenko"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2108301072"
                        ],
                        "name": "Weijun Wang",
                        "slug": "Weijun-Wang",
                        "structuredName": {
                            "firstName": "Weijun",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Weijun Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47447630"
                        ],
                        "name": "Tobias Weyand",
                        "slug": "Tobias-Weyand",
                        "structuredName": {
                            "firstName": "Tobias",
                            "lastName": "Weyand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tobias Weyand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2612392"
                        ],
                        "name": "M. Andreetto",
                        "slug": "M.-Andreetto",
                        "structuredName": {
                            "firstName": "Marco",
                            "lastName": "Andreetto",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Andreetto"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2595180"
                        ],
                        "name": "Hartwig Adam",
                        "slug": "Hartwig-Adam",
                        "structuredName": {
                            "firstName": "Hartwig",
                            "lastName": "Adam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hartwig Adam"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 12670695,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3647d6d0f151dc05626449ee09cc7bce55be497e",
            "isKey": false,
            "numCitedBy": 10323,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a class of efficient models called MobileNets for mobile and embedded vision applications. MobileNets are based on a streamlined architecture that uses depth-wise separable convolutions to build light weight deep neural networks. We introduce two simple global hyper-parameters that efficiently trade off between latency and accuracy. These hyper-parameters allow the model builder to choose the right sized model for their application based on the constraints of the problem. We present extensive experiments on resource and accuracy tradeoffs and show strong performance compared to other popular models on ImageNet classification. We then demonstrate the effectiveness of MobileNets across a wide range of applications and use cases including object detection, finegrain classification, face attributes and large scale geo-localization."
            },
            "slug": "MobileNets:-Efficient-Convolutional-Neural-Networks-Howard-Zhu",
            "title": {
                "fragments": [],
                "text": "MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This work introduces two simple global hyper-parameters that efficiently trade off between latency and accuracy and demonstrates the effectiveness of MobileNets across a wide range of applications and use cases including object detection, finegrain classification, face attributes and large scale geo-localization."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38909097"
                        ],
                        "name": "Alec Radford",
                        "slug": "Alec-Radford",
                        "structuredName": {
                            "firstName": "Alec",
                            "lastName": "Radford",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alec Radford"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2096458"
                        ],
                        "name": "Luke Metz",
                        "slug": "Luke-Metz",
                        "structuredName": {
                            "firstName": "Luke",
                            "lastName": "Metz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Luke Metz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2127604"
                        ],
                        "name": "Soumith Chintala",
                        "slug": "Soumith-Chintala",
                        "structuredName": {
                            "firstName": "Soumith",
                            "lastName": "Chintala",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Soumith Chintala"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 111,
                                "start": 106
                            }
                        ],
                        "text": "As shown in Figure 18, we outperform the baseline on three available models for both float16 and float32 (DCGAN and LSTM are not yet supported by the baseline) ."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 106,
                                "start": 101
                            }
                        ],
                        "text": "Furthermore, we take advantage of additional TVM capabilities to produce a parallel library implemen-\n1DCGAN and LSTM results are not presented because they are not yet supported by the baseline.\ntation that improves over the baseline."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 231,
                                "start": 227
                            }
                        ],
                        "text": "The benchmarks are based on real world deep learning inference workloads including ResNet [15], MobileNet [18], LSTM Language Model [43], Deep Q Network (DQN) [26] and Deep Convolutional Generative Adversarial Networks (DCGAN) [29]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 11758569,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8388f1be26329fa45e5807e968a641ce170ea078",
            "isKey": false,
            "numCitedBy": 9978,
            "numCiting": 59,
            "paperAbstract": {
                "fragments": [],
                "text": "In recent years, supervised learning with convolutional networks (CNNs) has seen huge adoption in computer vision applications. Comparatively, unsupervised learning with CNNs has received less attention. In this work we hope to help bridge the gap between the success of CNNs for supervised learning and unsupervised learning. We introduce a class of CNNs called deep convolutional generative adversarial networks (DCGANs), that have certain architectural constraints, and demonstrate that they are a strong candidate for unsupervised learning. Training on various image datasets, we show convincing evidence that our deep convolutional adversarial pair learns a hierarchy of representations from object parts to scenes in both the generator and discriminator. Additionally, we use the learned features for novel tasks - demonstrating their applicability as general image representations."
            },
            "slug": "Unsupervised-Representation-Learning-with-Deep-Radford-Metz",
            "title": {
                "fragments": [],
                "text": "Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This work introduces a class of CNNs called deep convolutional generative adversarial networks (DCGANs), that have certain architectural constraints, and demonstrates that they are a strong candidate for unsupervised learning."
            },
            "venue": {
                "fragments": [],
                "text": "ICLR"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913774"
                        ],
                        "name": "Tianqi Chen",
                        "slug": "Tianqi-Chen",
                        "structuredName": {
                            "firstName": "Tianqi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianqi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1730156"
                        ],
                        "name": "Carlos Guestrin",
                        "slug": "Carlos-Guestrin",
                        "structuredName": {
                            "firstName": "Carlos",
                            "lastName": "Guestrin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Carlos Guestrin"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 62,
                                "start": 59
                            }
                        ],
                        "text": "We employ a gradient tree boosting model (based on XGBoost [7]) that makes predictions based on features extracted from the loop program."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 4650265,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "26bc9195c6343e4d7f434dd65b4ad67efe2be27a",
            "isKey": false,
            "numCitedBy": 14160,
            "numCiting": 30,
            "paperAbstract": {
                "fragments": [],
                "text": "Tree boosting is a highly effective and widely used machine learning method. In this paper, we describe a scalable end-to-end tree boosting system called XGBoost, which is used widely by data scientists to achieve state-of-the-art results on many machine learning challenges. We propose a novel sparsity-aware algorithm for sparse data and weighted quantile sketch for approximate tree learning. More importantly, we provide insights on cache access patterns, data compression and sharding to build a scalable tree boosting system. By combining these insights, XGBoost scales beyond billions of examples using far fewer resources than existing systems."
            },
            "slug": "XGBoost:-A-Scalable-Tree-Boosting-System-Chen-Guestrin",
            "title": {
                "fragments": [],
                "text": "XGBoost: A Scalable Tree Boosting System"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "This paper proposes a novel sparsity-aware algorithm for sparse data and weighted quantile sketch for approximate tree learning and provides insights on cache access patterns, data compression and sharding to build a scalable tree boosting system called XGBoost."
            },
            "venue": {
                "fragments": [],
                "text": "KDD"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2117179536"
                        ],
                        "name": "Tien-Fu Chen",
                        "slug": "Tien-Fu-Chen",
                        "structuredName": {
                            "firstName": "Tien-Fu",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tien-Fu Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144212383"
                        ],
                        "name": "J. Baer",
                        "slug": "J.-Baer",
                        "structuredName": {
                            "firstName": "Jean-Loup",
                            "lastName": "Baer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Baer"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 123,
                                "start": 116
                            }
                        ],
                        "text": "On CPUs, memory latency hiding is achieved implicitly with simultaneous multithreading [13] or hardware prefetching [9, 19]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 1450745,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "bc2bba7e1bb4e7d8307aa36bdc5ee86cdd61cc58",
            "isKey": false,
            "numCitedBy": 545,
            "numCiting": 27,
            "paperAbstract": {
                "fragments": [],
                "text": "Memory latency and bandwidth are progressing at a much slower pace than processor performance. In this paper, we describe and evaluate the performance of three variations of a hardware function unit whose goal is to assist a data cache in prefetching data accesses so that memory latency is hidden as often as possible. The basic idea of the prefetching scheme is to keep track of data access patterns in a reference prediction table (RPT) organized as an instruction cache. The three designs differ mostly on the timing of the prefetching. In the simplest scheme (basic), prefetches can be generated one iteration ahead of actual use. The lookahead variation takes advantage of a lookahead program counter that ideally stays one memory latency time ahead of the real program counter and that is used as the control mechanism to generate the prefetches. Finally the correlated scheme uses a more sophisticated design to detect patterns across loop levels. These designs are evaluated by simulating the ten SPEC benchmarks on a cycle-by-cycle basis. The results show that 1) the three hardware prefetching schemes all yield significant reductions in the data access penalty when compared with regular caches, 2) the benefits are greater when the hardware assist augments small on-chip caches, and 3) the lookahead scheme is the preferred one cost-performance wise. >"
            },
            "slug": "Effective-Hardware-Based-Data-Prefetching-for-Chen-Baer",
            "title": {
                "fragments": [],
                "text": "Effective Hardware Based Data Prefetching for High-Performance Processors"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "The results show that the three hardware prefetching schemes all yield significant reductions in the data access penalty when compared with regular caches, the benefits are greater when the hardware assist augments small on-chip caches, and the lookahead scheme is the preferred one cost-performance wise."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans. Computers"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1772079"
                        ],
                        "name": "Sven Verdoolaege",
                        "slug": "Sven-Verdoolaege",
                        "structuredName": {
                            "firstName": "Sven",
                            "lastName": "Verdoolaege",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sven Verdoolaege"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3281978"
                        ],
                        "name": "J. Juega",
                        "slug": "J.-Juega",
                        "structuredName": {
                            "firstName": "Juan",
                            "lastName": "Juega",
                            "middleNames": [
                                "Carlos"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Juega"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145509576"
                        ],
                        "name": "Albert Cohen",
                        "slug": "Albert-Cohen",
                        "structuredName": {
                            "firstName": "Albert",
                            "lastName": "Cohen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Albert Cohen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144431297"
                        ],
                        "name": "J. I. G\u00f3mez",
                        "slug": "J.-I.-G\u00f3mez",
                        "structuredName": {
                            "firstName": "Jos\u00e9",
                            "lastName": "G\u00f3mez",
                            "middleNames": [
                                "Ignacio"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. I. G\u00f3mez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1916522"
                        ],
                        "name": "C. Tenllado",
                        "slug": "C.-Tenllado",
                        "structuredName": {
                            "firstName": "Christian",
                            "lastName": "Tenllado",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Tenllado"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145410654"
                        ],
                        "name": "F. Catthoor",
                        "slug": "F.-Catthoor",
                        "structuredName": {
                            "firstName": "Francky",
                            "lastName": "Catthoor",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Catthoor"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 159,
                                "start": 152
                            }
                        ],
                        "text": "The tensor operator scheduling is also related to other works on DSL for GPUs [17, 23, 33, 34] as well as works on polyhedral-based loop transformation [5, 38]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 1212874,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "963a1e639971e7e3a4e6c871cf9c0b410e5532d0",
            "isKey": false,
            "numCitedBy": 323,
            "numCiting": 65,
            "paperAbstract": {
                "fragments": [],
                "text": "This article addresses the compilation of a sequential program for parallel execution on a modern GPU. To this end, we present a novel source-to-source compiler called PPCG. PPCG singles out for its ability to accelerate computations from any static control loop nest, generating multiple CUDA kernels when necessary. We introduce a multilevel tiling strategy and a code generation scheme for the parallelization and locality optimization of imperfectly nested loops, managing memory and exposing concurrency according to the constraints of modern GPUs. We evaluate our algorithms and tool on the entire PolyBench suite."
            },
            "slug": "Polyhedral-parallel-code-generation-for-CUDA-Verdoolaege-Juega",
            "title": {
                "fragments": [],
                "text": "Polyhedral parallel code generation for CUDA"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "A novel source-to-source compiler called PPCG is presented, which introduces a multilevel tiling strategy and a code generation scheme for the parallelization and locality optimization of imperfectly nested loops, managing memory and exposing concurrency according to the constraints of modern GPUs."
            },
            "venue": {
                "fragments": [],
                "text": "TACO"
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48230516"
                        ],
                        "name": "Matteo Frigo",
                        "slug": "Matteo-Frigo",
                        "structuredName": {
                            "firstName": "Matteo",
                            "lastName": "Frigo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matteo Frigo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2097716"
                        ],
                        "name": "Steven G. Johnson",
                        "slug": "Steven-G.-Johnson",
                        "structuredName": {
                            "firstName": "Steven",
                            "lastName": "Johnson",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Steven G. Johnson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 59,
                                "start": 55
                            }
                        ],
                        "text": "High-performance libraries such as ATLAS [41] and FFTW [14] use auto-tuning to get the best performance."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 73,
                                "start": 65
                            }
                        ],
                        "text": "This method is used to tune high performance computing libraries [14, 41]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 12560207,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "eeb2eb44102bf289db4a22635261d82ffa7dc7db",
            "isKey": false,
            "numCitedBy": 1753,
            "numCiting": 33,
            "paperAbstract": {
                "fragments": [],
                "text": "FFT literature has been mostly concerned with minimizing the number of floating-point operations performed by an algorithm. Unfortunately, on present-day microprocessors this measure is far less important than it used to be, and interactions with the processor pipeline and the memory hierarchy have a larger impact on performance. Consequently, one must know the details of a computer architecture in order to design a fast algorithm. In this paper, we propose an adaptive FFT program that tunes the computation automatically for any particular hardware. We compared our program, called FFTW, with over 40 implementations of the FFT on 7 machines. Our tests show that FFTW's self-optimizing approach usually yields significantly better performance than all other publicly available software. FFTW also compares favorably with machine-specific, vendor-optimized libraries."
            },
            "slug": "FFTW:-an-adaptive-software-architecture-for-the-FFT-Frigo-Johnson",
            "title": {
                "fragments": [],
                "text": "FFTW: an adaptive software architecture for the FFT"
            },
            "tldr": {
                "abstractSimilarityScore": 37,
                "text": "An adaptive FFT program that tunes the computation automatically for any particular hardware, and tests show that FFTW's self-optimizing approach usually yields significantly better performance than all other publicly available software."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the 1998 IEEE International Conference on Acoustics, Speech and Signal Processing, ICASSP '98 (Cat. No.98CH36181)"
            },
            "year": 1998
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144301481"
                        ],
                        "name": "R. C. Whaley",
                        "slug": "R.-C.-Whaley",
                        "structuredName": {
                            "firstName": "R.",
                            "lastName": "Whaley",
                            "middleNames": [
                                "Clinton"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. C. Whaley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1708869"
                        ],
                        "name": "J. Dongarra",
                        "slug": "J.-Dongarra",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Dongarra",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dongarra"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 45,
                                "start": 41
                            }
                        ],
                        "text": "High-performance libraries such as ATLAS [41] and FFTW [14] use auto-tuning to get the best performance."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 73,
                                "start": 65
                            }
                        ],
                        "text": "This method is used to tune high performance computing libraries [14, 41]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 1466414,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "214a0d9c93720aa8c3d10710bca8308e3f2618f5",
            "isKey": false,
            "numCitedBy": 1138,
            "numCiting": 22,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper describes an approach for the automatic generation and optimization of numerical software for processors with deep memory hierarchies and pipelined functional units. The production of such software for machines ranging from desktop workstations to embedded processors can be a tedious and time consuming process. The work described here can help in automating much of this process. We will concentrate our efforts on the widely used linear algebra kernels called the Basic Linear Algebra Subroutines (BLAS). In particular, the work presented here is for general matrix multiply, DGEMM. However much of the technology and approach developed here can be applied to the other Level 3 BLAS and the general strategy can have an impact on basic linear algebra operations in general and may be extended to other important kernel operations."
            },
            "slug": "Automatically-Tuned-Linear-Algebra-Software-Whaley-Dongarra",
            "title": {
                "fragments": [],
                "text": "Automatically Tuned Linear Algebra Software"
            },
            "tldr": {
                "abstractSimilarityScore": 74,
                "text": "An approach for the automatic generation and optimization of numerical software for processors with deep memory hierarchies and pipelined functional units using the widely used linear algebra kernels called the Basic Linear Algebra Subroutines (BLAS)."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the IEEE/ACM SC98 Conference"
            },
            "year": 1998
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3255983"
                        ],
                        "name": "Volodymyr Mnih",
                        "slug": "Volodymyr-Mnih",
                        "structuredName": {
                            "firstName": "Volodymyr",
                            "lastName": "Mnih",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Volodymyr Mnih"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2645384"
                        ],
                        "name": "K. Kavukcuoglu",
                        "slug": "K.-Kavukcuoglu",
                        "structuredName": {
                            "firstName": "Koray",
                            "lastName": "Kavukcuoglu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Kavukcuoglu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145824029"
                        ],
                        "name": "David Silver",
                        "slug": "David-Silver",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Silver",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David Silver"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2228824"
                        ],
                        "name": "Andrei A. Rusu",
                        "slug": "Andrei-A.-Rusu",
                        "structuredName": {
                            "firstName": "Andrei",
                            "lastName": "Rusu",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrei A. Rusu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144056327"
                        ],
                        "name": "J. Veness",
                        "slug": "J.-Veness",
                        "structuredName": {
                            "firstName": "Joel",
                            "lastName": "Veness",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Veness"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1792298"
                        ],
                        "name": "Marc G. Bellemare",
                        "slug": "Marc-G.-Bellemare",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Bellemare",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Marc G. Bellemare"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1753223"
                        ],
                        "name": "A. Graves",
                        "slug": "A.-Graves",
                        "structuredName": {
                            "firstName": "Alex",
                            "lastName": "Graves",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Graves"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3137672"
                        ],
                        "name": "Martin A. Riedmiller",
                        "slug": "Martin-A.-Riedmiller",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Riedmiller",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Martin A. Riedmiller"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145600108"
                        ],
                        "name": "A. Fidjeland",
                        "slug": "A.-Fidjeland",
                        "structuredName": {
                            "firstName": "Andreas",
                            "lastName": "Fidjeland",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Fidjeland"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2273072"
                        ],
                        "name": "Georg Ostrovski",
                        "slug": "Georg-Ostrovski",
                        "structuredName": {
                            "firstName": "Georg",
                            "lastName": "Ostrovski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Georg Ostrovski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48348688"
                        ],
                        "name": "Stig Petersen",
                        "slug": "Stig-Petersen",
                        "structuredName": {
                            "firstName": "Stig",
                            "lastName": "Petersen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stig Petersen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50388928"
                        ],
                        "name": "Charlie Beattie",
                        "slug": "Charlie-Beattie",
                        "structuredName": {
                            "firstName": "Charlie",
                            "lastName": "Beattie",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Charlie Beattie"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49813280"
                        ],
                        "name": "A. Sadik",
                        "slug": "A.-Sadik",
                        "structuredName": {
                            "firstName": "Amir",
                            "lastName": "Sadik",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Sadik"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2460849"
                        ],
                        "name": "Ioannis Antonoglou",
                        "slug": "Ioannis-Antonoglou",
                        "structuredName": {
                            "firstName": "Ioannis",
                            "lastName": "Antonoglou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ioannis Antonoglou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143776287"
                        ],
                        "name": "Helen King",
                        "slug": "Helen-King",
                        "structuredName": {
                            "firstName": "Helen",
                            "lastName": "King",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Helen King"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2106164"
                        ],
                        "name": "D. Kumaran",
                        "slug": "D.-Kumaran",
                        "structuredName": {
                            "firstName": "Dharshan",
                            "lastName": "Kumaran",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Kumaran"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1688276"
                        ],
                        "name": "Daan Wierstra",
                        "slug": "Daan-Wierstra",
                        "structuredName": {
                            "firstName": "Daan",
                            "lastName": "Wierstra",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daan Wierstra"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34313265"
                        ],
                        "name": "S. Legg",
                        "slug": "S.-Legg",
                        "structuredName": {
                            "firstName": "Shane",
                            "lastName": "Legg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Legg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48987704"
                        ],
                        "name": "D. Hassabis",
                        "slug": "D.-Hassabis",
                        "structuredName": {
                            "firstName": "Demis",
                            "lastName": "Hassabis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Hassabis"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 163,
                                "start": 159
                            }
                        ],
                        "text": "The benchmarks are based on real world deep learning inference workloads including ResNet [15], MobileNet [18], LSTM Language Model [43], Deep Q Network (DQN) [26] and Deep Convolutional Generative Adversarial Networks (DCGAN) [29]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 17,
                                "start": 14
                            }
                        ],
                        "text": "The result of DQN (3.8\u00d7 speedup) is due to its use of unconventional operators (4\u00d74 conv2d, strides=2) that are not well optimized by cuDNN while the ResNet workloads are more conventional."
                    },
                    "intents": []
                }
            ],
            "corpusId": 205242740,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e0e9a94c4a6ba219e768b4e59f72c18f0a22e23d",
            "isKey": true,
            "numCitedBy": 16393,
            "numCiting": 36,
            "paperAbstract": {
                "fragments": [],
                "text": "The theory of reinforcement learning provides a normative account, deeply rooted in psychological and neuroscientific perspectives on animal behaviour, of how agents may optimize their control of an environment. To use reinforcement learning successfully in situations approaching real-world complexity, however, agents are confronted with a difficult task: they must derive efficient representations of the environment from high-dimensional sensory inputs, and use these to generalize past experience to new situations. Remarkably, humans and other animals seem to solve this problem through a harmonious combination of reinforcement learning and hierarchical sensory processing systems, the former evidenced by a wealth of neural data revealing notable parallels between the phasic signals emitted by dopaminergic neurons and temporal difference reinforcement learning algorithms. While reinforcement learning agents have achieved some successes in a variety of domains, their applicability has previously been limited to domains in which useful features can be handcrafted, or to domains with fully observed, low-dimensional state spaces. Here we use recent advances in training deep neural networks to develop a novel artificial agent, termed a deep Q-network, that can learn successful policies directly from high-dimensional sensory inputs using end-to-end reinforcement learning. We tested this agent on the challenging domain of classic Atari 2600 games. We demonstrate that the deep Q-network agent, receiving only the pixels and the game score as inputs, was able to surpass the performance of all previous algorithms and achieve a level comparable to that of a professional human games tester across a set of 49 games, using the same algorithm, network architecture and hyperparameters. This work bridges the divide between high-dimensional sensory inputs and actions, resulting in the first artificial agent that is capable of learning to excel at a diverse array of challenging tasks."
            },
            "slug": "Human-level-control-through-deep-reinforcement-Mnih-Kavukcuoglu",
            "title": {
                "fragments": [],
                "text": "Human-level control through deep reinforcement learning"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This work bridges the divide between high-dimensional sensory inputs and actions, resulting in the first artificial agent that is capable of learning to excel at a diverse array of challenging tasks."
            },
            "venue": {
                "fragments": [],
                "text": "Nature"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3227028"
                        ],
                        "name": "Fr\u00e9d\u00e9ric Bastien",
                        "slug": "Fr\u00e9d\u00e9ric-Bastien",
                        "structuredName": {
                            "firstName": "Fr\u00e9d\u00e9ric",
                            "lastName": "Bastien",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Fr\u00e9d\u00e9ric Bastien"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3087941"
                        ],
                        "name": "Pascal Lamblin",
                        "slug": "Pascal-Lamblin",
                        "structuredName": {
                            "firstName": "Pascal",
                            "lastName": "Lamblin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Pascal Lamblin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1996134"
                        ],
                        "name": "Razvan Pascanu",
                        "slug": "Razvan-Pascanu",
                        "structuredName": {
                            "firstName": "Razvan",
                            "lastName": "Pascanu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Razvan Pascanu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32837403"
                        ],
                        "name": "J. Bergstra",
                        "slug": "J.-Bergstra",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Bergstra",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Bergstra"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153440022"
                        ],
                        "name": "Ian J. Goodfellow",
                        "slug": "Ian-J.-Goodfellow",
                        "structuredName": {
                            "firstName": "Ian",
                            "lastName": "Goodfellow",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ian J. Goodfellow"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47944877"
                        ],
                        "name": "Arnaud Bergeron",
                        "slug": "Arnaud-Bergeron",
                        "structuredName": {
                            "firstName": "Arnaud",
                            "lastName": "Bergeron",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Arnaud Bergeron"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2065828537"
                        ],
                        "name": "Nicolas Bouchard",
                        "slug": "Nicolas-Bouchard",
                        "structuredName": {
                            "firstName": "Nicolas",
                            "lastName": "Bouchard",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nicolas Bouchard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1393680089"
                        ],
                        "name": "David Warde-Farley",
                        "slug": "David-Warde-Farley",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Warde-Farley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David Warde-Farley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1751762"
                        ],
                        "name": "Yoshua Bengio",
                        "slug": "Yoshua-Bengio",
                        "structuredName": {
                            "firstName": "Yoshua",
                            "lastName": "Bengio",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yoshua Bengio"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 8180128,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "855d0f722d75cc56a66a00ede18ace96bafee6bd",
            "isKey": false,
            "numCitedBy": 1375,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "Theano is a linear algebra compiler that optimizes a user's symbolically-specified mathematical computations to produce efficient low-level implementations. In this paper, we present new features and efficiency improvements to Theano, and benchmarks demonstrating Theano's performance relative to Torch7, a recently introduced machine learning library, and to RNNLM, a C++ library targeted at recurrent neural networks."
            },
            "slug": "Theano:-new-features-and-speed-improvements-Bastien-Lamblin",
            "title": {
                "fragments": [],
                "text": "Theano: new features and speed improvements"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "New features and efficiency improvements to Theano are presented, and benchmarks demonstrating Theano's performance relative to Torch7, a recently introduced machine learning library, and to RNNLM, a C++ library targeted at recurrent neural networks."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1715454"
                        ],
                        "name": "N. Jouppi",
                        "slug": "N.-Jouppi",
                        "structuredName": {
                            "firstName": "Norman",
                            "lastName": "Jouppi",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Jouppi"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 123,
                                "start": 116
                            }
                        ],
                        "text": "On CPUs, memory latency hiding is achieved implicitly with simultaneous multithreading [13] or hardware prefetching [9, 19]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 6157765,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dcddcdef6d28d8aac01b88a941d6f92262f58e36",
            "isKey": false,
            "numCitedBy": 1430,
            "numCiting": 11,
            "paperAbstract": {
                "fragments": [],
                "text": "Hardware techniques for improving the performance of caches are presented. Miss caching places a small, fully associative cache between a cache and its refill path. Misses in the cache that hit in the miss cache have only a 1-cycle miss penalty. Small miss caches of 2 to 5 entries are shown to be very effective in removing mapping conflict misses in first-level direct-mapped caches. Victim caching is an improvement to miss caching in that it loads the small fully associative cache with the victim of a miss and not the requested line. Small victim caches of 1 to 5 entries are even more effective at removing conflict misses than miss caching. Stream buffers prefetch cache lines starting at a cache miss address. The prefetched data are placed in the buffer and not in the cache. Stream buffers are useful in removing capacity and compulsory cache misses, as well as some instruction cache conflict misses. An extension to the basic stream buffer, called a multiway stream buffer, is introduced.<<ETX>>"
            },
            "slug": "Improving-direct-mapped-cache-performance-by-the-of-Jouppi",
            "title": {
                "fragments": [],
                "text": "Improving direct-mapped cache performance by the addition of a small fully-associative cache and prefetch buffers"
            },
            "tldr": {
                "abstractSimilarityScore": 59,
                "text": "Hardware techniques for improving the performance of caches are presented and stream buffers prefetch cache lines starting at a cache miss address, which are useful in removing capacity and compulsory cache misses, as well as some instruction cache conflict misses."
            },
            "venue": {
                "fragments": [],
                "text": "[1990] Proceedings. The 17th Annual International Symposium on Computer Architecture"
            },
            "year": 1990
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2010354"
                        ],
                        "name": "S. Eggers",
                        "slug": "S.-Eggers",
                        "structuredName": {
                            "firstName": "Susan",
                            "lastName": "Eggers",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Eggers"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1775477"
                        ],
                        "name": "J. Emer",
                        "slug": "J.-Emer",
                        "structuredName": {
                            "firstName": "Joel",
                            "lastName": "Emer",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Emer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "36105267"
                        ],
                        "name": "H. Levy",
                        "slug": "H.-Levy",
                        "structuredName": {
                            "firstName": "Henry",
                            "lastName": "Levy",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Levy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8887400"
                        ],
                        "name": "J. Lo",
                        "slug": "J.-Lo",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Lo",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Lo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39731062"
                        ],
                        "name": "Rebecca L. Stamm",
                        "slug": "Rebecca-L.-Stamm",
                        "structuredName": {
                            "firstName": "Rebecca",
                            "lastName": "Stamm",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Rebecca L. Stamm"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1740142"
                        ],
                        "name": "D. Tullsen",
                        "slug": "D.-Tullsen",
                        "structuredName": {
                            "firstName": "Dean",
                            "lastName": "Tullsen",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Tullsen"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 9173743,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c9d6abd295a9428f249d33901275b7a67d0869cb",
            "isKey": false,
            "numCitedBy": 445,
            "numCiting": 96,
            "paperAbstract": {
                "fragments": [],
                "text": "Simultaneous multithreading is a processor design which consumes both thread-level and instruction-level parallelism. In SMT processors, thread-level parallelism can come from either multithreaded, parallel programs or individual, independent programs in a multiprogramming workload. Instruction-level parallelism comes from each single program or thread. Because it successfully (and simultaneously) exploits both types of parallelism, SMT processors use resources more efficiently, and both instruction throughput and speedups are greater."
            },
            "slug": "Simultaneous-multithreading:-a-platform-for-Eggers-Emer",
            "title": {
                "fragments": [],
                "text": "Simultaneous multithreading: a platform for next-generation processors"
            },
            "tldr": {
                "abstractSimilarityScore": 55,
                "text": "Because simultaneous multithreading successfully (and simultaneously) exploits both types of parallelism, SMT processors use resources more efficiently, and both instruction throughput and speedups are greater."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Micro"
            },
            "year": 1997
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8421815"
                        ],
                        "name": "Kai Sheng Tai",
                        "slug": "Kai-Sheng-Tai",
                        "structuredName": {
                            "firstName": "Kai",
                            "lastName": "Tai",
                            "middleNames": [
                                "Sheng"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kai Sheng Tai"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2166511"
                        ],
                        "name": "R. Socher",
                        "slug": "R.-Socher",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Socher",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Socher"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144783904"
                        ],
                        "name": "Christopher D. Manning",
                        "slug": "Christopher-D.-Manning",
                        "structuredName": {
                            "firstName": "Christopher",
                            "lastName": "Manning",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christopher D. Manning"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 57,
                                "start": 50
                            }
                        ],
                        "text": "We also evaluate\na neural network model that uses TreeRNN [35] to summarize the loop program\u2019s AST without feature engineering."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 45,
                                "start": 41
                            }
                        ],
                        "text": "a neural network model that uses TreeRNN [35] to summarize the loop program\u2019s AST without feature engineering."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 44,
                                "start": 37
                            }
                        ],
                        "text": "We found that that tree boosting and TreeRNN have similar predictive quality."
                    },
                    "intents": []
                }
            ],
            "corpusId": 3033526,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "32de44f01a96d4473d21099d15e25bc2b9f08e2f",
            "isKey": true,
            "numCitedBy": 2533,
            "numCiting": 43,
            "paperAbstract": {
                "fragments": [],
                "text": "Because of their superior ability to preserve sequence information over time, Long Short-Term Memory (LSTM) networks, a type of recurrent neural network with a more complex computational unit, have obtained strong results on a variety of sequence modeling tasks. The only underlying LSTM structure that has been explored so far is a linear chain. However, natural language exhibits syntactic properties that would naturally combine words to phrases. We introduce the Tree-LSTM, a generalization of LSTMs to tree-structured network topologies. Tree-LSTMs outperform all existing systems and strong LSTM baselines on two tasks: predicting the semantic relatedness of two sentences (SemEval 2014, Task 1) and sentiment classification (Stanford Sentiment Treebank)."
            },
            "slug": "Improved-Semantic-Representations-From-Long-Memory-Tai-Socher",
            "title": {
                "fragments": [],
                "text": "Improved Semantic Representations From Tree-Structured Long Short-Term Memory Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "The Tree-LSTM is introduced, a generalization of LSTMs to tree-structured network topologies that outperform all existing systems and strong LSTM baselines on two tasks: predicting the semantic relatedness of two sentences and sentiment classification."
            },
            "venue": {
                "fragments": [],
                "text": "ACL"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144961917"
                        ],
                        "name": "James E. Smith",
                        "slug": "James-E.-Smith",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Smith",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "James E. Smith"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 157,
                                "start": 153
                            }
                        ],
                        "text": "In contrast, specialized deep learning accelerators such as the TPU [20] usually favor leaner control with a decoupled access-execute (DAE) architecture [32] and offload the problem of finegrained synchronization to software."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 13903321,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "27c204d3de3e9289bdf9d67d8e646e6527b18b1a",
            "isKey": false,
            "numCitedBy": 274,
            "numCiting": 43,
            "paperAbstract": {
                "fragments": [],
                "text": "An architecture for improving computer performance is presented and discussed. The main feature of the architecture is a high degree of ._-.-. decoupling between operand access anb execution. This results in an implementation which has two separate instruction streams that communicate via queues. A similar architecture has been previously proposed for array processors, but in that context the software is called on to do most of the coordination and synchronization between the instruction streams. This paper emphasizes implementation features that remove this burden from the programmer. Performance comparisons with a conventional scalar architecture are given, and these show that considerable performance gains are possible. Single instruction stream versions, both physical and conceptual, are discussed with the primary goal of minimizing the differences with conventional architectures. This would allow known compilation and programing techniques to be used. Finally, the problem of deadlock in such a system is discussed, and one possible solution is given."
            },
            "slug": "Decoupled-access/execute-computer-architectures-Smith",
            "title": {
                "fragments": [],
                "text": "Decoupled access/execute computer architectures"
            },
            "tldr": {
                "abstractSimilarityScore": 92,
                "text": "An architecture for improving computer performance is presented and discussed, with the main feature of a high degree of decoupling between operand access anb execution, which results in an implementation which has two separate instruction streams that communicate via queues."
            },
            "venue": {
                "fragments": [],
                "text": "TOCS"
            },
            "year": 1984
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2563432"
                        ],
                        "name": "Wojciech Zaremba",
                        "slug": "Wojciech-Zaremba",
                        "structuredName": {
                            "firstName": "Wojciech",
                            "lastName": "Zaremba",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Wojciech Zaremba"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1701686"
                        ],
                        "name": "Ilya Sutskever",
                        "slug": "Ilya-Sutskever",
                        "structuredName": {
                            "firstName": "Ilya",
                            "lastName": "Sutskever",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ilya Sutskever"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1689108"
                        ],
                        "name": "Oriol Vinyals",
                        "slug": "Oriol-Vinyals",
                        "structuredName": {
                            "firstName": "Oriol",
                            "lastName": "Vinyals",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Oriol Vinyals"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 136,
                                "start": 132
                            }
                        ],
                        "text": "The benchmarks are based on real world deep learning inference workloads including ResNet [15], MobileNet [18], LSTM Language Model [43], Deep Q Network (DQN) [26] and Deep Convolutional Generative Adversarial Networks (DCGAN) [29]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 17719760,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f264e8b33c0d49a692a6ce2c4bcb28588aeb7d97",
            "isKey": false,
            "numCitedBy": 1997,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a simple regularization technique for Recurrent Neural Networks (RNNs) with Long Short-Term Memory (LSTM) units. Dropout, the most successful technique for regularizing neural networks, does not work well with RNNs and LSTMs. In this paper, we show how to correctly apply dropout to LSTMs, and show that it substantially reduces overfitting on a variety of tasks. These tasks include language modeling, speech recognition, image caption generation, and machine translation."
            },
            "slug": "Recurrent-Neural-Network-Regularization-Zaremba-Sutskever",
            "title": {
                "fragments": [],
                "text": "Recurrent Neural Network Regularization"
            },
            "tldr": {
                "abstractSimilarityScore": 34,
                "text": "This paper shows how to correctly apply dropout to LSTMs, and shows that it substantially reduces overfitting on a variety of tasks."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111143430"
                        ],
                        "name": "Samuel Williams",
                        "slug": "Samuel-Williams",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Williams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Samuel Williams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145492285"
                        ],
                        "name": "Andrew Waterman",
                        "slug": "Andrew-Waterman",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Waterman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Waterman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2052996765"
                        ],
                        "name": "David A. Patterson",
                        "slug": "David-A.-Patterson",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Patterson",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David A. Patterson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 8,
                                "start": 0
                            }
                        ],
                        "text": "Roofline performance diagrams provide insight on how well computation and memory resources are utilized on a given system for different benchmarks."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 23,
                                "start": 19
                            }
                        ],
                        "text": "Figure 9: Roofline [42] of an FPGA-based deep learning ac-"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 60,
                                "start": 56
                            }
                        ],
                        "text": "The results are shown in Figure 9 as a roofline diagram [42]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 5703612,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "092217c2267f6e0673590aa151d811e579ff7760",
            "isKey": true,
            "numCitedBy": 1897,
            "numCiting": 58,
            "paperAbstract": {
                "fragments": [],
                "text": "The Roofline model offers insight on how to improve the performance of software and hardware."
            },
            "slug": "Roofline:-an-insightful-visual-performance-model-Williams-Waterman",
            "title": {
                "fragments": [],
                "text": "Roofline: an insightful visual performance model for multicore architectures"
            },
            "tldr": {
                "abstractSimilarityScore": 78,
                "text": "The Roofline model offers insight on how to improve the performance of software and hardware in the rapidly changing world of connected devices."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145847131"
                        ],
                        "name": "S. Kirkpatrick",
                        "slug": "S.-Kirkpatrick",
                        "structuredName": {
                            "firstName": "Scott",
                            "lastName": "Kirkpatrick",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kirkpatrick"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "5882723"
                        ],
                        "name": "C. D. Gelatt",
                        "slug": "C.-D.-Gelatt",
                        "structuredName": {
                            "firstName": "Charles",
                            "lastName": "Gelatt",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. D. Gelatt"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "88645967"
                        ],
                        "name": "M. Vecchi",
                        "slug": "M.-Vecchi",
                        "structuredName": {
                            "firstName": "Michelle",
                            "lastName": "Vecchi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Vecchi"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 61,
                                "start": 57
                            }
                        ],
                        "text": "Instead, we run a parallel simulated annealing algorithm [21]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 205939,
            "fieldsOfStudy": [
                "Physics"
            ],
            "id": "dd5061631a4d11fa394f4421700ebf7e78dcbc59",
            "isKey": false,
            "numCitedBy": 39780,
            "numCiting": 79,
            "paperAbstract": {
                "fragments": [],
                "text": "There is a deep and useful connection between statistical mechanics (the behavior of systems with many degrees of freedom in thermal equilibrium at a finite temperature) and multivariate or combinatorial optimization (finding the minimum of a given function depending on many parameters). A detailed analogy with annealing in solids provides a framework for optimization of the properties of very large and complex systems. This connection to statistical mechanics exposes new information and provides an unfamiliar perspective on traditional optimization problems and methods."
            },
            "slug": "Optimization-by-Simulated-Annealing-Kirkpatrick-Gelatt",
            "title": {
                "fragments": [],
                "text": "Optimization by Simulated Annealing"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "A detailed analogy with annealing in solids provides a framework for optimization of the properties of very large and complex systems."
            },
            "venue": {
                "fragments": [],
                "text": "Science"
            },
            "year": 1983
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 32,
                                "start": 29
                            }
                        ],
                        "text": "push_dep_to(q0) out_buffer CL[2][8] input_buffer AL[2][8] for tx in 0."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 18,
                                "start": 15
                            }
                        ],
                        "text": "input_buffer AL[2][8] out_buffer CL[2][8] q1."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 40,
                                "start": 37
                            }
                        ],
                        "text": "GPU: Thread Cooperation out_buffer CL[2][8][8] in_buffer AL[2][8][8], BL[2][8][8] for each yo in 0."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 35,
                                "start": 32
                            }
                        ],
                        "text": "2): local CL[8][8] = 0 shared AS[2][8], BS[2][8] for each k in 0."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "TensorFlow: Large-scale machine learning on heterogeneous systems"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2015
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 101,
                                "start": 98
                            }
                        ],
                        "text": "We compare our approach with existing deep learning frameworks including MxNet [8] and TensorFlow [2] that rely on highly engineered vendor-specific libraries."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 52,
                                "start": 42
                            }
                        ],
                        "text": "Current deep learning frameworks, such as TensorFlow, MXNet, Caffe, and PyTorch rely on a computational graph intermediate representation to implement optimizations such as auto differentiation and dynamic memory management [3, 4, 8]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 231,
                                "start": 228
                            }
                        ],
                        "text": "Barrier inserted automatically by compiler All threads cooperatively load AS and BS in different parallel patterns for thread_group (by, bx) in cross(64, 64): for thread_item (ty, tx) in cross(2, 2): local CL[8][8] = 0 shared AS[2][8], BS[2][8] for k in range(1024): for i in range(4): AS[ty][i*4+tx] = A[k][by*64+ty*8+i*4+tx] for each i in 0."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 35,
                                "start": 32
                            }
                        ],
                        "text": "accumulate(AL, CL) acc_buffer CL[2][8] inp_buffer AL[2][8] ex."
                    },
                    "intents": []
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Software available from tensorflow.org"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2015
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ": A flexible and efficient machine learning library for heterogeneous distributed systems"
            },
            "venue": {
                "fragments": [],
                "text": "Neural Information Processing Systems , Workshop on Machine Learning Systems ( LearningSys \u2019 15 )"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ": A scalable tree boosting system"
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the 22 Nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Smith . Decoupled access / execute computer architectures"
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the 9 th Annual Symposium on Computer Architecture , ISCA \u2019 82 , pages 112 \u2013 119 , Los Alamitos , CA , USA , 1982"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 9,
                                "start": 5
                            }
                        ],
                        "text": "Weld [28] is a DSL for data processing tasks."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Rethinking the interface between data-intensive applications"
            },
            "venue": {
                "fragments": [],
                "text": "CoRR abs/1709.06416"
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A spatial architecture for energy - efficient dataflow for convolutional neural networks"
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the 43 rd International Symposium on Computer Architecture"
            }
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 24,
            "methodology": 18,
            "result": 1
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 50,
        "totalPages": 5
    },
    "page_url": "https://www.semanticscholar.org/paper/TVM:-End-to-End-Optimization-Stack-for-Deep-Chen-Moreau/ec3071fb918ad69ec80df1ca9cf1fdeb386a9603?sort=total-citations"
}