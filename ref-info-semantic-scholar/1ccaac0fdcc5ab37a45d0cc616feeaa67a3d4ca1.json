{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32809463"
                        ],
                        "name": "Herbert Jordan",
                        "slug": "Herbert-Jordan",
                        "structuredName": {
                            "firstName": "Herbert",
                            "lastName": "Jordan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Herbert Jordan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1788159"
                        ],
                        "name": "Peter Thoman",
                        "slug": "Peter-Thoman",
                        "structuredName": {
                            "firstName": "Peter",
                            "lastName": "Thoman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Peter Thoman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1921538"
                        ],
                        "name": "J. Durillo",
                        "slug": "J.-Durillo",
                        "structuredName": {
                            "firstName": "Juan",
                            "lastName": "Durillo",
                            "middleNames": [
                                "Jos\u00e9"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Durillo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2728915"
                        ],
                        "name": "Simone Pellegrini",
                        "slug": "Simone-Pellegrini",
                        "structuredName": {
                            "firstName": "Simone",
                            "lastName": "Pellegrini",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Simone Pellegrini"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2698283"
                        ],
                        "name": "P. Gschwandtner",
                        "slug": "P.-Gschwandtner",
                        "structuredName": {
                            "firstName": "Philipp",
                            "lastName": "Gschwandtner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Gschwandtner"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1719226"
                        ],
                        "name": "T. Fahringer",
                        "slug": "T.-Fahringer",
                        "structuredName": {
                            "firstName": "Thomas",
                            "lastName": "Fahringer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Fahringer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48624234"
                        ],
                        "name": "H. Moritsch",
                        "slug": "H.-Moritsch",
                        "structuredName": {
                            "firstName": "Hans",
                            "lastName": "Moritsch",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Moritsch"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 12,
                                "start": 8
                            }
                        ],
                        "text": "Insieme [19] Compiler Differential Evolution"
                    },
                    "intents": []
                }
            ],
            "corpusId": 14519457,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "107baec538d50c35a55025a8edf65084a7ef0d9e",
            "isKey": false,
            "numCitedBy": 84,
            "numCiting": 46,
            "paperAbstract": {
                "fragments": [],
                "text": "In this paper we introduce a multi-objective autotuning framework comprising compiler and runtime components. Focusing on individual code regions, our compiler uses a novel search technique to compute a set of optimal solutions, which are encoded into a multi-versioned executable. This enables the runtime system to choose specifically tuned code versions when dynamically adjusting to changing circumstances. We demonstrate our method by tuning loop tiling in cache-sensitive parallel programs, optimizing for both runtime and efficiency. Our static optimizer finds solutions matching or surpassing those determined by exhaustively sampling the search space on a regular grid, while using less than 4% of the computational effort on average. Additionally, we show that parallelism-aware multi-versioning approaches like our own gain a performance improvement of up to 70% over solutions tuned for only one specific number of threads."
            },
            "slug": "A-multi-objective-auto-tuning-framework-for-codes-Jordan-Thoman",
            "title": {
                "fragments": [],
                "text": "A multi-objective auto-tuning framework for parallel codes"
            },
            "tldr": {
                "abstractSimilarityScore": 57,
                "text": "A multi-objective autotuning framework comprising compiler and runtime components that enables the runtime system to choose specifically tuned code versions when dynamically adjusting to changing circumstances."
            },
            "venue": {
                "fragments": [],
                "text": "2012 International Conference for High Performance Computing, Networking, Storage and Analysis"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3288675"
                        ],
                        "name": "F. Agakov",
                        "slug": "F.-Agakov",
                        "structuredName": {
                            "firstName": "Felix",
                            "lastName": "Agakov",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Agakov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "30561807"
                        ],
                        "name": "Edwin V. Bonilla",
                        "slug": "Edwin-V.-Bonilla",
                        "structuredName": {
                            "firstName": "Edwin",
                            "lastName": "Bonilla",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Edwin V. Bonilla"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1874233"
                        ],
                        "name": "J. Cavazos",
                        "slug": "J.-Cavazos",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Cavazos",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Cavazos"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2644436"
                        ],
                        "name": "Bj\u00f6rn Franke",
                        "slug": "Bj\u00f6rn-Franke",
                        "structuredName": {
                            "firstName": "Bj\u00f6rn",
                            "lastName": "Franke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bj\u00f6rn Franke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2043821"
                        ],
                        "name": "G. Fursin",
                        "slug": "G.-Fursin",
                        "structuredName": {
                            "firstName": "Grigori",
                            "lastName": "Fursin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Fursin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401533251"
                        ],
                        "name": "M. O\u2019Boyle",
                        "slug": "M.-O\u2019Boyle",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "O\u2019Boyle",
                            "middleNames": [
                                "F.",
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. O\u2019Boyle"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153031524"
                        ],
                        "name": "J. Thomson",
                        "slug": "J.-Thomson",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Thomson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Thomson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "120284556"
                        ],
                        "name": "M. Toussaint",
                        "slug": "M.-Toussaint",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Toussaint",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Toussaint"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145715698"
                        ],
                        "name": "Christopher K. I. Williams",
                        "slug": "Christopher-K.-I.-Williams",
                        "structuredName": {
                            "firstName": "Christopher",
                            "lastName": "Williams",
                            "middleNames": [
                                "K.",
                                "I."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christopher K. I. Williams"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 165,
                                "start": 151
                            }
                        ],
                        "text": "The area of iterative compilation contains many projects that use different machine learning techniques to optimize lower level compiler optimizations [2, 15, 26, 1]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 7891873,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "56b37f88b109fd455a389642e1747f766f1be471",
            "isKey": false,
            "numCitedBy": 440,
            "numCiting": 27,
            "paperAbstract": {
                "fragments": [],
                "text": "Iterative compiler optimization has been shown to outperform static approaches. This, however, is at the cost of large numbers of evaluations of the program. This paper develops a new methodology to reduce this number and hence speed up iterative optimization. It uses predictive modelling from the domain of machine learning to automatically focus search on those areas likely to give greatest performance. This approach is independent of search algorithm, search space or compiler infrastructure and scales gracefully with the compiler optimization space size. Off-line, a training set of programs is iteratively evaluated and the shape of the spaces and program features are modelled. These models are learnt and used to focus the iterative optimization of a new program. We evaluate two learnt models, an independent and Markov model, and evaluate their worth on two embedded platforms, the Texas Instrument C67I3 and the AMD Au1500. We show that such learnt models can speed up iterative search on large spaces by an order of magnitude. This translates into an average speedup of 1.22 on the TI C6713 and 1.27 on the AMD Au1500 in just 2 evaluations."
            },
            "slug": "Using-machine-learning-to-focus-iterative-Agakov-Bonilla",
            "title": {
                "fragments": [],
                "text": "Using machine learning to focus iterative optimization"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "A new methodology is developed that uses predictive modelling from the domain of machine learning to automatically focus search on those areas likely to give greatest performance, independent of search algorithm, search space or compiler infrastructure and scales gracefully with the compiler optimization space size."
            },
            "venue": {
                "fragments": [],
                "text": "International Symposium on Code Generation and Optimization (CGO'06)"
            },
            "year": 2006
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145683292"
                        ],
                        "name": "S. Kamil",
                        "slug": "S.-Kamil",
                        "structuredName": {
                            "firstName": "Shoaib",
                            "lastName": "Kamil",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kamil"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 9984558,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b5a5b1dcbc0ae07acd87c5212b10182f44a77d15",
            "isKey": false,
            "numCitedBy": 28,
            "numCiting": 140,
            "paperAbstract": {
                "fragments": [],
                "text": "As the complexity of machines and architectures has increased, performance tuning has become more challenging, leading to the failure of general compilers to generate the best possible optimized code. Expert performance programmers can often hand-write code that outperforms compiler-optimized low-level code by an order of magnitude. At the same time, the complexity of programs has also increased, with modern programs built on a variety of abstraction layers to manage complexity, yet these layers hinder efforts at optimization. In fact, it is common to lose one or two additional orders of magnitude in performance when going from a low-level language such as Fortran or C to a high-level language like Python, Ruby, or Matlab. \nGeneral purpose compilers are limited by the inability of program analysis to determine programmer intent, as well as the lack of detailed performance models that always determine the best executable code for a given computation and architecture. The latter problem can be mitigated through auto-tuning , which generates many code variants for a particular problem and empirically determines which performs best on a given architecture. \nThis thesis addresses the problem of how to write programs at a high level while obtaining the performance of code written by performance experts at the low level. To do so, we build domain-specific embedded languages that generate low-level parallel code from a high-level language, and then use auto-tuning to determine the best performing low-level code. Such DSELs avoid analysis by restricting the domain while ensuring programmers specify high-level intent, and by performing empirical auto-tuning instead of modeling machine parameters. As a result, programmers write in high-level languages with portions of their code using DSELs, yet obtain performance equivalent to the best hand-optimized low-level code, across many architectures. \nWe present a methodology for building such auto-tuned DSELs, as well as a software infrastructure and example DSELs using the infrastructure, including a DSEL for structured grid computations and two DSELs for graph algorithms. The structured grid DSEL obtains over 80% of peak performance for a variety of benchmark kernels across different architectures, while the graph algorithm DSELs mitigate all performance loss due to using a high-level language. Overall, the methodology, infrastructure, and example DSELs point to a promising new direction for obtaining high performance while programming in a high-level language."
            },
            "slug": "Productive-High-Performance-Parallel-Programming-Kamil",
            "title": {
                "fragments": [],
                "text": "Productive High Performance Parallel Programming with Auto-tuned Domain-Specific Embedded Languages"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This thesis addresses the problem of how to write programs at a high level while obtaining the performance of code written by performance experts at the low level by building domain-specific embedded languages that generate low-level parallel code from a high-level language, and then using auto-tuning to determine the best performing low- level code."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2101797441"
                        ],
                        "name": "L. Almagor",
                        "slug": "L.-Almagor",
                        "structuredName": {
                            "firstName": "L.",
                            "lastName": "Almagor",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Almagor"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145971118"
                        ],
                        "name": "K. Cooper",
                        "slug": "K.-Cooper",
                        "structuredName": {
                            "firstName": "Keith",
                            "lastName": "Cooper",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Cooper"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1874017"
                        ],
                        "name": "Alexander Grosul",
                        "slug": "Alexander-Grosul",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Grosul",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alexander Grosul"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144757886"
                        ],
                        "name": "T. Harvey",
                        "slug": "T.-Harvey",
                        "structuredName": {
                            "firstName": "Timothy",
                            "lastName": "Harvey",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Harvey"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143994270"
                        ],
                        "name": "Steven W. Reeves",
                        "slug": "Steven-W.-Reeves",
                        "structuredName": {
                            "firstName": "Steven",
                            "lastName": "Reeves",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Steven W. Reeves"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144922029"
                        ],
                        "name": "D. Subramanian",
                        "slug": "D.-Subramanian",
                        "structuredName": {
                            "firstName": "Devika",
                            "lastName": "Subramanian",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Subramanian"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1750325"
                        ],
                        "name": "Linda Torczon",
                        "slug": "Linda-Torczon",
                        "structuredName": {
                            "firstName": "Linda",
                            "lastName": "Torczon",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Linda Torczon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144510278"
                        ],
                        "name": "Todd Waterman",
                        "slug": "Todd-Waterman",
                        "structuredName": {
                            "firstName": "Todd",
                            "lastName": "Waterman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Todd Waterman"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 165,
                                "start": 151
                            }
                        ],
                        "text": "The area of iterative compilation contains many projects that use different machine learning techniques to optimize lower level compiler optimizations [2, 15, 26, 1]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 2639516,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0101f29f127c96fd4338e89f886b27a0011decdd",
            "isKey": false,
            "numCitedBy": 192,
            "numCiting": 38,
            "paperAbstract": {
                "fragments": [],
                "text": "Most modern compilers operate by applying a fixed, program-independent sequence of optimizations to all programs. Compiler writers choose a single \"compilation sequence\", or perhaps a couple of compilation sequences. In choosing a sequence, they may consider performance of benchmarks or other important codes. These sequences are intended as general-purpose tools, accessible through command-line flags such as -O2 and -O3.Specific compilation sequences make a significant difference in the quality of the generated code, whether compiling for speed, for space, or for other metrics. A single universal compilation sequence does not produce the best results over all programs [8, 10, 29, 32]. Finding an optimal program-specific compilation sequence is difficult because the space of potential sequences is huge and the interactions between optimizations are poorly understood. Moreover, there is no systematic exploration of the costs and benefits of searching for good (i.e., within a certain percentage of optimal) program-specific compilation sequences.In this paper, we perform a large experimental study of the space of compilation sequences over a set of known benchmarks, using our prototype adaptive compiler. Our goal is to characterize these spaces and to determine if it is cost-effective to construct custom compilation sequences. We report on five exhaustive enumerations which demonstrate that 80% of the local minima in the space are within 5 to 10% of the optimal solution. We describe three algorithms tailored to search such spaces and report on experiments that use these algorithms to find good compilation sequences. These experiments suggest that properties observed in the enumerations hold for larger search spaces and larger programs. Our findings indicate that for the cost of 200 to 4,550 compilations, we can find custom sequences that are 15 to 25% better than the human-designed fixed-sequence originally used in our compiler."
            },
            "slug": "Finding-effective-compilation-sequences-Almagor-Cooper",
            "title": {
                "fragments": [],
                "text": "Finding effective compilation sequences"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "A large experimental study of the space of compilation sequences over a set of known benchmarks, using the prototype adaptive compiler to characterize these spaces and to determine if it is cost-effective to construct custom compilation sequences."
            },
            "venue": {
                "fragments": [],
                "text": "LCTES '04"
            },
            "year": 2004
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145683292"
                        ],
                        "name": "S. Kamil",
                        "slug": "S.-Kamil",
                        "structuredName": {
                            "firstName": "Shoaib",
                            "lastName": "Kamil",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kamil"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145287069"
                        ],
                        "name": "Cy P. Chan",
                        "slug": "Cy-P.-Chan",
                        "structuredName": {
                            "firstName": "Cy",
                            "lastName": "Chan",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Cy P. Chan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1757847"
                        ],
                        "name": "L. Oliker",
                        "slug": "L.-Oliker",
                        "structuredName": {
                            "firstName": "Leonid",
                            "lastName": "Oliker",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Oliker"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1746446"
                        ],
                        "name": "J. Shalf",
                        "slug": "J.-Shalf",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Shalf",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Shalf"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145117071"
                        ],
                        "name": "Samuel Williams",
                        "slug": "Samuel-Williams",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Williams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Samuel Williams"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 7,
                                "start": 3
                            }
                        ],
                        "text": "In [20], the authors describe a generalized system for autotuning memory-bound stencil computations on modern multicore machines and GPUs."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 10088651,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "7b1928d4a3a141998a04290a52522062b666559f",
            "isKey": false,
            "numCitedBy": 233,
            "numCiting": 31,
            "paperAbstract": {
                "fragments": [],
                "text": "Although stencil auto-tuning has shown tremendous potential in effectively utilizing architectural resources, it has hitherto been limited to single kernel instantiations; in addition, the large variety of stencil kernels used in practice makes this computation pattern difficult to assemble into a library. This work presents a stencil auto-tuning framework that significantly advances programmer productivity by automatically converting a straightforward sequential Fortran 95 stencil expression into tuned parallel implementations in Fortran, C, or CUDA, thus allowing performance portability across diverse computer architectures, including the AMD Barcelona, Intel Nehalem, Sun Victoria Falls, and the latest NVIDIA GPUs. Results show that our generalized methodology delivers significant performance gains of up to 22\u00d7 speedup over the reference serial implementation. Overall we demonstrate that such domain-specific auto-tuners hold enormous promise for architectural efficiency, programmer productivity, performance portability, and algorithmic adaptability on existing and emerging multicore systems."
            },
            "slug": "An-auto-tuning-framework-for-parallel-multicore-Kamil-Chan",
            "title": {
                "fragments": [],
                "text": "An auto-tuning framework for parallel multicore stencil computations"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This work presents a stencil auto-tuning framework that significantly advances programmer productivity by automatically converting a straightforward sequential Fortran 95 stencil expression into tuned parallel implementations in Fortran, C, or CUDA, thus allowing performance portability across diverse computer architectures."
            },
            "venue": {
                "fragments": [],
                "text": "2010 IEEE International Symposium on Parallel & Distributed Processing (IPDPS)"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1773260"
                        ],
                        "name": "Jason Ansel",
                        "slug": "Jason-Ansel",
                        "structuredName": {
                            "firstName": "Jason",
                            "lastName": "Ansel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jason Ansel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145287069"
                        ],
                        "name": "Cy P. Chan",
                        "slug": "Cy-P.-Chan",
                        "structuredName": {
                            "firstName": "Cy",
                            "lastName": "Chan",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Cy P. Chan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "33301740"
                        ],
                        "name": "Y. Wong",
                        "slug": "Y.-Wong",
                        "structuredName": {
                            "firstName": "Yee",
                            "lastName": "Wong",
                            "middleNames": [
                                "Lok"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Y. Wong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37962969"
                        ],
                        "name": "Marek Olszewski",
                        "slug": "Marek-Olszewski",
                        "structuredName": {
                            "firstName": "Marek",
                            "lastName": "Olszewski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Marek Olszewski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145392101"
                        ],
                        "name": "Qin Zhao",
                        "slug": "Qin-Zhao",
                        "structuredName": {
                            "firstName": "Qin",
                            "lastName": "Zhao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Qin Zhao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144397527"
                        ],
                        "name": "A. Edelman",
                        "slug": "A.-Edelman",
                        "structuredName": {
                            "firstName": "Alan",
                            "lastName": "Edelman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Edelman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 14,
                                "start": 11
                            }
                        ],
                        "text": "PetaBricks [3] is an implicitly parallel language and compiler which incorporates the concept of algorithmic choice into the language."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 6959721,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "871411f0ea43c5dda953c22a64b7558b91e40bf8",
            "isKey": false,
            "numCitedBy": 412,
            "numCiting": 47,
            "paperAbstract": {
                "fragments": [],
                "text": "It is often impossible to obtain a one-size-fits-all solution for high performance algorithms when considering different choices for data distributions, parallelism, transformations, and blocking. The best solution to these choices is often tightly coupled to different architectures, problem sizes, data, and available system resources. In some cases, completely different algorithms may provide the best performance. Current compiler and programming language techniques are able to change some of these parameters, but today there is no simple way for the programmer to express or the compiler to choose different algorithms to handle different parts of the data. Existing solutions normally can handle only coarse-grained, library level selections or hand coded cutoffs between base cases and recursive cases.\n We present PetaBricks, a new implicitly parallel language and compiler where having multiple implementations of multiple algorithms to solve a problem is the natural way of programming. We make algorithmic choice a first class construct of the language. Choices are provided in a way that also allows our compiler to tune at a finer granularity. The PetaBricks compiler autotunes programs by making both fine-grained as well as algorithmic choices. Choices also include different automatic parallelization techniques, data distributions, algorithmic parameters, transformations, and blocking.\n Additionally, we introduce novel techniques to autotune algorithms for different convergence criteria. When choosing between various direct and iterative methods, the PetaBricks compiler is able to tune a program in such a way that delivers near-optimal efficiency for any desired level of accuracy. The compiler has the flexibility of utilizing different convergence criteria for the various components within a single algorithm, providing the user with accuracy choice alongside algorithmic choice."
            },
            "slug": "PetaBricks:-a-language-and-compiler-for-algorithmic-Ansel-Chan",
            "title": {
                "fragments": [],
                "text": "PetaBricks: a language and compiler for algorithmic choice"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "PetaBricks is presented, a new implicitly parallel language and compiler where having multiple implementations of multiple algorithms to solve a problem is the natural way of programming and makes algorithmic choice a first class construct of the language."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI '09"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145287069"
                        ],
                        "name": "Cy P. Chan",
                        "slug": "Cy-P.-Chan",
                        "structuredName": {
                            "firstName": "Cy",
                            "lastName": "Chan",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Cy P. Chan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1773260"
                        ],
                        "name": "Jason Ansel",
                        "slug": "Jason-Ansel",
                        "structuredName": {
                            "firstName": "Jason",
                            "lastName": "Ansel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jason Ansel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "33301740"
                        ],
                        "name": "Y. Wong",
                        "slug": "Y.-Wong",
                        "structuredName": {
                            "firstName": "Yee",
                            "lastName": "Wong",
                            "middleNames": [
                                "Lok"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Y. Wong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144397527"
                        ],
                        "name": "A. Edelman",
                        "slug": "A.-Edelman",
                        "structuredName": {
                            "firstName": "Alan",
                            "lastName": "Edelman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Edelman"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 72,
                                "start": 69
                            }
                        ],
                        "text": "The search space for Poisson in PetaBricks is described in detail in [7]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 723775,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "71db336e9224ac34f8001ff4ae534abd27e99cab",
            "isKey": false,
            "numCitedBy": 33,
            "numCiting": 20,
            "paperAbstract": {
                "fragments": [],
                "text": "Algorithmic choice is essential in any problem domain to realizing optimal computational performance. Multigrid is a prime example: not only is it possible to make choices at the highest grid resolution, but a program can switch techniques as the problem is recursively attacked on coarser grid levels to take advantage of algorithms with different scaling behaviors. Additionally, users with different convergence criteria must experiment with parameters to yield a tuned algorithm that meets their accuracy requirements. Even after a tuned algorithm has been found, users often have to start all over when migrating from one machine to another. We present an algorithm and autotuning methodology that address these issues in a near-optimal and efficient manner. The freedom of independently tuning both the algorithm and the number of iterations at each recursion level results in an exponential search space of tuned algorithms that have different accuracies and performances. To search this space efficiently, our autotuner utilizes a novel dynamic programming method to build efficient tuned algorithms from the bottom up. The results are customized multigrid algorithms that invest targeted computational power to yield the accuracy required by the user. The techniques we describe allow the user to automatically generate tuned multigrid cycles of different shapes targeted to the user's specific combination of problem, hardware, and accuracy requirements. These cycle shapes dictate the order in which grid coarsening and grid refinement are interleaved with both iterative methods, such as Jacobi or Successive Over-Relaxation, as well as direct methods, which tend to have superior performance for small problem sizes. The need to make choices between all of these methods brings the issue of variable accuracy to the forefront. Not only must the autotuning framework compare different possible multigrid cycle shapes against each other, but it also needs the ability to compare tuned cycles against both direct and (non-multigrid) iterative methods. We address this problem by using an accuracy metric for measuring the effectiveness of tuned cycle shapes and making comparisons over all algorithmic types based on this common yardstick. In our results, we find that the flexibility to trade performance versus accuracy at all levels of recursive computation enables us to achieve excellent performance on a variety of platforms compared to algorithmically static implementations of multigrid. Our implementation uses PetaBricks, an implicitly parallel programming language where algorithmic choices are exposed in the language. The PetaBricks compiler uses these choices to analyze, autotune, and verify the PetaBricks program. These language features, most notably the autotuner, were key in enabling our implementation to be clear, correct, and fast."
            },
            "slug": "Autotuning-multigrid-with-PetaBricks-Chan-Ansel",
            "title": {
                "fragments": [],
                "text": "Autotuning multigrid with PetaBricks"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "The techniques described allow the user to automatically generate tuned multigrid cycles of different shapes targeted to the user's specific combination of problem, hardware, and accuracy requirements, and the flexibility to trade performance versus accuracy at all levels of recursive computation enables the implementation to achieve excellent performance on a variety of platforms."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the Conference on High Performance Computing Networking, Storage and Analysis"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1769884"
                        ],
                        "name": "Cristian Tapus",
                        "slug": "Cristian-Tapus",
                        "structuredName": {
                            "firstName": "Cristian",
                            "lastName": "Tapus",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Cristian Tapus"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34778887"
                        ],
                        "name": "I. Chung",
                        "slug": "I.-Chung",
                        "structuredName": {
                            "firstName": "I-Hsin",
                            "lastName": "Chung",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Chung"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1754659"
                        ],
                        "name": "J. Hollingsworth",
                        "slug": "J.-Hollingsworth",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Hollingsworth",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hollingsworth"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 19,
                                "start": 15
                            }
                        ],
                        "text": "Active Harmony [31] Runtime System Nelder-Mead"
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 56,
                                "start": 49
                            }
                        ],
                        "text": "RELATED WORK Package Domain Search Method Active Harmony [31] Runtime System Nelder-Mead ATLAS \n[34] Dense Linear Algebra Exhaustive FFTW [14] Fast Fourier Transform Exhaustive/Dynamic Prog."
                    },
                    "intents": []
                }
            ],
            "corpusId": 2642413,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "906ea7f53924a0b9ade3a9636d29da9f8e6b7a93",
            "isKey": false,
            "numCitedBy": 295,
            "numCiting": 28,
            "paperAbstract": {
                "fragments": [],
                "text": "In this paper, we present the Active Harmony automated runtime tuning system. We describe the interface used by programs to make applications tunable. We present the Library Specification Layer which helps program library developers expose multiple variations of the same API using different algorithms.The Library Specification Language helps to select the most appropriate program library to tune the overall performance. We also present the optimization algorithm used to adjust parameters in the application and the libraries. Finally, we present results that show how the system is able to tune several real applications. The automated tuning system is able to tune the application parameers to within a few percent of the best value after evaluating only 11 out of over 1,700 possible configurations."
            },
            "slug": "Active-Harmony:-Towards-Automated-Performance-Tapus-Chung",
            "title": {
                "fragments": [],
                "text": "Active Harmony: Towards Automated Performance Tuning"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "The automated tuning system is able to tune the application parameers to within a few percent of the best value after evaluating only 11 out of over 1,700 possible configurations."
            },
            "venue": {
                "fragments": [],
                "text": "ACM/IEEE SC 2002 Conference (SC'02)"
            },
            "year": 2002
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144647854"
                        ],
                        "name": "A. Agarwal",
                        "slug": "A.-Agarwal",
                        "structuredName": {
                            "firstName": "Anant",
                            "lastName": "Agarwal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Agarwal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1720971"
                        ],
                        "name": "M. Rinard",
                        "slug": "M.-Rinard",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Rinard",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Rinard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1993785"
                        ],
                        "name": "Stelios Sidiroglou",
                        "slug": "Stelios-Sidiroglou",
                        "structuredName": {
                            "firstName": "Stelios",
                            "lastName": "Sidiroglou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stelios Sidiroglou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1704478"
                        ],
                        "name": "Sasa Misailovic",
                        "slug": "Sasa-Misailovic",
                        "structuredName": {
                            "firstName": "Sasa",
                            "lastName": "Misailovic",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sasa Misailovic"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144704832"
                        ],
                        "name": "H. Hoffmann",
                        "slug": "H.-Hoffmann",
                        "structuredName": {
                            "firstName": "Henry",
                            "lastName": "Hoffmann",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Hoffmann"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 39,
                                "start": 35
                            }
                        ],
                        "text": "A similar technique is employed in [17], where a simpler heuristicbased controller dynamically adjusts the degree of loop perforation performed on a target application to trade QoS for performance."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 79
                            }
                        ],
                        "text": "In the dynamic autotuning space, there have been a number of systems developed [18, 17, 22, 6, 8, 5] that focus on creating applications that can monitor and automatically tune themselves to optimize a particular objective."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 11886460,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "138f87cb78d8755c10fb3e024597bc6e5bfc192c",
            "isKey": false,
            "numCitedBy": 138,
            "numCiting": 31,
            "paperAbstract": {
                "fragments": [],
                "text": "Many modern computations (such as video and audio encoders, Monte Carlo simulations, and machine learning algorithms) are designed to trade off accuracy in return for increased performance. To date, such computations typically use ad-hoc, domain-specific techniques developed specifically for the computation at hand. We present a new general technique, code perforation, for automatically augmenting existing computations with the capability of trading off accuracy in return for performance. In contrast to existing approaches, which typically require the manual development of new algorithms, our implemented SpeedPress compiler can automatically apply code perforation to existing computations with no developer intervention whatsoever. The result is a transformed computation that can respond almost immediately to a range of increased performance demands while keeping any resulting output distortion within acceptable user-defined bounds. We have used SpeedPress to automatically apply code perforation to applications from the PARSEC benchmark suite. The results show that the transformed applications can run as much as two to three times faster than the original applications while distorting the output by less than 10%. Because the transformed applications can operate successfully at many points in the performance/accuracy tradeoff space, they can (dynamically and on demand) navigate the tradeoff space to either maximize performance subject to a given accuracy constraint, or maximize accuracy subject to a given performance constraint. We also demonstrate the SpeedGuard runtime system which uses code perforation to enable applications to automatically adapt to challenging execution environments such as multicore machines that suffer core failures or machines that dynamically adjust the clock speed to reduce power consumption or to protect the machine from overheating."
            },
            "slug": "Using-Code-Perforation-to-Improve-Performance,-and-Agarwal-Rinard",
            "title": {
                "fragments": [],
                "text": "Using Code Perforation to Improve Performance, Reduce Energy Consumption, and Respond to Failures"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "The implemented SpeedPress compiler can automatically apply code perforation to existing computations with no developer intervention whatsoever and the result is a transformed computation that can respond almost immediately to a range of increased performance demands while keeping any resulting output distortion within acceptable user-defined bounds."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2045853"
                        ],
                        "name": "Maciej Pacula",
                        "slug": "Maciej-Pacula",
                        "structuredName": {
                            "firstName": "Maciej",
                            "lastName": "Pacula",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Maciej Pacula"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1773260"
                        ],
                        "name": "Jason Ansel",
                        "slug": "Jason-Ansel",
                        "structuredName": {
                            "firstName": "Jason",
                            "lastName": "Ansel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jason Ansel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398192342"
                        ],
                        "name": "Una-May O\u2019Reilly",
                        "slug": "Una-May-O\u2019Reilly",
                        "structuredName": {
                            "firstName": "Una-May",
                            "lastName": "O\u2019Reilly",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Una-May O\u2019Reilly"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 36,
                                "start": 32
                            }
                        ],
                        "text": "A similar technique was used in [25] in the different context of online operator selection."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 7440789,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "22bd2ea740e1601686ddef06188b44816a4c48ac",
            "isKey": false,
            "numCitedBy": 13,
            "numCiting": 11,
            "paperAbstract": {
                "fragments": [],
                "text": "We are using bandit-based adaptive operator selection while autotuning parallel computer programs. The autotuning, which uses evolutionary algorithm-based stochastic sampling, takes place over an extended duration and occurs in situ as programs execute. The environment or context during tuning is either largely static in one scenario or dynamic in another. We rely upon adaptive operator selection to dynamically generate worthy test configurations of the program. In this paper, we study how the choice of hyperparameters, which control the trade-off between exploration and exploitation, affects the effectiveness of adaptive operator selection which in turn affects the performance of the autotuner. We show that while the optimal assignment of hyperparameters varies greatly between different benchmarks, there exists a single assignment, for a context, of hyperparameters that performs well regardless of the program being tuned."
            },
            "slug": "Hyperparameter-Tuning-in-Bandit-Based-Adaptive-Pacula-Ansel",
            "title": {
                "fragments": [],
                "text": "Hyperparameter Tuning in Bandit-Based Adaptive Operator Selection"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "It is shown that while the optimal assignment of hyperparameters varies greatly between different benchmarks, there exists a single assignment, for a context, ofhyperparameters that performs well regardless of the program being tuned."
            },
            "venue": {
                "fragments": [],
                "text": "EvoApplications"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2043821"
                        ],
                        "name": "G. Fursin",
                        "slug": "G.-Fursin",
                        "structuredName": {
                            "firstName": "Grigori",
                            "lastName": "Fursin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Fursin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2052818"
                        ],
                        "name": "C. Miranda",
                        "slug": "C.-Miranda",
                        "structuredName": {
                            "firstName": "Cupertino",
                            "lastName": "Miranda",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Miranda"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1731764"
                        ],
                        "name": "O. Temam",
                        "slug": "O.-Temam",
                        "structuredName": {
                            "firstName": "Olivier",
                            "lastName": "Temam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Temam"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3305063"
                        ],
                        "name": "Mircea Namolaru",
                        "slug": "Mircea-Namolaru",
                        "structuredName": {
                            "firstName": "Mircea",
                            "lastName": "Namolaru",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mircea Namolaru"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1388775854"
                        ],
                        "name": "E. Yom-Tov",
                        "slug": "E.-Yom-Tov",
                        "structuredName": {
                            "firstName": "Elad",
                            "lastName": "Yom-Tov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Yom-Tov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38737579"
                        ],
                        "name": "A. Zaks",
                        "slug": "A.-Zaks",
                        "structuredName": {
                            "firstName": "Ayal",
                            "lastName": "Zaks",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Zaks"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1795886"
                        ],
                        "name": "Bilha Mendelson",
                        "slug": "Bilha-Mendelson",
                        "structuredName": {
                            "firstName": "Bilha",
                            "lastName": "Mendelson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bilha Mendelson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "30561807"
                        ],
                        "name": "Edwin V. Bonilla",
                        "slug": "Edwin-V.-Bonilla",
                        "structuredName": {
                            "firstName": "Edwin",
                            "lastName": "Bonilla",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Edwin V. Bonilla"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153031524"
                        ],
                        "name": "J. Thomson",
                        "slug": "J.-Thomson",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Thomson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Thomson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2476647"
                        ],
                        "name": "H. Leather",
                        "slug": "H.-Leather",
                        "structuredName": {
                            "firstName": "Hugh",
                            "lastName": "Leather",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Leather"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145715698"
                        ],
                        "name": "Christopher K. I. Williams",
                        "slug": "Christopher-K.-I.-Williams",
                        "structuredName": {
                            "firstName": "Christopher",
                            "lastName": "Williams",
                            "middleNames": [
                                "K.",
                                "I."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christopher K. I. Williams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401533251"
                        ],
                        "name": "M. O\u2019Boyle",
                        "slug": "M.-O\u2019Boyle",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "O\u2019Boyle",
                            "middleNames": [
                                "F.",
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. O\u2019Boyle"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38759952"
                        ],
                        "name": "Phil Barnard",
                        "slug": "Phil-Barnard",
                        "structuredName": {
                            "firstName": "Phil",
                            "lastName": "Barnard",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Phil Barnard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40580165"
                        ],
                        "name": "Elton Ashton",
                        "slug": "Elton-Ashton",
                        "structuredName": {
                            "firstName": "Elton",
                            "lastName": "Ashton",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Elton Ashton"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2630186"
                        ],
                        "name": "E. Courtois",
                        "slug": "E.-Courtois",
                        "structuredName": {
                            "firstName": "Eric",
                            "lastName": "Courtois",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Courtois"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1697641"
                        ],
                        "name": "F. Bodin",
                        "slug": "F.-Bodin",
                        "structuredName": {
                            "firstName": "Fran\u00e7ois",
                            "lastName": "Bodin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Bodin"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 165,
                                "start": 151
                            }
                        ],
                        "text": "The area of iterative compilation contains many projects that use different machine learning techniques to optimize lower level compiler optimizations [2, 15, 26, 1]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 12905764,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "fb6e85d35fc7b10c16d465fc71748d819672ad24",
            "isKey": false,
            "numCitedBy": 127,
            "numCiting": 42,
            "paperAbstract": {
                "fragments": [],
                "text": "Tuning hardwired compiler optimizations for rapidly evolving hardware makes porting an optimizing compiler for each new platform extremely challenging. Our radical approach is to develop a modular, extensible, self-optimizing compiler that automatically learns the best optimization heuristics based on the behavior of the platform. In this paper we describe MILEPOST 1 GCC, a machine-learning-based compiler that automatically adjusts its optimization heuristics to improve the execution time, code size, or compilation time of specific programs on different architectures. Our preliminary experimental results show that it is possible to considerably reduce execution time of the MiBench benchmark suite on a range of platforms entirely automatically."
            },
            "slug": "MILEPOST-GCC:-machine-learning-based-research-Fursin-Miranda",
            "title": {
                "fragments": [],
                "text": "MILEPOST GCC: machine learning based research compiler"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "MILEPOST 1 GCC is described, a machine-learning-based compiler that automatically adjusts its optimization heuristics to improve the execution time, code size, or compilation time of specific programs on different architectures."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2008
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49209341"
                        ],
                        "name": "M. Christen",
                        "slug": "M.-Christen",
                        "structuredName": {
                            "firstName": "Matthias",
                            "lastName": "Christen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Christen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49127997"
                        ],
                        "name": "O. Schenk",
                        "slug": "O.-Schenk",
                        "structuredName": {
                            "firstName": "Olaf",
                            "lastName": "Schenk",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Schenk"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "30113433"
                        ],
                        "name": "H. Burkhart",
                        "slug": "H.-Burkhart",
                        "structuredName": {
                            "firstName": "Helmar",
                            "lastName": "Burkhart",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Burkhart"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 12416367,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "782d8591afd432a9b2bfe21553a4158a39cb9d1f",
            "isKey": false,
            "numCitedBy": 319,
            "numCiting": 36,
            "paperAbstract": {
                "fragments": [],
                "text": "Stencil calculations comprise an important class of kernels in many scientific computing applications ranging from simple PDE solvers to constituent kernels in multigrid methods as well as image processing applications. In such types of solvers, stencil kernels are often the dominant part of the computation, and an efficient parallel implementation of the kernel is therefore crucial in order to reduce the time to solution. However, in the current complex hardware micro architectures, meticulous architecture-specific tuning is required to elicit the machine's full compute power. We present a code generation and auto-tuning framework \\textsc{Patus} for stencil computations targeted at multi- and many core processors, such as multicore CPUs and graphics processing units, which makes it possible to generate compute kernels from a specification of the stencil operation and a parallelization and optimization strategy, and leverages the auto tuning methodology to optimize strategy-dependent parameters for the given hardware architecture."
            },
            "slug": "PATUS:-A-Code-Generation-and-Autotuning-Framework-Christen-Schenk",
            "title": {
                "fragments": [],
                "text": "PATUS: A Code Generation and Autotuning Framework for Parallel Iterative Stencil Computations on Modern Microarchitectures"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "This work presents a code generation and auto-tuning framework for stencil computations targeted at multi- and many core processors, such as multicore CPUs and graphics processing units, which makes it possible to generate compute kernels from a specification of the stencil operation and a parallelization and optimization strategy, and leverages the auto tuning methodology to optimize strategy-dependent parameters for the given hardware architecture."
            },
            "venue": {
                "fragments": [],
                "text": "2011 IEEE International Parallel & Distributed Processing Symposium"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3198208"
                        ],
                        "name": "S. Woo",
                        "slug": "S.-Woo",
                        "structuredName": {
                            "firstName": "Steven",
                            "lastName": "Woo",
                            "middleNames": [
                                "Cameron"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Woo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145140637"
                        ],
                        "name": "M. Ohara",
                        "slug": "M.-Ohara",
                        "structuredName": {
                            "firstName": "Moriyoshi",
                            "lastName": "Ohara",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Ohara"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "123113859"
                        ],
                        "name": "E. Torrie",
                        "slug": "E.-Torrie",
                        "structuredName": {
                            "firstName": "Evan",
                            "lastName": "Torrie",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Torrie"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1685479"
                        ],
                        "name": "J. Singh",
                        "slug": "J.-Singh",
                        "structuredName": {
                            "firstName": "Jaswinder",
                            "lastName": "Singh",
                            "middleNames": [
                                "Pal"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Singh"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110759834"
                        ],
                        "name": "Anoop Gupta",
                        "slug": "Anoop-Gupta",
                        "structuredName": {
                            "firstName": "Anoop",
                            "lastName": "Gupta",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Anoop Gupta"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 30,
                                "start": 26
                            }
                        ],
                        "text": "c, taken from the SPLASH2 [35] benchmark suite; a C++ template matrix multiply, matrixmultiply."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 93
                            }
                        ],
                        "text": "For target \nprograms to optimize we used: a fast Fourier transform in C, .t.c, taken from the SPLASH2 [35] benchmark \nsuite; a C++ template matrix multiply, matrix\u00admultiply.cpp, written by Xiang Fan [11] (version 3); a \nC++ ray tracer, raytracer.cpp, taken from the scratchpixel website [27]; and a genetic algorithm to solve \nthe traveling salesman program in C++, tsp_ga.cpp, by Kristo.er Nordkvist [24], which we modi.ed to run \ndeterministically."
                    },
                    "intents": []
                }
            ],
            "corpusId": 6178257,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2ce35dccce3dff1dfbd7590bce16aa0db24f6ee4",
            "isKey": false,
            "numCitedBy": 4099,
            "numCiting": 44,
            "paperAbstract": {
                "fragments": [],
                "text": "The SPLASH-2 suite of parallel applications has recently been released to facilitate the study of centralized and distributed shared-address-space multiprocessors. In this context, the paper has two goals. One is to quantitatively characterize the SPLASH-2 programs in terms of fundamental properties and architectural interactions that are important to understand them well. The properties we study include the computational load balance, communication to computation ratio and traffic needs, important working set sizes, and issues related to spatial locality, as well as how these properties scale with problem size and the number of processors. The other, related goal is methodological: to assist people who will use the programs in architectural evaluations to prune the space of application and machine parameters in an informed and meaningful way. For example, by characterizing the working sets of the applications, we describe which operating points in terms of cache size and problem size are representative of realistic situations, which are not, and which re redundant. Using SPLASH-2 as an example, we hope to convey the importance of understanding the interplay of problem size, number of processors, and working sets in designing experiments and interpreting their results."
            },
            "slug": "The-SPLASH-2-programs:-characterization-and-Woo-Ohara",
            "title": {
                "fragments": [],
                "text": "The SPLASH-2 programs: characterization and methodological considerations"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This paper quantitatively characterize the SPLASH-2 programs in terms of fundamental properties and architectural interactions that are important to understand them well, including the computational load balance, communication to computation ratio and traffic needs, important working set sizes, and issues related to spatial locality."
            },
            "venue": {
                "fragments": [],
                "text": "ISCA"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1773260"
                        ],
                        "name": "Jason Ansel",
                        "slug": "Jason-Ansel",
                        "structuredName": {
                            "firstName": "Jason",
                            "lastName": "Ansel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jason Ansel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2045853"
                        ],
                        "name": "Maciej Pacula",
                        "slug": "Maciej-Pacula",
                        "structuredName": {
                            "firstName": "Maciej",
                            "lastName": "Pacula",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Maciej Pacula"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398192342"
                        ],
                        "name": "Una-May O\u2019Reilly",
                        "slug": "Una-May-O\u2019Reilly",
                        "structuredName": {
                            "firstName": "Una-May",
                            "lastName": "O\u2019Reilly",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Una-May O\u2019Reilly"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 14,
                                "start": 11
                            }
                        ],
                        "text": "PetaBricks [4] Programming Language Bottom-up Evolutionary"
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 154,
                                "start": 151
                            }
                        ],
                        "text": "The PetaBricks autotuner uses a different strategy that starts with tests on very small problem inputs and incrementally works up to full sized inputs [4]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 2624259,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "50b29f6ff5773032a6c2c10d8b313518f206d071",
            "isKey": false,
            "numCitedBy": 10,
            "numCiting": 22,
            "paperAbstract": {
                "fragments": [],
                "text": "Many real world problems have a structure where small problem instances are embedded within large problem instances, or where solution quality for large problem instances is loosely correlated to that of small problem instances. This structure can be exploited because smaller problem instances typically have smaller search spaces and are cheaper to evaluate. We present an evolutionary algorithm, INCREA, which is designed to incrementally solve a large, noisy, computationally expensive problem by deriving its initial population through recursively running itself on problem instances of smaller sizes. The INCREA algorithm also expands and shrinks its population each generation and cuts off work that doesn't appear to promise a fruitful result. For further efficiency, it addresses noisy solution quality efficiently by focusing on resolving it for small, potentially reusable solutions which have a much lower cost of evaluation. We compare INCREA to a general purpose evolutionary algorithm and find that in most cases INCREA arrives at the same solution in significantly less time."
            },
            "slug": "An-efficient-evolutionary-algorithm-for-solving-Ansel-Pacula",
            "title": {
                "fragments": [],
                "text": "An efficient evolutionary algorithm for solving incrementally structured problems"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This work presents an evolutionary algorithm, INCREA, which is designed to incrementally solve a large, noisy, computationally expensive problem by deriving its initial population through recursively running itself on problem instances of smaller sizes."
            },
            "venue": {
                "fragments": [],
                "text": "GECCO '11"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2496412"
                        ],
                        "name": "Connelly Barnes",
                        "slug": "Connelly-Barnes",
                        "structuredName": {
                            "firstName": "Connelly",
                            "lastName": "Barnes",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Connelly Barnes"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 15,
                                "start": 7
                            }
                        ],
                        "text": "Halide [29, 30] is a domain-specific language and compiler for image processing and computational photography, specifically targeted towards image processing pipelines (graphs) that contain many stages."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 5885207,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d032f74b16457584f8a60ae07cfef9b617033638",
            "isKey": false,
            "numCitedBy": 878,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "Image processing pipelines combine the challenges of stencil computations and stream programs. They are composed of large graphs of different stencil stages, as well as complex reductions, and stages with global or data-dependent access patterns. Because of their complex structure, the performance difference between a naive implementation of a pipeline and an optimized one is often an order of magnitude. Efficient implementations require optimization of both parallelism and locality, but due to the nature of stencils, there is a fundamental tension between parallelism, locality, and introducing redundant recomputation of shared values. We present a systematic model of the tradeoff space fundamental to stencil pipelines, a schedule representation which describes concrete points in this space for each stage in an image processing pipeline, and an optimizing compiler for the Halide image processing language that synthesizes high performance implementations from a Halide algorithm and a schedule. Combining this compiler with stochastic search over the space of schedules enables terse, composable programs to achieve state-of-the-art performance on a wide range of real image processing pipelines, and across different hardware architectures, including multicores with SIMD, and heterogeneous CPU+GPU execution. From simple Halide programs written in a few hours, we demonstrate performance up to 5x faster than hand-tuned C, intrinsics, and CUDA implementations optimized by experts over weeks or months, for image processing applications beyond the reach of past automatic compilers."
            },
            "slug": "Halide:-a-language-and-compiler-for-optimizing-and-Ragan-Kelley-Barnes",
            "title": {
                "fragments": [],
                "text": "Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A systematic model of the tradeoff space fundamental to stencil pipelines is presented, a schedule representation which describes concrete points in this space for each stage in an image processing pipeline, and an optimizing compiler for the Halide image processing language that synthesizes high performance implementations from a Halide algorithm and a schedule are presented."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI 2013"
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1801789"
                        ],
                        "name": "M. Levoy",
                        "slug": "M.-Levoy",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Levoy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Levoy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 9001340,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3e06546182d5a36796a0f48e70151bf1d38e094d",
            "isKey": false,
            "numCitedBy": 247,
            "numCiting": 51,
            "paperAbstract": {
                "fragments": [],
                "text": "Using existing programming tools, writing high-performance image processing code requires sacrificing readability, portability, and modularity. We argue that this is a consequence of conflating what computations define the algorithm, with decisions about storage and the order of computation. We refer to these latter two concerns as the schedule, including choices of tiling, fusion, recomputation vs. storage, vectorization, and parallelism. We propose a representation for feed-forward imaging pipelines that separates the algorithm from its schedule, enabling high-performance without sacrificing code clarity. This decoupling simplifies the algorithm specification: images and intermediate buffers become functions over an infinite integer domain, with no explicit storage or boundary conditions. Imaging pipelines are compositions of functions. Programmers separately specify scheduling strategies for the various functions composing the algorithm, which allows them to efficiently explore different optimizations without changing the algorithmic code. We demonstrate the power of this representation by expressing a range of recent image processing applications in an embedded domain specific language called Halide, and compiling them for ARM, x86, and GPUs. Our compiler targets SIMD units, multiple cores, and complex memory hierarchies. We demonstrate that it can handle algorithms such as a camera raw pipeline, the bilateral grid, fast local Laplacian filtering, and image segmentation. The algorithms expressed in our language are both shorter and faster than state-of-the-art implementations."
            },
            "slug": "Decoupling-algorithms-from-schedules-for-easy-of-Ragan-Kelley-Adams",
            "title": {
                "fragments": [],
                "text": "Decoupling algorithms from schedules for easy optimization of image processing pipelines"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This work proposes a representation for feed-forward imaging pipelines that separates the algorithm from its schedule, enabling high-performance without sacrificing code clarity, and demonstrates the power of this representation by expressing a range of recent image processing applications in an embedded domain specific language called Halide and compiling them for ARM, x86, and GPUs."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2106501"
                        ],
                        "name": "F. Chang",
                        "slug": "F.-Chang",
                        "structuredName": {
                            "firstName": "Fangzhe",
                            "lastName": "Chang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Chang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1781959"
                        ],
                        "name": "V. Karamcheti",
                        "slug": "V.-Karamcheti",
                        "structuredName": {
                            "firstName": "Vijay",
                            "lastName": "Karamcheti",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Karamcheti"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 9986850,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2215b3c7759c6926d4208eee79807c459c1181ea",
            "isKey": false,
            "numCitedBy": 40,
            "numCiting": 27,
            "paperAbstract": {
                "fragments": [],
                "text": "Increased platform heterogeneity and varying resource availability in distributed systems motivate the design of resource-aware applications, which ensure a desired performance level by continuously adapting their behavior to changing resource characteristics. In this paper, we describe an application-independent adaptation framework that simplifies the design of resource-aware applications. This framework eliminates the need for adaptation decisions to be explicitly programmed into the application by relying on two novel components: (1) a tunability interface, which exposes adaptation choices in the form of alternate application configurations while encapsulating core application functionality; and (2) a virtual execution environment, which emulates application execution under diverse resource availability enabling off-line collection of information about resulting behavior. Together, these components permit automatic run-time decisions on when to adapt by continuously monitoring resource conditions and application progress, and how to adapt by dynamically choosing an application configuration most appropriate for the prescribed user preference. We evaluate the framework using an interactive distributed image visualization application and a parallel image processing application. The framework permits automatic adaptation to changes in execution environment characteristics such as available network bandwidth or data arrival pattern by choosing a different application configuration that satisfies user preferences of output quality and timeliness."
            },
            "slug": "A-Framework-for-Automatic-Adaptation-of-Tunable-Chang-Karamcheti",
            "title": {
                "fragments": [],
                "text": "A Framework for Automatic Adaptation of Tunable Distributed Applications"
            },
            "tldr": {
                "abstractSimilarityScore": 51,
                "text": "An application-independent adaptation framework that simplifies the design of resource-aware applications and permits automatic adaptation to changes in execution environment characteristics by choosing a different application configuration that satisfies user preferences of output quality and timeliness is described."
            },
            "venue": {
                "fragments": [],
                "text": "Cluster Computing"
            },
            "year": 2004
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1879539"
                        ],
                        "name": "\u00c1lvaro Fialho",
                        "slug": "\u00c1lvaro-Fialho",
                        "structuredName": {
                            "firstName": "\u00c1lvaro",
                            "lastName": "Fialho",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "\u00c1lvaro Fialho"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "36150272"
                        ],
                        "name": "Raymond Ros",
                        "slug": "Raymond-Ros",
                        "structuredName": {
                            "firstName": "Raymond",
                            "lastName": "Ros",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Raymond Ros"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "69881991"
                        ],
                        "name": "Marc Schoenauer",
                        "slug": "Marc-Schoenauer",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Schoenauer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Marc Schoenauer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "69343681"
                        ],
                        "name": "M. Sebag",
                        "slug": "M.-Sebag",
                        "structuredName": {
                            "firstName": "Mich\u00e8le",
                            "lastName": "Sebag",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Sebag"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 17054509,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e6d6e9e2b8d03aa2961d65c0cfb977a4ee37d342",
            "isKey": false,
            "numCitedBy": 24,
            "numCiting": 22,
            "paperAbstract": {
                "fragments": [],
                "text": "Differential Evolution is a popular powerful optimization algorithm for continuous problems. Part of its efficiency comes from the availability of several mutation strategies that can (and must) be chosen in a problem-dependent way. However, such flexibility also makes DE difficult to be automatically used in a new context. F-AUC-Bandit is a comparison-based Adaptive Operator Selection method that has been proposed in the GA framework. It is used here for the on-line control of DE mutation strategy, thus preserving DE invariance w.r.t. monotonous transformations of the objective function. The approach is comparatively assessed on the BBOB test suite, demonstrating significant improvement on baseline and other Adaptive Strategy Selection approaches, while presenting a very low sensitivity to hyper-parameter setting."
            },
            "slug": "Comparison-Based-Adaptive-Strategy-Selection-with-Fialho-Ros",
            "title": {
                "fragments": [],
                "text": "Comparison-Based Adaptive Strategy Selection with Bandits in Differential Evolution"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "F-AUC-Bandit is a comparison-based Adaptive Operator Selection method that has been proposed in the GA framework and is used here for the on-line control of DE mutation strategy, thus preserving DE invariance w.r.t. monotonous transformations of the objective function."
            },
            "venue": {
                "fragments": [],
                "text": "PPSN"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144301481"
                        ],
                        "name": "R. C. Whaley",
                        "slug": "R.-C.-Whaley",
                        "structuredName": {
                            "firstName": "R.",
                            "lastName": "Whaley",
                            "middleNames": [
                                "Clinton"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. C. Whaley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1708869"
                        ],
                        "name": "J. Dongarra",
                        "slug": "J.-Dongarra",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Dongarra",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dongarra"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 10,
                                "start": 6
                            }
                        ],
                        "text": "ATLAS [34] Dense Linear Algebra Exhaustive"
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 94,
                                "start": 89
                            }
                        ],
                        "text": "RELATED WORK Package Domain Search Method Active Harmony [31] Runtime System Nelder-Mead ATLAS \n[34] Dense Linear Algebra Exhaustive FFTW [14] Fast Fourier Transform Exhaustive/Dynamic Prog."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 5,
                                "start": 0
                            }
                        ],
                        "text": "ATLAS [34] utilizes empirical autotuning to \nproduce an optimized matrix multiply routine."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 10,
                                "start": 6
                            }
                        ],
                        "text": "ATLAS [34] utilizes empirical autotuning to produce an optimized matrix multiply routine."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 1466414,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "214a0d9c93720aa8c3d10710bca8308e3f2618f5",
            "isKey": true,
            "numCitedBy": 1138,
            "numCiting": 22,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper describes an approach for the automatic generation and optimization of numerical software for processors with deep memory hierarchies and pipelined functional units. The production of such software for machines ranging from desktop workstations to embedded processors can be a tedious and time consuming process. The work described here can help in automating much of this process. We will concentrate our efforts on the widely used linear algebra kernels called the Basic Linear Algebra Subroutines (BLAS). In particular, the work presented here is for general matrix multiply, DGEMM. However much of the technology and approach developed here can be applied to the other Level 3 BLAS and the general strategy can have an impact on basic linear algebra operations in general and may be extended to other important kernel operations."
            },
            "slug": "Automatically-Tuned-Linear-Algebra-Software-Whaley-Dongarra",
            "title": {
                "fragments": [],
                "text": "Automatically Tuned Linear Algebra Software"
            },
            "tldr": {
                "abstractSimilarityScore": 74,
                "text": "An approach for the automatic generation and optimization of numerical software for processors with deep memory hierarchies and pipelined functional units using the widely used linear algebra kernels called the Basic Linear Algebra Subroutines (BLAS)."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the IEEE/ACM SC98 Conference"
            },
            "year": 1998
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1879539"
                        ],
                        "name": "\u00c1lvaro Fialho",
                        "slug": "\u00c1lvaro-Fialho",
                        "structuredName": {
                            "firstName": "\u00c1lvaro",
                            "lastName": "Fialho",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "\u00c1lvaro Fialho"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145768720"
                        ],
                        "name": "Lu\u00eds Da Costa",
                        "slug": "Lu\u00eds-Da-Costa",
                        "structuredName": {
                            "firstName": "Lu\u00eds",
                            "lastName": "Costa",
                            "middleNames": [
                                "Da"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lu\u00eds Da Costa"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "69881991"
                        ],
                        "name": "Marc Schoenauer",
                        "slug": "Marc-Schoenauer",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Schoenauer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Marc Schoenauer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "69343681"
                        ],
                        "name": "M. Sebag",
                        "slug": "M.-Sebag",
                        "structuredName": {
                            "firstName": "Mich\u00e8le",
                            "lastName": "Sebag",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Sebag"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 9888035,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3d7babc4e6f0f22be246bd8797706f9712325126",
            "isKey": false,
            "numCitedBy": 143,
            "numCiting": 54,
            "paperAbstract": {
                "fragments": [],
                "text": "Several techniques have been proposed to tackle the Adaptive Operator Selection (AOS) issue in Evolutionary Algorithms. Some recent proposals are based on the Multi-armed Bandit (MAB) paradigm: each operator is viewed as one arm of a MAB problem, and the rewards are mainly based on the fitness improvement brought by the corresponding operator to the individual it is applied to. However, the AOS problem is dynamic, whereas standard MAB algorithms are known to optimally solve the exploitation versus exploration trade-off in static settings. An original dynamic variant of the standard MAB Upper Confidence Bound algorithm is proposed here, using a sliding time window to compute both its exploitation and exploration terms. In order to perform sound comparisons between AOS algorithms, artificial scenarios have been proposed in the literature. They are extended here toward smoother transitions between different reward settings. The resulting original testbed also includes a real evolutionary algorithm that is applied to the well-known Royal Road problem. It is used here to perform a thorough analysis of the behavior of AOS algorithms, to assess their sensitivity with respect to their own hyper-parameters, and to propose a sound comparison of their performances."
            },
            "slug": "Analyzing-bandit-based-adaptive-operator-selection-Fialho-Costa",
            "title": {
                "fragments": [],
                "text": "Analyzing bandit-based adaptive operator selection mechanisms"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "An original dynamic variant of the standard MAB Upper Confidence Bound algorithm is proposed here, using a sliding time window to compute both its exploitation and exploration terms."
            },
            "venue": {
                "fragments": [],
                "text": "Annals of Mathematics and Artificial Intelligence"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1771649"
                        ],
                        "name": "R. Vuduc",
                        "slug": "R.-Vuduc",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Vuduc",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Vuduc"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1700326"
                        ],
                        "name": "J. Demmel",
                        "slug": "J.-Demmel",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Demmel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Demmel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1731111"
                        ],
                        "name": "K. Yelick",
                        "slug": "K.-Yelick",
                        "structuredName": {
                            "firstName": "Katherine",
                            "lastName": "Yelick",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Yelick"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 134,
                                "start": 130
                            }
                        ],
                        "text": "Other autotuning systems include SPIRAL [28] for digital signal processing PATUS [9] and Sepya \n[21] for stencil computations, and OSKI [33] for sparse matrix kernels."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 9,
                                "start": 5
                            }
                        ],
                        "text": "OSKI [33] Sparse Linear Algebra Exhaustive+Heuristic"
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 51,
                                "start": 47
                            }
                        ],
                        "text": "[33] R. Vuduc, J. W. Demmel, and K. A. Yelick, OSKI: A library of automatically tuned sparse matrix kernels, \nin Scienti.c Discovery through Advanced Computing Conference, San Francisco, CA, June 2005."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 48,
                                "start": 44
                            }
                        ],
                        "text": "Insieme \n[19] Compiler Di.erential Evolution OSKI [33] Sparse Linear Algebra Exhaustive+Heuristic PATUS [9] Stencil \nComputations Nelder-Mead or Evolutionary PetaBricks [4] Programming Language Bottom-up Evolutionary Sepya \n[21] Stencil Computations Random-Restart Gradient Ascent SPIRAL [28] DSP Algorithms Pareto Active Learning \n Figure 1: Summary of selected related projects using autotuning A number of o.ine empirical autotuning \nframeworks have been developed for building e.cient, portable libraries in speci.c domains; selected \npro jects and techniques used are summarized in Figure 1."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 139,
                                "start": 135
                            }
                        ],
                        "text": "Other autotuning systems include SPIRAL [28] for digital signal processing PATUS [9] and Sepya [21] for stencil computations, and OSKI [33] for sparse matrix kernels."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 6252079,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5672ce28f2927b81b01303e4926643c55a4c8133",
            "isKey": true,
            "numCitedBy": 535,
            "numCiting": 55,
            "paperAbstract": {
                "fragments": [],
                "text": "The Optimized Sparse Kernel Interface (OSKI) is a collection of low-level primitives that provide automatically tuned computational kernels on sparse matrices, for use by solver libraries and applications. These kernels include sparse matrix-vector multiply and sparse triangular solve, among others. The primary aim of this interface is to hide the complex decision-making process needed to tune the performance of a kernel implementation for a particular user's sparse matrix and machine, while also exposing the steps and potentially non-trivial costs of tuning at run-time. This paper provides an overview of OSKI, which is based on our research on automatically tuned sparse kernels for modern cache-based superscalar machines."
            },
            "slug": "OSKI:-A-Library-of-Automatically-Tuned-Sparse-Vuduc-Demmel",
            "title": {
                "fragments": [],
                "text": "OSKI: A Library of Automatically Tuned Sparse Matrix Kernels"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "An overview of OSKI is provided, which is based on research on automatically tuned sparse kernels for modern cache-based superscalar machines, and the primary aim of this interface is to hide the complex decision-making process needed to tune the performance of a kernel implementation for a particular user's sparse matrix and machine."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144704832"
                        ],
                        "name": "H. Hoffmann",
                        "slug": "H.-Hoffmann",
                        "structuredName": {
                            "firstName": "Henry",
                            "lastName": "Hoffmann",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Hoffmann"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144358139"
                        ],
                        "name": "J. Eastep",
                        "slug": "J.-Eastep",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Eastep",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Eastep"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1695345"
                        ],
                        "name": "M. Santambrogio",
                        "slug": "M.-Santambrogio",
                        "structuredName": {
                            "firstName": "Marco",
                            "lastName": "Santambrogio",
                            "middleNames": [
                                "Domenico"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Santambrogio"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46295388"
                        ],
                        "name": "Jason E. Miller",
                        "slug": "Jason-E.-Miller",
                        "structuredName": {
                            "firstName": "Jason",
                            "lastName": "Miller",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jason E. Miller"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144647854"
                        ],
                        "name": "A. Agarwal",
                        "slug": "A.-Agarwal",
                        "structuredName": {
                            "firstName": "Anant",
                            "lastName": "Agarwal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Agarwal"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 47,
                                "start": 43
                            }
                        ],
                        "text": "The system employs the heartbeat framework [16] to provide feedback to the control system."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 4955978,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "44a21dd5d98adc5c11666298638bf0ece06ffb2a",
            "isKey": false,
            "numCitedBy": 175,
            "numCiting": 30,
            "paperAbstract": {
                "fragments": [],
                "text": "The rise of multicore computing has greatly increased system complexity and created an additional burden for software developers. This burden is especially troublesome when it comes to optimizing software on modern computing systems. Autonomic or adaptive computing has been proposed as one method to help application programmers handle this complexity. In an autonomic computing environment, system services monitor applications and automatically adapt their behavior to increase the performance of the applications they support. Unfortunately, applications often run as performance black-boxes and adaptive services must infer application performance from low-level information or rely on system-specific ad hoc methods. This paper proposes a standard framework, Application Heartbeats, which applications can use to communicate both their current and target performance and which autonomic services can use to query these values.\n The Application Heartbeats framework is designed around the well-known idea of a heartbeat. At important points in the program, the application registers a heartbeat. In addition, the interface allows applications to express their performance in terms of a desired heart rate and/or a desired latency between specially tagged heartbeats. Thus, the interface provides a standard method for an application to directly communicate its performance and goals while allowing autonomic services access to this information. Thus, Heartbeat-enabled applications are no longer performance black-boxes. This paper presents the Applications Heartbeats interface, characterizes two reference implementations (one suitable for clusters and one for multicore), and illustrates the use of Heartbeats with several examples of systems adapting behavior based on feedback from heartbeats."
            },
            "slug": "Application-heartbeats:-a-generic-interface-for-and-Hoffmann-Eastep",
            "title": {
                "fragments": [],
                "text": "Application heartbeats: a generic interface for specifying program performance and goals in autonomous computing environments"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "The Applications Heartbeats interface provides a standard method for an application to directly communicate its performance and goals while allowing autonomic services access to this information, and Heartbeat-enabled applications are no longer performance black-boxes."
            },
            "venue": {
                "fragments": [],
                "text": "ICAC '10"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1690697"
                        ],
                        "name": "Markus P\u00fcschel",
                        "slug": "Markus-P\u00fcschel",
                        "structuredName": {
                            "firstName": "Markus",
                            "lastName": "P\u00fcschel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Markus P\u00fcschel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144915495"
                        ],
                        "name": "Jos\u00e9 M. F. Moura",
                        "slug": "Jos\u00e9-M.-F.-Moura",
                        "structuredName": {
                            "firstName": "Jos\u00e9",
                            "lastName": "Moura",
                            "middleNames": [
                                "M.",
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jos\u00e9 M. F. Moura"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47525853"
                        ],
                        "name": "Bryan Singer",
                        "slug": "Bryan-Singer",
                        "structuredName": {
                            "firstName": "Bryan",
                            "lastName": "Singer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bryan Singer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2819266"
                        ],
                        "name": "Jianxin Xiong",
                        "slug": "Jianxin-Xiong",
                        "structuredName": {
                            "firstName": "Jianxin",
                            "lastName": "Xiong",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jianxin Xiong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "33888389"
                        ],
                        "name": "Jeremy R. Johnson",
                        "slug": "Jeremy-R.-Johnson",
                        "structuredName": {
                            "firstName": "Jeremy",
                            "lastName": "Johnson",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jeremy R. Johnson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1729097"
                        ],
                        "name": "D. Padua",
                        "slug": "D.-Padua",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Padua",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Padua"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1956361"
                        ],
                        "name": "M. Veloso",
                        "slug": "M.-Veloso",
                        "structuredName": {
                            "firstName": "Manuela",
                            "lastName": "Veloso",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Veloso"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111257581"
                        ],
                        "name": "Robert W. Johnson",
                        "slug": "Robert-W.-Johnson",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Johnson",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Robert W. Johnson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 11,
                                "start": 7
                            }
                        ],
                        "text": "SPIRAL [28] DSP Algorithms Pareto Active Learning"
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 44,
                                "start": 40
                            }
                        ],
                        "text": "Other autotuning systems include SPIRAL [28] for digital signal processing PATUS [9] and Sepya [21] for stencil computations, and OSKI [33] for sparse matrix kernels."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 39,
                                "start": 33
                            }
                        ],
                        "text": "Other autotuning systems include SPIRAL [28] for digital signal processing PATUS [9] and Sepya \n[21] for stencil computations, and OSKI [33] for sparse matrix kernels."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 284,
                                "start": 278
                            }
                        ],
                        "text": "Insieme \n[19] Compiler Di.erential Evolution OSKI [33] Sparse Linear Algebra Exhaustive+Heuristic PATUS [9] Stencil \nComputations Nelder-Mead or Evolutionary PetaBricks [4] Programming Language Bottom-up Evolutionary Sepya \n[21] Stencil Computations Random-Restart Gradient Ascent SPIRAL [28] DSP Algorithms Pareto Active Learning \n Figure 1: Summary of selected related projects using autotuning A number of o.ine empirical autotuning \nframeworks have been developed for building e.cient, portable libraries in speci.c domains; selected \npro jects and techniques used are summarized in Figure 1."
                    },
                    "intents": []
                }
            ],
            "corpusId": 2129073,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "63c15149986f30ead7bc7c05881216adc23c4844",
            "isKey": true,
            "numCitedBy": 197,
            "numCiting": 75,
            "paperAbstract": {
                "fragments": [],
                "text": "SPIRAL is a generator for libraries of fast software implementations of linear signal processing transforms. These libraries are adapted to the computing platform and can be re-optimized as the hardware is upgraded or replaced. This paper describes the main components of SPIRAL: the mathematical framework that concisely describes signal transforms and their fast algorithms; the formula generator that captures at the algorithmic level the degrees of freedom in expressing a particular signal processing transform; the formula translator that encapsulates the compilation degrees of freedom when translating a specific algorithm into an actual code implementation; and, finally, an intelligent search engine that finds within the large space of alternative formulas and implementations the \u201cbest\u201d match to the given computing platform. We present empirical data that demonstrate the high performance of SPIRAL generated code."
            },
            "slug": "Spiral:-A-Generator-for-Platform-Adapted-Libraries-P\u00fcschel-Moura",
            "title": {
                "fragments": [],
                "text": "Spiral: A Generator for Platform-Adapted Libraries of Signal Processing Alogorithms"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "The main components of SPIRAL are described: the mathematical framework that concisely describes signal transforms and their fast algorithms; the formula generator that captures at the algorithmic level the degrees of freedom in expressing a particular signal processing transform; a formula translator that encapsulates the compilation degrees offreedom when translating a specific algorithm into an actual code implementation."
            },
            "venue": {
                "fragments": [],
                "text": "Int. J. High Perform. Comput. Appl."
            },
            "year": 2004
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2692944"
                        ],
                        "name": "Woongki Baek",
                        "slug": "Woongki-Baek",
                        "structuredName": {
                            "firstName": "Woongki",
                            "lastName": "Baek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Woongki Baek"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3191220"
                        ],
                        "name": "Trishul M. Chilimbi",
                        "slug": "Trishul-M.-Chilimbi",
                        "structuredName": {
                            "firstName": "Trishul",
                            "lastName": "Chilimbi",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Trishul M. Chilimbi"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 79
                            }
                        ],
                        "text": "In the dynamic autotuning space, there have been a number of systems developed [18, 17, 22, 6, 8, 5] that focus on creating applications that can monitor and automatically tune themselves to optimize a particular objective."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 9849883,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "99b6bb4172d3332d231e4f2b2e288e2f305f0135",
            "isKey": false,
            "numCitedBy": 475,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "Energy-efficient computing is important in several systems ranging from embedded devices to large scale data centers. Several application domains offer the opportunity to tradeoff quality of service/solution (QoS) for improvements in performance and reduction in energy consumption. Programmers sometimes take advantage of such opportunities, albeit in an ad-hoc manner and often without providing any QoS guarantees.\n We propose a system called Green that provides a simple and flexible framework that allows programmers to take advantage of such approximation opportunities in a systematic manner while providing statistical QoS guarantees. Green enables programmers to approximate expensive functions and loops and operates in two phases. In the calibration phase, it builds a model of the QoS loss produced by the approximation. This model is used in the operational phase to make approximation decisions based on the QoS constraints specified by the programmer. The operational phase also includes an adaptation function that occasionally monitors the runtime behavior and changes the approximation decisions and QoS model to provide strong statistical QoS guarantees.\n To evaluate the effectiveness of Green, we implemented our system and language extensions using the Phoenix compiler framework. Our experiments using benchmarks from domains such as graphics, machine learning, signal processing, and finance, and an in-production, real-world web search engine, indicate that Green can produce significant improvements in performance and energy consumption with small and controlled QoS degradation."
            },
            "slug": "Green:-a-framework-for-supporting-energy-conscious-Baek-Chilimbi",
            "title": {
                "fragments": [],
                "text": "Green: a framework for supporting energy-conscious programming using controlled approximation"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "Green enables programmers to approximate expensive functions and loops and operates in two phases and can produce significant improvements in performance and energy consumption with small and controlled QoS degradation."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI '10"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2836556"
                        ],
                        "name": "V. Bhat",
                        "slug": "V.-Bhat",
                        "structuredName": {
                            "firstName": "Viraj",
                            "lastName": "Bhat",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Bhat"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145203664"
                        ],
                        "name": "M. Parashar",
                        "slug": "M.-Parashar",
                        "structuredName": {
                            "firstName": "M.",
                            "lastName": "Parashar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Parashar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2145497057"
                        ],
                        "name": "Hua Liu",
                        "slug": "Hua-Liu",
                        "structuredName": {
                            "firstName": "Hua",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hua Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47573553"
                        ],
                        "name": "M. Khandekar",
                        "slug": "M.-Khandekar",
                        "structuredName": {
                            "firstName": "Mohit",
                            "lastName": "Khandekar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Khandekar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1718847"
                        ],
                        "name": "N. Kandasamy",
                        "slug": "N.-Kandasamy",
                        "structuredName": {
                            "firstName": "Nagarajan",
                            "lastName": "Kandasamy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Kandasamy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144630747"
                        ],
                        "name": "S. Abdelwahed",
                        "slug": "S.-Abdelwahed",
                        "structuredName": {
                            "firstName": "Sherif",
                            "lastName": "Abdelwahed",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Abdelwahed"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "In the dynamic autotuning space, there have been a number of systems developed [5, 6, 8, 16, 18, 22] that focus on creating applications that can monitor and automatically tune themselves to optimize a particular objective."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 214491,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "7db9d1648bdd7512a5a1bc485ef3d1abec4eb66e",
            "isKey": false,
            "numCitedBy": 51,
            "numCiting": 67,
            "paperAbstract": {
                "fragments": [],
                "text": "The increasing heterogeneity, dynamism and uncertainty of emerging DCE (Distributed Computing Environment) systems imply that an application must be able to detect and adapt to changes in its state, its requirements and the state of the system to meet its desired QoS constraints. As system and application scales increase, ad hoc heuristic-based approaches to application adaptation and self-management quickly become insufficient. This paper builds on the Accord programming system for rule-based self-management and extends it with model-based control and optimization strategies. This paper also presents the development of a self-managing data streaming service based on online control using Accord. This service is part of a Grid-based fusion simulation workflow consisting of long-running simulations, executing on remote supercomputing sites and generating several terabytes of data, which must then be streamed over a wide-area network for live analysis and visualization. The self-managing data streaming service minimize data streaming overheads on the simulations, adapt to dynamic network bandwidth and prevent data loss. An evaluation of the service demonstrating its feasibility is presented."
            },
            "slug": "Enabling-Self-Managing-Applications-using-Online-Bhat-Parashar",
            "title": {
                "fragments": [],
                "text": "Enabling Self-Managing Applications using Model-based Online Control Strategies"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This paper builds on the Accord programming system for rule-based self-management and extends it with model-based control and optimization strategies and presents the development of a self-managing data streaming service based on online control using Accord."
            },
            "venue": {
                "fragments": [],
                "text": "2006 IEEE International Conference on Autonomic Computing"
            },
            "year": 2006
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1704478"
                        ],
                        "name": "Sasa Misailovic",
                        "slug": "Sasa-Misailovic",
                        "structuredName": {
                            "firstName": "Sasa",
                            "lastName": "Misailovic",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sasa Misailovic"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144647854"
                        ],
                        "name": "A. Agarwal",
                        "slug": "A.-Agarwal",
                        "structuredName": {
                            "firstName": "Anant",
                            "lastName": "Agarwal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Agarwal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1701041"
                        ],
                        "name": "Michael Carbin",
                        "slug": "Michael-Carbin",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Carbin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michael Carbin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1993785"
                        ],
                        "name": "Stelios Sidiroglou",
                        "slug": "Stelios-Sidiroglou",
                        "structuredName": {
                            "firstName": "Stelios",
                            "lastName": "Sidiroglou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stelios Sidiroglou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144704832"
                        ],
                        "name": "H. Hoffmann",
                        "slug": "H.-Hoffmann",
                        "structuredName": {
                            "firstName": "Henry",
                            "lastName": "Hoffmann",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Hoffmann"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1720971"
                        ],
                        "name": "M. Rinard",
                        "slug": "M.-Rinard",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Rinard",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Rinard"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 27,
                                "start": 23
                            }
                        ],
                        "text": "For example, PowerDial [18] converts static configuration"
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 79
                            }
                        ],
                        "text": "In the dynamic autotuning space, there have been a number of systems developed [18, 17, 22, 6, 8, 5] that focus on creating applications that can monitor and automatically tune themselves to optimize a particular objective."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 22,
                                "start": 13
                            }
                        ],
                        "text": "For example, PowerDial [18] \nconverts static con.guration parameters that already exist in a program into dynamic knobs that can be \ntuned at runtime, with the goal of trading QoS guarantees for meeting performance and power usage goals."
                    },
                    "intents": []
                }
            ],
            "corpusId": 7948664,
            "fieldsOfStudy": [
                "Computer Science",
                "Engineering"
            ],
            "id": "72e1cc3f2eeb7494d7b4233f70e0d9c2c3a696d7",
            "isKey": false,
            "numCitedBy": 21,
            "numCiting": 33,
            "paperAbstract": {
                "fragments": [],
                "text": "We present PowerDial, a system for dynamically adapting application behavior to execute successfully in the face of load and power fluctuations. PowerDial transforms static configuration parameters into dynamic knobs that the PowerDial control system can manipulate to dynamically trade off the accuracy of the computation in return for reductions in the computational resources that the application requires to produce its results. These reductions translate into power savings. Our experimental results show that PowerDial can enable our benchmark applications to execute responsively in the face of power caps (imposed, for example, in response to cooling system failures) that would otherwise significantly impair the delivered performance. They also show that PowerDial can reduce the number of machines required to meet peak load, in our experiments enabling up to a 75% reduction in direct power and capital costs."
            },
            "slug": "Power-Aware-Computing-with-Dynamic-Knobs-Misailovic-Agarwal",
            "title": {
                "fragments": [],
                "text": "Power-Aware Computing with Dynamic Knobs"
            },
            "tldr": {
                "abstractSimilarityScore": 47,
                "text": "The experimental results show that PowerDial can enable benchmark applications to execute responsively in the face of power caps that would otherwise significantly impair the delivered performance and reduce the number of machines required to meet peak load."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1698771"
                        ],
                        "name": "G. Karsai",
                        "slug": "G.-Karsai",
                        "structuredName": {
                            "firstName": "Gabor",
                            "lastName": "Karsai",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Karsai"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1721042"
                        ],
                        "name": "\u00c1. L\u00e9deczi",
                        "slug": "\u00c1.-L\u00e9deczi",
                        "structuredName": {
                            "firstName": "\u00c1kos",
                            "lastName": "L\u00e9deczi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "\u00c1. L\u00e9deczi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1745209"
                        ],
                        "name": "J. Sztipanovits",
                        "slug": "J.-Sztipanovits",
                        "structuredName": {
                            "firstName": "Janos",
                            "lastName": "Sztipanovits",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Sztipanovits"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1686187"
                        ],
                        "name": "G. P\u00e9celi",
                        "slug": "G.-P\u00e9celi",
                        "structuredName": {
                            "firstName": "G\u00e1bor",
                            "lastName": "P\u00e9celi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. P\u00e9celi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37006989"
                        ],
                        "name": "G. Simon",
                        "slug": "G.-Simon",
                        "structuredName": {
                            "firstName": "Gyula",
                            "lastName": "Simon",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Simon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1682527"
                        ],
                        "name": "T. Kov\u00e1csh\u00e1zy",
                        "slug": "T.-Kov\u00e1csh\u00e1zy",
                        "structuredName": {
                            "firstName": "Tam\u00e1s",
                            "lastName": "Kov\u00e1csh\u00e1zy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Kov\u00e1csh\u00e1zy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 79
                            }
                        ],
                        "text": "In the dynamic autotuning space, there have been a number of systems developed [18, 17, 22, 6, 8, 5] that focus on creating applications that can monitor and automatically tune themselves to optimize a particular objective."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 13251059,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f1e3f69b94fa120c5c400c93870b3bb919f2c542",
            "isKey": false,
            "numCitedBy": 61,
            "numCiting": 17,
            "paperAbstract": {
                "fragments": [],
                "text": "Self-adaptive software systems use observations of their own behavior, and that of their environment, to select and enact adaptations in accordance with some objective(s). This adaptation is a higher-level system function that performs optimizations, manages faults, or otherwise supports achieving an objective via changes in the running system. In this paper, we show how this capability can be realized using techniques found in hierarchical control systems, and we discuss interrelated issues of stability, assurance, and implementation."
            },
            "slug": "An-Approach-to-Self-adaptive-Software-Based-on-Karsai-L\u00e9deczi",
            "title": {
                "fragments": [],
                "text": "An Approach to Self-adaptive Software Based on Supervisory Control"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "This paper shows how this capability can be realized using techniques found in hierarchical control systems, and discusses interrelated issues of stability, assurance, and implementation."
            },
            "venue": {
                "fragments": [],
                "text": "IWSAS"
            },
            "year": 2001
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144704832"
                        ],
                        "name": "H. Hoffmann",
                        "slug": "H.-Hoffmann",
                        "structuredName": {
                            "firstName": "Henry",
                            "lastName": "Hoffmann",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Hoffmann"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1993785"
                        ],
                        "name": "Stelios Sidiroglou",
                        "slug": "Stelios-Sidiroglou",
                        "structuredName": {
                            "firstName": "Stelios",
                            "lastName": "Sidiroglou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stelios Sidiroglou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1701041"
                        ],
                        "name": "Michael Carbin",
                        "slug": "Michael-Carbin",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Carbin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michael Carbin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1704478"
                        ],
                        "name": "Sasa Misailovic",
                        "slug": "Sasa-Misailovic",
                        "structuredName": {
                            "firstName": "Sasa",
                            "lastName": "Misailovic",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sasa Misailovic"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144647854"
                        ],
                        "name": "A. Agarwal",
                        "slug": "A.-Agarwal",
                        "structuredName": {
                            "firstName": "Anant",
                            "lastName": "Agarwal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Agarwal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1720971"
                        ],
                        "name": "M. Rinard",
                        "slug": "M.-Rinard",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Rinard",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Rinard"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 14226174,
            "fieldsOfStudy": [
                "Computer Science",
                "Engineering"
            ],
            "id": "17f5bbe172a783b79026ae43d2635c6817a5ba8b",
            "isKey": false,
            "numCitedBy": 322,
            "numCiting": 50,
            "paperAbstract": {
                "fragments": [],
                "text": "We present PowerDial, a system for dynamically adapting application behavior to execute successfully in the face of load and power fluctuations. PowerDial transforms static configuration parameters into dynamic knobs that the PowerDial control system can manipulate to dynamically trade off the accuracy of the computation in return for reductions in the computational resources that the application requires to produce its results. These reductions translate directly into performance improvements and power savings.\n Our experimental results show that PowerDial can enable our benchmark applications to execute responsively in the face of power caps that would otherwise significantly impair responsiveness. They also show that PowerDial can significantly reduce the number of machines required to service intermittent load spikes, enabling reductions in power and capital costs."
            },
            "slug": "Dynamic-knobs-for-responsive-power-aware-computing-Hoffmann-Sidiroglou",
            "title": {
                "fragments": [],
                "text": "Dynamic knobs for responsive power-aware computing"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "The experimental results show that PowerDial can enable benchmark applications to execute responsively in the face of power caps that would otherwise significantly impair responsiveness, and can significantly reduce the number of machines required to service intermittent load spikes, enabling reductions in power and capital costs."
            },
            "venue": {
                "fragments": [],
                "text": "ASPLOS XVI"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48230516"
                        ],
                        "name": "Matteo Frigo",
                        "slug": "Matteo-Frigo",
                        "structuredName": {
                            "firstName": "Matteo",
                            "lastName": "Frigo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matteo Frigo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2097716"
                        ],
                        "name": "Steven G. Johnson",
                        "slug": "Steven-G.-Johnson",
                        "structuredName": {
                            "firstName": "Steven",
                            "lastName": "Johnson",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Steven G. Johnson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 9,
                                "start": 5
                            }
                        ],
                        "text": "FFTW [14] uses empirical autotuning to combine solvers for FFTs."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 4,
                                "start": 0
                            }
                        ],
                        "text": "FFTW [14] uses empirical autotuning to combine solvers \nfor FFTs."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 70,
                                "start": 66
                            }
                        ],
                        "text": "[14] M. Frigo and S. G. Johnson, The design and implementation of FFTW3, IEEE, \nvol. 93, no. 2, February 2005."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 9,
                                "start": 5
                            }
                        ],
                        "text": "FFTW [14] Fast Fourier Transform Exhaustive/Dynamic Prog."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 136,
                                "start": 132
                            }
                        ],
                        "text": "RELATED WORK Package Domain Search Method Active Harmony [31] Runtime System Nelder-Mead ATLAS \n[34] Dense Linear Algebra Exhaustive FFTW [14] Fast Fourier Transform Exhaustive/Dynamic Prog."
                    },
                    "intents": []
                }
            ],
            "corpusId": 6644892,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f8e9b050c93af6dea582563f61b6460b590bc3af",
            "isKey": true,
            "numCitedBy": 4558,
            "numCiting": 81,
            "paperAbstract": {
                "fragments": [],
                "text": "FFTW is an implementation of the discrete Fourier transform (DFT) that adapts to the hardware in order to maximize performance. This paper shows that such an approach can yield an implementation that is competitive with hand-optimized libraries, and describes the software structure that makes our current FFTW3 version flexible and adaptive. We further discuss a new algorithm for real-data DFTs of prime size, a new way of implementing DFTs by means of machine-specific single-instruction, multiple-data (SIMD) instructions, and how a special-purpose compiler can derive optimized implementations of the discrete cosine and sine transforms automatically from a DFT algorithm."
            },
            "slug": "The-Design-and-Implementation-of-FFTW3-Frigo-Johnson",
            "title": {
                "fragments": [],
                "text": "The Design and Implementation of FFTW3"
            },
            "tldr": {
                "abstractSimilarityScore": 52,
                "text": "It is shown that such an approach can yield an implementation of the discrete Fourier transform that is competitive with hand-optimized libraries, and the software structure that makes the current FFTW3 version flexible and adaptive is described."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the IEEE"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1708869"
                        ],
                        "name": "J. Dongarra",
                        "slug": "J.-Dongarra",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Dongarra",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dongarra"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1741269"
                        ],
                        "name": "P. Luszczek",
                        "slug": "P.-Luszczek",
                        "structuredName": {
                            "firstName": "Piotr",
                            "lastName": "Luszczek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Luszczek"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1719457"
                        ],
                        "name": "A. Petitet",
                        "slug": "A.-Petitet",
                        "structuredName": {
                            "firstName": "Antoine",
                            "lastName": "Petitet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Petitet"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 43,
                                "start": 39
                            }
                        ],
                        "text": "The High Performance Linpack benchmark [10] is used to evaluate floating point performance of machines ranging from small multiprocessors to large-scale clusters, and is"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 1900724,
            "fieldsOfStudy": [
                "Environmental Science"
            ],
            "id": "eea5f4452f5609da00f23723f51850bc4211ce26",
            "isKey": false,
            "numCitedBy": 777,
            "numCiting": 118,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper describes the LINPACK Benchmark and some of its variations commonly used to assess the performance of computer systems. Aside from the LINPACK Benchmark suite, the TOP500 and the HPL codes are presented. The latter is frequently used to obtained results for TOP500 submissions. Information is also given on how to interpret the results of the benchmark and how the results fit into the performance evaluation process. Copyright \u00a9 2003 John Wiley & Sons, Ltd."
            },
            "slug": "The-LINPACK-Benchmark:-past,-present-and-future-Dongarra-Luszczek",
            "title": {
                "fragments": [],
                "text": "The LINPACK Benchmark: past, present and future"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "Aside from the LINPACK Benchmark suite, the TOP500 and the HPL codes are presented and information is given on how to interpret the results of the benchmark and how the results fit into the performance evaluation process."
            },
            "venue": {
                "fragments": [],
                "text": "Concurr. Comput. Pract. Exp."
            },
            "year": 2003
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1708869"
                        ],
                        "name": "J. Dongarra",
                        "slug": "J.-Dongarra",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Dongarra",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dongarra"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1706139"
                        ],
                        "name": "H. Meuer",
                        "slug": "H.-Meuer",
                        "structuredName": {
                            "firstName": "Hans",
                            "lastName": "Meuer",
                            "middleNames": [
                                "Werner"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Meuer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1749908"
                        ],
                        "name": "E. Strohmaier",
                        "slug": "E.-Strohmaier",
                        "structuredName": {
                            "firstName": "Erich",
                            "lastName": "Strohmaier",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Strohmaier"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 221656953,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f3093ed17dcf207c0eae5915c88371f1dfc80d17",
            "isKey": false,
            "numCitedBy": 753,
            "numCiting": 76,
            "paperAbstract": {
                "fragments": [],
                "text": "To provide a better basis for statistics on high-performance computers, we list the sites that have the 500 most powerful computer systems installed. The best Linpack benchmark performance achieved is used as a performance measure in ranking the computers."
            },
            "slug": "Top500-Supercomputer-Sites-Dongarra-Meuer",
            "title": {
                "fragments": [],
                "text": "Top500 Supercomputer Sites"
            },
            "tldr": {
                "abstractSimilarityScore": 66,
                "text": "This list lists the sites that have the 500 most powerful computer systems installed and the best Linpack benchmark performance achieved is used as a performance measure in ranking the computers."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1997
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50708503"
                        ],
                        "name": "Dr. Tom Murphy",
                        "slug": "Dr.-Tom-Murphy",
                        "structuredName": {
                            "firstName": "Dr.",
                            "lastName": "Murphy",
                            "middleNames": [
                                "Tom"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dr. Tom Murphy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 14,
                                "start": 8
                            }
                        ],
                        "text": "[23] T. Murphy VII, \nThe .rst level of Super Mario Bros. is easy with lexicographic orderings and time travel, April 2013."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 43,
                                "start": 39
                            }
                        ],
                        "text": "Related to our Mario benchmark, Murphy [23] presents algorithms for playing NES games based on example human inputs."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 38,
                                "start": 32
                            }
                        ],
                        "text": "Related to our Mario benchmark, Murphy [23] presents algorithms for playing NES games based on example \nhuman inputs."
                    },
                    "intents": []
                }
            ],
            "corpusId": 14347703,
            "fieldsOfStudy": [
                "Economics"
            ],
            "id": "45e0aadd3f007600a604e685abc76e645fb3a390",
            "isKey": true,
            "numCitedBy": 28,
            "numCiting": 7,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper presents a simple, generic method for automating the play of Nintendo Entertainment System games."
            },
            "slug": "The-First-Level-of-Super-Mario-Bros-.-is-Easy-with-Murphy",
            "title": {
                "fragments": [],
                "text": "The First Level of Super Mario Bros . is Easy with Lexicographic Orderings and Time Travel"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2013
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Optimize your code: Matrix multiplication. https: //tinyurl.com/kuvzbp9"
            },
            "venue": {
                "fragments": [],
                "text": "Optimize your code: Matrix multiplication. https: //tinyurl.com/kuvzbp9"
            },
            "year": 2009
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An efficient evolutionary algorithm for solving bottom up problems"
            },
            "venue": {
                "fragments": [],
                "text": "Annual Conference on Genetic and Evolutionary Computation"
            },
            "year": 2011
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 81,
                                "start": 75
                            }
                        ],
                        "text": "(a) .t.c (d) tsp ga.cpp (b) matrixmultiply.cpp (c) raytracer.cpp Figure \n7: Top 10 most important GCC .ags for each benchmark."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Top 500 supercomputer sites"
            },
            "venue": {
                "fragments": [],
                "text": "Top 500 supercomputer sites"
            },
            "year": 2010
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 79
                            }
                        ],
                        "text": "In the dynamic autotuning space, there have been a number of systems developed [18, 17, 22, 6, 8, 5] that focus on creating applications that can monitor and automatically tune themselves to optimize a particular objective."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Enabling self-managing applications using model-based online 4Available from http://opentuner.org/  control strategies"
            },
            "venue": {
                "fragments": [],
                "text": "International Conference on Autonomic Computing, Washington, DC, 2006."
            },
            "year": 2006
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Solving TSP with a genetic algorithm in C++. https://tinyurl.com/lq3uqlh"
            },
            "venue": {
                "fragments": [],
                "text": "Solving TSP with a genetic algorithm in C++. https://tinyurl.com/lq3uqlh"
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "31] Top500. Top 500 supercomputer sites"
            },
            "venue": {
                "fragments": [],
                "text": "31] Top500. Top 500 supercomputer sites"
            },
            "year": 2010
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 30,
                                "start": 26
                            }
                        ],
                        "text": "cpp, written by Xiang Fan [11] (version 3); a C++ ray tracer, raytracer."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 195,
                                "start": 186
                            }
                        ],
                        "text": "For target \nprograms to optimize we used: a fast Fourier transform in C, .t.c, taken from the SPLASH2 [35] benchmark \nsuite; a C++ template matrix multiply, matrix\u00admultiply.cpp, written by Xiang Fan [11] (version 3); a \nC++ ray tracer, raytracer.cpp, taken from the scratchpixel website [27]; and a genetic algorithm to solve \nthe traveling salesman program in C++, tsp_ga.cpp, by Kristo.er Nordkvist [24], which we modi.ed to run \ndeterministically."
                    },
                    "intents": []
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Optimize your code: Matrix multiplication"
            },
            "venue": {
                "fragments": [],
                "text": "https://tinyurl.com/kuvzbp9, 2009."
            },
            "year": 2009
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 45,
                                "start": 41
                            }
                        ],
                        "text": "the evaluation criterion for the Top 500 [32] supercomputer benchmark."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Top 500 supercomputer sites"
            },
            "venue": {
                "fragments": [],
                "text": "http://www.top500.org/, 2010."
            },
            "year": 2010
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 79
                            }
                        ],
                        "text": "In the dynamic autotuning space, there have been a number of systems developed [18, 17, 22, 6, 8, 5] that focus on creating applications that can monitor and automatically tune themselves to optimize a particular objective."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Enabling self-managing applications using model-based online 4Available from http://opentuner.org/ 314  control strategies"
            },
            "venue": {
                "fragments": [],
                "text": "International Conference on Autonomic Computing, Washington, DC, 2006."
            },
            "year": 2006
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 45,
                                "start": 41
                            }
                        ],
                        "text": "cpp, taken from the scratchpixel website [27]; and a genetic algorithm to solve the traveling salesman program in C++, tsp_ga."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "3D Basic Lessons: Writing a simple raytracer"
            },
            "venue": {
                "fragments": [],
                "text": "https://tinyurl.com/lp8ncnw, 2012."
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 33,
                                "start": 29
                            }
                        ],
                        "text": "cpp, by Kristoffer Nordkvist [24], which we modified to run deterministically."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Solving TSP with a genetic algorithm in C++"
            },
            "venue": {
                "fragments": [],
                "text": "https://tinyurl.com/lq3uqlh, 2012."
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 43,
                                "start": 39
                            }
                        ],
                        "text": "The High Performance Linpack benchmark [10] is used to evaluate floating point performance of machines ranging from small multiprocessors to large-scale clusters, and is the evaluation criterion for the Top 500 [31] supercomputer benchmark."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The LIN- PACK Benchmark: past, present and future"
            },
            "venue": {
                "fragments": [],
                "text": "Concurrency and Computation: Practice and Experience, 15(9):803\u2013820,"
            },
            "year": 2003
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "3D Basic Lessons: Writing a simple raytracer. https://tinyurl.com/lp8ncnw"
            },
            "venue": {
                "fragments": [],
                "text": "3D Basic Lessons: Writing a simple raytracer. https://tinyurl.com/lp8ncnw"
            },
            "year": 2012
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 12,
            "methodology": 18
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 45,
        "totalPages": 5
    },
    "page_url": "https://www.semanticscholar.org/paper/OpenTuner:-An-extensible-framework-for-program-Ansel-Kamil/1ccaac0fdcc5ab37a45d0cc616feeaa67a3d4ca1?sort=total-citations"
}