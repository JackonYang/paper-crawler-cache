{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1491240095"
                        ],
                        "name": "Bo Qiao",
                        "slug": "Bo-Qiao",
                        "structuredName": {
                            "firstName": "Bo",
                            "lastName": "Qiao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bo Qiao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3149197"
                        ],
                        "name": "O. Reiche",
                        "slug": "O.-Reiche",
                        "structuredName": {
                            "firstName": "Oliver",
                            "lastName": "Reiche",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Reiche"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1697402"
                        ],
                        "name": "Frank Hannig",
                        "slug": "Frank-Hannig",
                        "structuredName": {
                            "firstName": "Frank",
                            "lastName": "Hannig",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Frank Hannig"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144365535"
                        ],
                        "name": "J. Teich",
                        "slug": "J.-Teich",
                        "structuredName": {
                            "firstName": "J\u00fcrgen",
                            "lastName": "Teich",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Teich"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 99
                            }
                        ],
                        "text": "Some previous works explored static thread and block compositions in database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 99
                            }
                        ],
                        "text": "Prior works have explored the basic idea in AI workloads[8, 12, 28], database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 49,
                                "start": 41
                            }
                        ],
                        "text": "In image processing domain, recent works [32, 33] formulate the image pipeline fusion as a graph cut problem."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 71150507,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4adfffbe7f5c63556e24c4e3e5b8e47af9399fd0",
            "isKey": false,
            "numCitedBy": 18,
            "numCiting": 24,
            "paperAbstract": {
                "fragments": [],
                "text": "Optimizing data-intensive applications such as image processing for GPU targets with complex memory hierarchies requires to explore the tradeoffs among locality, parallelism, and computation. Loop fusion as one of the classical optimization techniques has been proven effective to improve locality at the function level. Algorithms in image processing are increasing their complexities and generally consist of many kernels in a pipeline. The inter-kernel communications are intensive and exhibit another opportunity for locality improvement at the system level. The scope of this paper is an optimization technique called kernel fusion for data locality improvement. We present a formal description of the problem by defining an objective function for locality optimization. By transforming the fusion problem to a graph partitioning problem, we propose a solution based on the minimum cut technique to search fusible kernels recursively. In addition, we develop an analytic model to quantitatively estimate potential locality improvement by incorporating domain-specific knowledge and architecture details. The proposed technique is implemented in an image processing DSL and source-to-source compiler called Hipacc, and evaluated over six image processing applications on three Nvidia GPUs. A geometric mean speedup of up to 2.52 can be observed in our experiments.11Artifact available at:https://doi.org/10.5281/zenodo.2240193"
            },
            "slug": "From-Loop-Fusion-to-Kernel-Fusion:-A-Approach-to-Qiao-Reiche",
            "title": {
                "fragments": [],
                "text": "From Loop Fusion to Kernel Fusion: A Domain-Specific Approach to Locality Optimization"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This paper proposes a solution based on the minimum cut technique to search fusible kernels recursively to improve locality at the function level and develops an analytic model to quantitatively estimate potential locality improvement by incorporating domain-specific knowledge and architecture details."
            },
            "venue": {
                "fragments": [],
                "text": "2019 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2492241"
                        ],
                        "name": "Lingxiao Ma",
                        "slug": "Lingxiao-Ma",
                        "structuredName": {
                            "firstName": "Lingxiao",
                            "lastName": "Ma",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lingxiao Ma"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2099588736"
                        ],
                        "name": "Zhiqiang Xie",
                        "slug": "Zhiqiang-Xie",
                        "structuredName": {
                            "firstName": "Zhiqiang",
                            "lastName": "Xie",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhiqiang Xie"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "98256743"
                        ],
                        "name": "Zhi Yang",
                        "slug": "Zhi-Yang",
                        "structuredName": {
                            "firstName": "Zhi",
                            "lastName": "Yang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhi Yang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2870618"
                        ],
                        "name": "Jilong Xue",
                        "slug": "Jilong-Xue",
                        "structuredName": {
                            "firstName": "Jilong",
                            "lastName": "Xue",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jilong Xue"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "11009920"
                        ],
                        "name": "Youshan Miao",
                        "slug": "Youshan-Miao",
                        "structuredName": {
                            "firstName": "Youshan",
                            "lastName": "Miao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Youshan Miao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2053108211"
                        ],
                        "name": "Wei Cui",
                        "slug": "Wei-Cui",
                        "structuredName": {
                            "firstName": "Wei",
                            "lastName": "Cui",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Wei Cui"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50105419"
                        ],
                        "name": "W. Hu",
                        "slug": "W.-Hu",
                        "structuredName": {
                            "firstName": "Wenxiang",
                            "lastName": "Hu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Hu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145338263"
                        ],
                        "name": "Fan Yang",
                        "slug": "Fan-Yang",
                        "structuredName": {
                            "firstName": "Fan",
                            "lastName": "Yang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Fan Yang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1978393184"
                        ],
                        "name": "Lintao Zhang",
                        "slug": "Lintao-Zhang",
                        "structuredName": {
                            "firstName": "Lintao",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lintao Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "93317102"
                        ],
                        "name": "Lidong Zhou",
                        "slug": "Lidong-Zhou",
                        "structuredName": {
                            "firstName": "Lidong",
                            "lastName": "Zhou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lidong Zhou"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 64,
                                "start": 57
                            }
                        ],
                        "text": "Prior works have explored the basic idea in AI workloads [8, 29], database [50], image processing [4, 32, 34], and HPC applications [25, 48] ahead-of-time (AOT)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 107,
                                "start": 85
                            }
                        ],
                        "text": "Many current AI compilation optimization works mainly focus on compute intensive ops [11,13,24,29,30,34,45], but do not pay attention to memory intensive ops."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 228990152,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "33d735c2f889b5b6a5851f01e741eae535a91127",
            "isKey": false,
            "numCitedBy": 27,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "Performing Deep Neural Network (DNN) computation on hardware accelerators efficiently is challenging. Existing DNN frameworks and compilers often treat the DNN operators in a data flow graph (DFG) as opaque library functions and schedule them onto accelerators to be executed individually. They rely on another layer of scheduler, often implemented in hardware, to exploit the parallelism available in the operators. Such a two-layered approach incurs significant scheduling overhead and often cannot fully utilize the available hardware resources. In this paper, we propose RAMMER, a DNN compiler design that optimizes the execution of DNN workloads on massively parallel accelerators. RAMMER generates an efficient static spatio-temporal schedule for a DNN at compile time to minimize scheduling overhead. It maximizes hardware utilization by holistically exploiting parallelism through inter- and intra- operator co-scheduling. RAMMER achieves this by proposing several novel, hardware neutral, and clean abstractions for the computation tasks and the hardware accelerators. These abstractions expose a much richer scheduling space to RAMMER, which employs several heuristics to explore this space and finds efficient schedules. We implement RAMMER for multiple hardware backends such as NVIDIA GPUs, AMD GPUs, and Graphcore IPU. Experiments show RAMMER significantly outperforms state-of-the-art compilers such as TensorFlow XLA and TVM by up to 20.1\u00d7. It also outperforms TensorRT, a vendor optimized proprietary DNN inference library from NVIDIA, by up to 3.1\u00d7."
            },
            "slug": "Rammer:-Enabling-Holistic-Deep-Learning-Compiler-Ma-Xie",
            "title": {
                "fragments": [],
                "text": "Rammer: Enabling Holistic Deep Learning Compiler Optimizations with rTasks"
            },
            "venue": {
                "fragments": [],
                "text": "OSDI"
            },
            "year": 2020
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34313008"
                        ],
                        "name": "Haicheng Wu",
                        "slug": "Haicheng-Wu",
                        "structuredName": {
                            "firstName": "Haicheng",
                            "lastName": "Wu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Haicheng Wu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2040049"
                        ],
                        "name": "G. Diamos",
                        "slug": "G.-Diamos",
                        "structuredName": {
                            "firstName": "Gregory",
                            "lastName": "Diamos",
                            "middleNames": [
                                "Frederick"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Diamos"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2468150"
                        ],
                        "name": "S. Cadambi",
                        "slug": "S.-Cadambi",
                        "structuredName": {
                            "firstName": "Srihari",
                            "lastName": "Cadambi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Cadambi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2933334"
                        ],
                        "name": "S. Yalamanchili",
                        "slug": "S.-Yalamanchili",
                        "structuredName": {
                            "firstName": "Sudhakar",
                            "lastName": "Yalamanchili",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Yalamanchili"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 33,
                                "start": 29
                            }
                        ],
                        "text": "In database domain, Wu et al.[51] propose transformations to fuse execution of multiple operators into a single kernel."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 81,
                                "start": 77
                            }
                        ],
                        "text": "Some previous works explored static thread and block compositions in database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 81,
                                "start": 77
                            }
                        ],
                        "text": "Prior works have explored the basic idea in AI workloads[8, 12, 28], database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 1454720,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5c8f3815867b4dffb592b45c90740d7cce052338",
            "isKey": false,
            "numCitedBy": 91,
            "numCiting": 44,
            "paperAbstract": {
                "fragments": [],
                "text": "Data warehousing applications represent an emerging application arena that requires the processing of relational queries and computations over massive amounts of data. Modern general purpose GPUs are high bandwidth architectures that potentially offer substantial improvements in throughput for these applications. However, there are significant challenges that arise due to the overheads of data movement through the memory hierarchy and between the GPU and host CPU. This paper proposes data movement optimizations to address these challenges. Inspired in part by loop fusion optimizations in the scientific computing community, we propose kernel fusion as a basis for data movement optimizations. Kernel fusion fuses the code bodies of two GPU kernels to i) reduce data footprint to cut down data movement throughout GPU and CPU memory hierarchy, and ii) enlarge compiler optimization scope. We classify producer consumer dependences between compute kernels into three types, i) fine-grained thread-to-thread dependences, ii) medium-grained thread block dependences, and iii) coarse-grained kernel dependences. Based on this classification, we propose a compiler framework, Kernel Weaver, that can automatically fuse relational algebra operators thereby eliminating redundant data movement. The experiments on NVIDIA Fermi platforms demonstrate that kernel fusion achieves 2.89x speedup in GPU computation and a 2.35x speedup in PCIe transfer time on average across the micro-benchmarks tested. We present key insights, lessons learned, measurements from our compiler implementation, and opportunities for further improvements."
            },
            "slug": "Kernel-Weaver:-Automatically-Fusing-Database-for-Wu-Diamos",
            "title": {
                "fragments": [],
                "text": "Kernel Weaver: Automatically Fusing Database Primitives for Efficient GPU Computation"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A compiler framework, Kernel Weaver, is proposed that can automatically fuse relational algebra operators thereby eliminating redundant data movement and key insights, lessons learned, measurements from the compiler implementation, and opportunities for further improvements are presented."
            },
            "venue": {
                "fragments": [],
                "text": "2012 45th Annual IEEE/ACM International Symposium on Microarchitecture"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1700692"
                        ],
                        "name": "M. Wahib",
                        "slug": "M.-Wahib",
                        "structuredName": {
                            "firstName": "Mohamed",
                            "lastName": "Wahib",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Wahib"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3264280"
                        ],
                        "name": "N. Maruyama",
                        "slug": "N.-Maruyama",
                        "structuredName": {
                            "firstName": "Naoya",
                            "lastName": "Maruyama",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Maruyama"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 35,
                                "start": 31
                            }
                        ],
                        "text": "In the HPC domain, Wahib et al.[49] formulates GPU kernel fusion as an combinatorial search problem, and searches the solution space for an optimized fused kernel."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 140,
                                "start": 132
                            }
                        ],
                        "text": "Some previous works explored static thread and block compositions in database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 140,
                                "start": 132
                            }
                        ],
                        "text": "Prior works have explored the basic idea in AI workloads[8, 12, 28], database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 201283,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dfadea130dcba3ee11e296804a374882fcb1ff62",
            "isKey": false,
            "numCitedBy": 65,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "GPU implementations of HPC applications relying on finite difference methods can include tens of kernels that are memory-bound. Kernel fusion can improve performance by reducing data traffic to off-chip memory, kernels that share data arrays are fused to larger kernels where on-chip cache is used to hold the data reused by instructions originating from different kernels. The main challenges are a) searching for the optimal kernel fusions while constrained by data dependencies and kernels' precedences and b) effectively applying kernel fusion to achieve speedup. This paper introduces a problem definition and proposes a scalable method for searching the space of possible kernel fusions to identify optimal kernel fusions for large problems. The paper also proposes a codeless performance upper-bound projection model to achieve effective fusions. Results show that using the proposed scalable method for kernel fusion improved the performance of two real-world applications containing tens of kernels by 1.35x and 1.2x."
            },
            "slug": "Scalable-Kernel-Fusion-for-Memory-Bound-GPU-Wahib-Maruyama",
            "title": {
                "fragments": [],
                "text": "Scalable Kernel Fusion for Memory-Bound GPU Applications"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "Results show that using the proposed scalable method for kernel fusion improved the performance of two real-world applications containing tens of kernels by 1.35x and 1.2x."
            },
            "venue": {
                "fragments": [],
                "text": "SC14: International Conference for High Performance Computing, Networking, Storage and Analysis"
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3291773"
                        ],
                        "name": "Arash Ashari",
                        "slug": "Arash-Ashari",
                        "structuredName": {
                            "firstName": "Arash",
                            "lastName": "Ashari",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Arash Ashari"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1947100"
                        ],
                        "name": "S. Tatikonda",
                        "slug": "S.-Tatikonda",
                        "structuredName": {
                            "firstName": "Shirish",
                            "lastName": "Tatikonda",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Tatikonda"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40237241"
                        ],
                        "name": "Matthias Boehm",
                        "slug": "Matthias-Boehm",
                        "structuredName": {
                            "firstName": "Matthias",
                            "lastName": "Boehm",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matthias Boehm"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1698945"
                        ],
                        "name": "B. Reinwald",
                        "slug": "B.-Reinwald",
                        "structuredName": {
                            "firstName": "Berthold",
                            "lastName": "Reinwald",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Reinwald"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2055387525"
                        ],
                        "name": "Keith Campbell",
                        "slug": "Keith-Campbell",
                        "structuredName": {
                            "firstName": "Keith",
                            "lastName": "Campbell",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Keith Campbell"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1723674"
                        ],
                        "name": "John Keenleyside",
                        "slug": "John-Keenleyside",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Keenleyside",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "John Keenleyside"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2062142773"
                        ],
                        "name": "P. Sadayappan",
                        "slug": "P.-Sadayappan",
                        "structuredName": {
                            "firstName": "P.",
                            "lastName": "Sadayappan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Sadayappan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 48,
                                "start": 45
                            }
                        ],
                        "text": "For machine learning workloads, Ashari et al.[8] proposes a kernel fusion technique to generate efficient kernels for a specific computation pattern."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 45,
                                "start": 32
                            }
                        ],
                        "text": "For machine learning workloads, Ashari et al.[8] proposes a kernel fusion technique to generate efficient kernels for a specific\ncomputation pattern."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 67,
                                "start": 56
                            }
                        ],
                        "text": "Prior works have explored the basic idea in AI workloads[8, 12, 28], database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 18313236,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "09967ca2af1dad90ece59cf3cb823dbca67426b1",
            "isKey": false,
            "numCitedBy": 28,
            "numCiting": 44,
            "paperAbstract": {
                "fragments": [],
                "text": "Exploitation of parallel architectures has become critical to scalable machine learning (ML). Since a wide range of ML algorithms employ linear algebraic operators, GPUs with BLAS libraries are a natural choice for such an exploitation. Two approaches are commonly pursued: (i) developing specific GPU accelerated implementations of complete ML algorithms; and (ii) developing GPU kernels for primitive linear algebraic operators like matrix-vector multiplication, which are then used in developing ML algorithms. This paper extends the latter approach by developing fused kernels for a combination of primitive operators that are commonly found in popular ML algorithms. We identify the generic pattern of computation (alpha * X^T (v * (X * y)) + beta * z) and its various instantiations. We develop a fused kernel to optimize this computation on GPUs -- with specialized techniques to handle both sparse and dense matrices. This approach not only reduces the cost of data loads due to improved temporal locality but also enables other optimizations like coarsening and hierarchical aggregation of partial results. We also present an analytical model that considers input data characteristics and available GPU resources to estimate near-optimal settings for kernel launch parameters. The proposed approach provides speedups ranging from 2 to 67 for different instances of the generic pattern compared to launching multiple operator-level kernels using GPU accelerated libraries. We conclude by demonstrating the effectiveness of the approach in improving end-to-end performance on an entire ML algorithm."
            },
            "slug": "On-optimizing-machine-learning-workloads-via-kernel-Ashari-Tatikonda",
            "title": {
                "fragments": [],
                "text": "On optimizing machine learning workloads via kernel fusion"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "An analytical model is presented that considers input data characteristics and available GPU resources to estimate near-optimal settings for kernel launch parameters and demonstrates the effectiveness of the fused kernel approach in improving end-to-end performance on an entire ML algorithm."
            },
            "venue": {
                "fragments": [],
                "text": "PPoPP"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913774"
                        ],
                        "name": "Tianqi Chen",
                        "slug": "Tianqi-Chen",
                        "structuredName": {
                            "firstName": "Tianqi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianqi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47108160"
                        ],
                        "name": "T. Moreau",
                        "slug": "T.-Moreau",
                        "structuredName": {
                            "firstName": "Thierry",
                            "lastName": "Moreau",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Moreau"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1732910"
                        ],
                        "name": "Ziheng Jiang",
                        "slug": "Ziheng-Jiang",
                        "structuredName": {
                            "firstName": "Ziheng",
                            "lastName": "Jiang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ziheng Jiang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2149970173"
                        ],
                        "name": "Lianmin Zheng",
                        "slug": "Lianmin-Zheng",
                        "structuredName": {
                            "firstName": "Lianmin",
                            "lastName": "Zheng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lianmin Zheng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2621619"
                        ],
                        "name": "Eddie Q. Yan",
                        "slug": "Eddie-Q.-Yan",
                        "structuredName": {
                            "firstName": "Eddie",
                            "lastName": "Yan",
                            "middleNames": [
                                "Q."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eddie Q. Yan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3050154"
                        ],
                        "name": "Haichen Shen",
                        "slug": "Haichen-Shen",
                        "structuredName": {
                            "firstName": "Haichen",
                            "lastName": "Shen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Haichen Shen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37270394"
                        ],
                        "name": "M. Cowan",
                        "slug": "M.-Cowan",
                        "structuredName": {
                            "firstName": "Meghan",
                            "lastName": "Cowan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Cowan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2185540"
                        ],
                        "name": "Leyuan Wang",
                        "slug": "Leyuan-Wang",
                        "structuredName": {
                            "firstName": "Leyuan",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Leyuan Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49994783"
                        ],
                        "name": "Yuwei Hu",
                        "slug": "Yuwei-Hu",
                        "structuredName": {
                            "firstName": "Yuwei",
                            "lastName": "Hu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuwei Hu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717411"
                        ],
                        "name": "L. Ceze",
                        "slug": "L.-Ceze",
                        "structuredName": {
                            "firstName": "Luis",
                            "lastName": "Ceze",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Ceze"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1730156"
                        ],
                        "name": "Carlos Guestrin",
                        "slug": "Carlos-Guestrin",
                        "structuredName": {
                            "firstName": "Carlos",
                            "lastName": "Guestrin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Carlos Guestrin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144695691"
                        ],
                        "name": "A. Krishnamurthy",
                        "slug": "A.-Krishnamurthy",
                        "structuredName": {
                            "firstName": "Arvind",
                            "lastName": "Krishnamurthy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Krishnamurthy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 10,
                                "start": 7
                            }
                        ],
                        "text": "Recent TVM development results in auto schedule generations and limited fusion support."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 45,
                                "start": 41
                            }
                        ],
                        "text": "Some code generation frameworks, like TVM[12], mainly focus on tuning compute intensive ops and do not address memory intensive ones specifically."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 36,
                                "start": 33
                            }
                        ],
                        "text": "People can provide schedules and TVM tunes the parameters automatically."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 12,
                                "start": 4
                            }
                        ],
                        "text": "TVM [12, 56] is a popular framework targets optimization of mainly computing intensive operators."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 111,
                                "start": 92
                            }
                        ],
                        "text": "Many current research works mainly focus on dense tensor computations (GEMM and convolution)[6, 12, 34, 39, 47] as dense computations dominate the execution time formany DNN workloads (like CNN[20, 38, 42])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 67,
                                "start": 56
                            }
                        ],
                        "text": "Prior works have explored the basic idea in AI workloads[8, 12, 28], database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 7,
                                "start": 3
                            }
                        ],
                        "text": "TVM[12], Ansor[56] and Halide[34] are capable to generate high performance kernels with well designed schedules."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 52939079,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "df013a17ab84d5403361da4538a04d574f58be83",
            "isKey": true,
            "numCitedBy": 713,
            "numCiting": 51,
            "paperAbstract": {
                "fragments": [],
                "text": "There is an increasing need to bring machine learning to a wide diversity of hardware devices. Current frameworks rely on vendor-specific operator libraries and optimize for a narrow range of server-class GPUs. Deploying workloads to new platforms -- such as mobile phones, embedded devices, and accelerators (e.g., FPGAs, ASICs) -- requires significant manual effort. We propose TVM, a compiler that exposes graph-level and operator-level optimizations to provide performance portability to deep learning workloads across diverse hardware back-ends. TVM solves optimization challenges specific to deep learning, such as high-level operator fusion, mapping to arbitrary hardware primitives, and memory latency hiding. It also automates optimization of low-level programs to hardware characteristics by employing a novel, learning-based cost modeling method for rapid exploration of code optimizations. Experimental results show that TVM delivers performance across hardware back-ends that are competitive with state-of-the-art, hand-tuned libraries for low-power CPU, mobile GPU, and server-class GPUs. We also demonstrate TVM's ability to target new accelerator back-ends, such as the FPGA-based generic deep learning accelerator. The system is open sourced and in production use inside several major companies."
            },
            "slug": "TVM:-An-Automated-End-to-End-Optimizing-Compiler-Chen-Moreau",
            "title": {
                "fragments": [],
                "text": "TVM: An Automated End-to-End Optimizing Compiler for Deep Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "TVM is a compiler that exposes graph-level and operator-level optimizations to provide performance portability to deep learning workloads across diverse hardware back-ends and automates optimization of low-level programs to hardware characteristics by employing a novel, learning-based cost modeling method for rapid exploration of code optimizations."
            },
            "venue": {
                "fragments": [],
                "text": "OSDI"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2112329671"
                        ],
                        "name": "Ao Li",
                        "slug": "Ao-Li",
                        "structuredName": {
                            "firstName": "Ao",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ao Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2112670252"
                        ],
                        "name": "Bojian Zheng",
                        "slug": "Bojian-Zheng",
                        "structuredName": {
                            "firstName": "Bojian",
                            "lastName": "Zheng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bojian Zheng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3257164"
                        ],
                        "name": "Gennady Pekhimenko",
                        "slug": "Gennady-Pekhimenko",
                        "structuredName": {
                            "firstName": "Gennady",
                            "lastName": "Pekhimenko",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Gennady Pekhimenko"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1994324109"
                        ],
                        "name": "Fan Long",
                        "slug": "Fan-Long",
                        "structuredName": {
                            "firstName": "Fan",
                            "lastName": "Long",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Fan Long"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 13,
                                "start": 9
                            }
                        ],
                        "text": "Li et al.[29] explores horizontal fusion for GPU Kernels to increase the thread-level parallelism."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 220302874,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "ad03bc097eef7a70ebaebd7d392bf87517ace3ac",
            "isKey": false,
            "numCitedBy": 9,
            "numCiting": 41,
            "paperAbstract": {
                "fragments": [],
                "text": "We present automatic horizontal fusion, a novel optimization technique that complements the standard kernel fusion techniques for GPU programs. Unlike the standard fusion, whose goal is to eliminate intermediate data round trips, our horizontal fusion technique aims to increase the thread-level parallelism to hide instruction latencies. We also present HFUSE, a new source to source CUDA compiler that implements automatic horizontal fusion. Our experimental results show that the horizontal fusion can speed up the running time by 2.5% 60.8%. Our results reveal that the horizontal fusion is especially beneficial for fusing kernels with instructions that require different kinds of GPU resources (e.g., a memory-intensive kernel and a compute-intensive kernel)."
            },
            "slug": "Automatic-Horizontal-Fusion-for-GPU-Kernels-Li-Zheng",
            "title": {
                "fragments": [],
                "text": "Automatic Horizontal Fusion for GPU Kernels"
            },
            "venue": {
                "fragments": [],
                "text": "2022 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)"
            },
            "year": 2022
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1768816"
                        ],
                        "name": "Muthian Sivathanu",
                        "slug": "Muthian-Sivathanu",
                        "structuredName": {
                            "firstName": "Muthian",
                            "lastName": "Sivathanu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Muthian Sivathanu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2122946534"
                        ],
                        "name": "Tapan Chugh",
                        "slug": "Tapan-Chugh",
                        "structuredName": {
                            "firstName": "Tapan",
                            "lastName": "Chugh",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tapan Chugh"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3376683"
                        ],
                        "name": "Sanjay S. Singapuram",
                        "slug": "Sanjay-S.-Singapuram",
                        "structuredName": {
                            "firstName": "Sanjay",
                            "lastName": "Singapuram",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sanjay S. Singapuram"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "93317102"
                        ],
                        "name": "Lidong Zhou",
                        "slug": "Lidong-Zhou",
                        "structuredName": {
                            "firstName": "Lidong",
                            "lastName": "Zhou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lidong Zhou"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 111,
                                "start": 92
                            }
                        ],
                        "text": "Many current research works mainly focus on dense tensor computations (GEMM and convolution)[6, 12, 34, 39, 47] as dense computations dominate the execution time formany DNN workloads (like CNN[20, 38, 42])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 88497672,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f12557da0cff05914ed4a28d11c8a561e08fbd18",
            "isKey": false,
            "numCitedBy": 35,
            "numCiting": 47,
            "paperAbstract": {
                "fragments": [],
                "text": "We present Astra, a compilation and execution framework that optimizes execution of a deep learning training job. Instead of treating the computation as a generic data flow graph, Astra exploits domain knowledge about deep learning to adopt a custom approach to compiler optimization. The key insight in Astra is to exploit the unique repetitiveness and predictability of a deep learning job, to perform online exploration of the optimization state space in a work-conserving manner while making progress on the training job. This dynamic state space exploration in Astra uses lightweight profiling and indexing of profile data, coupled with several techniques to prune the exploration state space. Effectively, the execution layer custom-wires the infrastructure end-to-end for each job and hardware, while keeping the compiler simple and maintainable. We have implemented Astra in two popular deep learning frameworks, PyTorch and Tensorflow. On state-of-the-art deep learning models, we show that Astra improves end-to-end performance of deep learning training by up to 3x, while approaching the performance of hand-optimized implementations such as cuDNN where available. Astra also significantly outperforms static compilation frameworks such as Tensorflow XLA both in performance and robustness."
            },
            "slug": "Astra:-Exploiting-Predictability-to-Optimize-Deep-Sivathanu-Chugh",
            "title": {
                "fragments": [],
                "text": "Astra: Exploiting Predictability to Optimize Deep Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "It is shown that Astra improves end-to-end performance of deep learning training by up to 3x, while approaching the performance of hand-optimized implementations such as cuDNN where available and significantly outperforms static compilation frameworks such as Tensorflow XLA both in performance and robustness."
            },
            "venue": {
                "fragments": [],
                "text": "ASPLOS"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1491240095"
                        ],
                        "name": "Bo Qiao",
                        "slug": "Bo-Qiao",
                        "structuredName": {
                            "firstName": "Bo",
                            "lastName": "Qiao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bo Qiao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3149197"
                        ],
                        "name": "O. Reiche",
                        "slug": "O.-Reiche",
                        "structuredName": {
                            "firstName": "Oliver",
                            "lastName": "Reiche",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Reiche"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1697402"
                        ],
                        "name": "Frank Hannig",
                        "slug": "Frank-Hannig",
                        "structuredName": {
                            "firstName": "Frank",
                            "lastName": "Hannig",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Frank Hannig"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144365535"
                        ],
                        "name": "J. Teich",
                        "slug": "J.-Teich",
                        "structuredName": {
                            "firstName": "J\u00fcrgen",
                            "lastName": "Teich",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Teich"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 49,
                                "start": 41
                            }
                        ],
                        "text": "In image processing domain, recent works [32, 33] formulate the image pipeline fusion as a graph cut problem."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 47019110,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "860d0d2b64d232eee58eb85e45b085cf8ec9f4bb",
            "isKey": false,
            "numCitedBy": 15,
            "numCiting": 17,
            "paperAbstract": {
                "fragments": [],
                "text": "Programming image processing algorithms on hardware accelerators such as graphics processing units (GPUs) often exhibits a trade-off between software portability and performance portability. Domain-specific languages (DSLs) have proven to be a promising remedy, which enable optimizations and generation of efficient code from a concise, high-level algorithm representation. The scope of this paper is an optimization framework for image processing DSLs in the form of a source-to-source compiler. To cope with the inter-kernel communication bound via global memory for GPU applications, kernel fusion is investigated as a primary optimization technique to improve temporal locality. In order to enable automatic kernel fusion, we analyze the fusibility of each kernel in the algorithm, in terms of data dependencies, resource utilization, and parallelism granularity. By combining the obtained information with the domain-specific knowledge captured in the DSL, a method to automatically fuse the suitable kernels is proposed and integrated into an open source DSL framework. The novel kernel fusion technique is evaluated on two filter-based image processing applications, for which speedups of up to 1.60 are obtained for an NVIDIA Geforce 745 graphics card target."
            },
            "slug": "Automatic-Kernel-Fusion-for-Image-Processing-DSLs-Qiao-Reiche",
            "title": {
                "fragments": [],
                "text": "Automatic Kernel Fusion for Image Processing DSLs"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "An optimization framework for image processing DSLs in the form of a source-to-source compiler to cope with the inter-kernel communication bound via global memory for GPU applications and proposes a method to automatically fuse the suitable kernels into an open source DSL framework."
            },
            "venue": {
                "fragments": [],
                "text": "SCOPES"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144884036"
                        ],
                        "name": "Yun Liang",
                        "slug": "Yun-Liang",
                        "structuredName": {
                            "firstName": "Yun",
                            "lastName": "Liang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yun Liang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32906849"
                        ],
                        "name": "M. T. Satria",
                        "slug": "M.-T.-Satria",
                        "structuredName": {
                            "firstName": "Muhammad",
                            "lastName": "Satria",
                            "middleNames": [
                                "Teguh"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. T. Satria"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144904704"
                        ],
                        "name": "K. Rupnow",
                        "slug": "K.-Rupnow",
                        "structuredName": {
                            "firstName": "Kyle",
                            "lastName": "Rupnow",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Rupnow"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1713644"
                        ],
                        "name": "Deming Chen",
                        "slug": "Deming-Chen",
                        "structuredName": {
                            "firstName": "Deming",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Deming Chen"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 76
                            }
                        ],
                        "text": "Performance models for GPU and other accelerators is another research topic [15, 25, 30, 52, 54, 55]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 5021605,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "9ca431560d53521bb69941edcfdd8140badb12f2",
            "isKey": false,
            "numCitedBy": 40,
            "numCiting": 55,
            "paperAbstract": {
                "fragments": [],
                "text": "Graphics processing units (GPUs) are increasingly critical for general-purpose parallel processing performance. GPU hardware is composed of many streaming multiprocessors, each of which employs the single-instruction multiple-data (SIMD) execution style. This massively parallel architecture allows GPUs to execute tens of thousands of threads in parallel. Thus, GPU architectures efficiently execute heavily data-parallel applications. However, due to this SIMD execution style, resource utilization and thus overall performance can be significantly affected if computation threads must take diverging control paths. Control flow divergence in GPUs is a well-known problem: prior approaches have attempted to reduce control flow divergence through code transformations, memory access indirection, and input data reorganization. However, as we will demonstrate, the utility of these transformations is seriously affected by the lack of a guiding metric that properly estimates how control flow divergence affects application performance. In this paper, we introduce a metric that simply and accurately estimates performance of computation-bound GPU kernels with control flow divergence, and use the metric as a value function for thread re-grouping algorithms. We measure the performance on NVIDIA GTS250 GPU. For the tested set of applications, our experiments demonstrate that the proposed metric correlates well with actual GPU application performance. Through thread re-grouping guided by our metric, control flow divergence optimization can improve application performance by up to 3.19X."
            },
            "slug": "An-Accurate-GPU-Performance-Model-for-Effective-Liang-Satria",
            "title": {
                "fragments": [],
                "text": "An Accurate GPU Performance Model for Effective Control Flow Divergence Optimization"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "Through thread re-grouping guided by the metric, control flow divergence optimization can improve application performance by up to 3.19X, and the proposed metric correlates well with actual GPU application performance."
            },
            "venue": {
                "fragments": [],
                "text": "2012 IEEE 26th International Parallel and Distributed Processing Symposium"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3448779"
                        ],
                        "name": "Sangkug Lym",
                        "slug": "Sangkug-Lym",
                        "structuredName": {
                            "firstName": "Sangkug",
                            "lastName": "Lym",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sangkug Lym"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48893570"
                        ],
                        "name": "Donghyuk Lee",
                        "slug": "Donghyuk-Lee",
                        "structuredName": {
                            "firstName": "Donghyuk",
                            "lastName": "Lee",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Donghyuk Lee"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1397041984"
                        ],
                        "name": "Mike O'Connor",
                        "slug": "Mike-O'Connor",
                        "structuredName": {
                            "firstName": "Mike",
                            "lastName": "O'Connor",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mike O'Connor"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48930807"
                        ],
                        "name": "Niladrish Chatterjee",
                        "slug": "Niladrish-Chatterjee",
                        "structuredName": {
                            "firstName": "Niladrish",
                            "lastName": "Chatterjee",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Niladrish Chatterjee"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143676711"
                        ],
                        "name": "M. Erez",
                        "slug": "M.-Erez",
                        "structuredName": {
                            "firstName": "Mattan",
                            "lastName": "Erez",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Erez"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 76
                            }
                        ],
                        "text": "Performance models for GPU and other accelerators is another research topic [15, 25, 30, 52, 54, 55]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 102486544,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c4062a9603149b92b9f775d244579d6c19b165d7",
            "isKey": false,
            "numCitedBy": 10,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "Training convolutional neural networks (CNNs) requires intense compute throughput and high memory bandwidth. Especially, convolution layers account for the majority of execution time of CNN training, and GPUs are commonly used to accelerate these layer workloads. GPU design optimization for efficient CNN training acceleration requires the accurate modeling of how their performance improves when computing and memory resources are increased. We present DeLTA, the first analytical model that accurately estimates the traffic at each GPU memory hierarchy level, while accounting for the complex reuse patterns of a parallel convolution algorithm. We demonstrate that our model is both accurate and robust for different CNNs and GPU architectures. We then show how this model can be used to carefully balance the scaling of different GPU resources for efficient CNN performance improvement."
            },
            "slug": "DeLTA:-GPU-Performance-Model-for-Deep-Learning-with-Lym-Lee",
            "title": {
                "fragments": [],
                "text": "DeLTA: GPU Performance Model for Deep Learning Applications with In-Depth Memory System Traffic Analysis"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "L DeLTA is presented, the first analytical model that accurately estimates the traffic at each GPU memory hierarchy level, while accounting for the complex reuse patterns of a parallel convolution algorithm."
            },
            "venue": {
                "fragments": [],
                "text": "2019 IEEE International Symposium on Performance Analysis of Systems and Software (ISPASS)"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2357270"
                        ],
                        "name": "Matthias Korch",
                        "slug": "Matthias-Korch",
                        "structuredName": {
                            "firstName": "Matthias",
                            "lastName": "Korch",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matthias Korch"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46361373"
                        ],
                        "name": "Tim Werner",
                        "slug": "Tim-Werner",
                        "structuredName": {
                            "firstName": "Tim",
                            "lastName": "Werner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tim Werner"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 140,
                                "start": 132
                            }
                        ],
                        "text": "Some previous works explored static thread and block compositions in database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 140,
                                "start": 132
                            }
                        ],
                        "text": "Prior works have explored the basic idea in AI workloads[8, 12, 28], database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 52124357,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d48f83c6d212767e8511d2e40a7362d23899a3d4",
            "isKey": false,
            "numCitedBy": 8,
            "numCiting": 37,
            "paperAbstract": {
                "fragments": [],
                "text": "Graphics processing units (GPUs) have a promising architecture for implementing highly parallel solution methods for systems of ordinary differential equations (ODEs). However, their high performance comes at the price of caveats such as small caches or wide SIMD. For ODE methods, optimizing the memory access pattern is often crucial. In this article, instead of considering only one specific method, we generalize the description of explicit ODE methods by using data flow graphs consisting of basic operations that are suitable to cover the types of computations occurring in all common explicit methods. After showing that the straightforward approach for processing the data flow graph by calling one kernel per basic operation is memory bound, we explain how the number of memory accesses can be reduced by the kernel fusion technique, which fuses several basic operations into one kernel. Moreover, we will present enabling transformations that allow additional fusions and thus can reduce the number of memory accesses even further. We apply these optimizations to three different classes of explicit ODE methods: embedded Runge\u2013Kutta (RK) methods, parallel iterated RK (PIRK) methods, and peer methods. A detailed experimental evaluation on three modern GPUs showed speedups between 1.86 and 3.51 compared to unfused implementations."
            },
            "slug": "Accelerating-explicit-ODE-methods-on-GPUs-by-kernel-Korch-Werner",
            "title": {
                "fragments": [],
                "text": "Accelerating explicit ODE methods on GPUs by kernel fusion"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "This article explains how the number of memory accesses can be reduced by the kernel fusion technique, which fuses several basic operations into one kernel, and generalizes the description of explicit ODE methods by using data flow graphs consisting of basic operations that are suitable to cover the types of computations occurring in all common explicit methods."
            },
            "venue": {
                "fragments": [],
                "text": "Concurr. Comput. Pract. Exp."
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2149970173"
                        ],
                        "name": "Lianmin Zheng",
                        "slug": "Lianmin-Zheng",
                        "structuredName": {
                            "firstName": "Lianmin",
                            "lastName": "Zheng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lianmin Zheng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "51195858"
                        ],
                        "name": "Chengfan Jia",
                        "slug": "Chengfan-Jia",
                        "structuredName": {
                            "firstName": "Chengfan",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chengfan Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2118254471"
                        ],
                        "name": "Minmin Sun",
                        "slug": "Minmin-Sun",
                        "structuredName": {
                            "firstName": "Minmin",
                            "lastName": "Sun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Minmin Sun"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2146045513"
                        ],
                        "name": "Zhao Wu",
                        "slug": "Zhao-Wu",
                        "structuredName": {
                            "firstName": "Zhao",
                            "lastName": "Wu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhao Wu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "17813719"
                        ],
                        "name": "Cody Hao Yu",
                        "slug": "Cody-Hao-Yu",
                        "structuredName": {
                            "firstName": "Cody",
                            "lastName": "Yu",
                            "middleNames": [
                                "Hao"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Cody Hao Yu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1411406011"
                        ],
                        "name": "Ameer Haj-Ali",
                        "slug": "Ameer-Haj-Ali",
                        "structuredName": {
                            "firstName": "Ameer",
                            "lastName": "Haj-Ali",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ameer Haj-Ali"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [],
                        "name": "Yida Wang",
                        "slug": "Yida-Wang",
                        "structuredName": {
                            "firstName": "Yida",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yida Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2146156715"
                        ],
                        "name": "Jun Yang",
                        "slug": "Jun-Yang",
                        "structuredName": {
                            "firstName": "Jun",
                            "lastName": "Yang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jun Yang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2720913"
                        ],
                        "name": "Danyang Zhuo",
                        "slug": "Danyang-Zhuo",
                        "structuredName": {
                            "firstName": "Danyang",
                            "lastName": "Zhuo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Danyang Zhuo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145741786"
                        ],
                        "name": "Koushik Sen",
                        "slug": "Koushik-Sen",
                        "structuredName": {
                            "firstName": "Koushik",
                            "lastName": "Sen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Koushik Sen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49988044"
                        ],
                        "name": "Joseph E. Gonzalez",
                        "slug": "Joseph-E.-Gonzalez",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Gonzalez",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Joseph E. Gonzalez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144467753"
                        ],
                        "name": "I. Stoica",
                        "slug": "I.-Stoica",
                        "structuredName": {
                            "firstName": "Ion",
                            "lastName": "Stoica",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Stoica"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 10,
                                "start": 7
                            }
                        ],
                        "text": "Recent TVM development results in auto schedule generations and limited fusion support."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 9,
                                "start": 5
                            }
                        ],
                        "text": "Ansor[56] also explores kernel fusion with tuning approach, with limited patterns supported."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 41,
                                "start": 38
                            }
                        ],
                        "text": "Some code generation frameworks, like TVM[12], mainly focus on tuning compute intensive ops and do not address memory intensive ones specifically."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 36,
                                "start": 33
                            }
                        ],
                        "text": "People can provide schedules and TVM tunes the parameters automatically."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 12,
                                "start": 4
                            }
                        ],
                        "text": "TVM [12, 56] is a popular framework targets optimization of mainly computing intensive operators."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 18,
                                "start": 14
                            }
                        ],
                        "text": "TVM[12], Ansor[56] and Halide[34] are capable to generate high performance kernels with well designed schedules."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 219636278,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6ebbdc79a3553e8ad2996d6d03987bfaeb448e82",
            "isKey": false,
            "numCitedBy": 94,
            "numCiting": 67,
            "paperAbstract": {
                "fragments": [],
                "text": "High-performance tensor programs are crucial to guarantee efficient execution of deep learning models. However, obtaining performant tensor programs for different operators on various hardware platforms is notoriously difficult. Currently, deep learning systems rely on vendor-provided kernel libraries or various search strategies to get performant tensor programs. These approaches either require significant engineering efforts in developing platform-specific optimization code or fall short in finding high-performance programs due to restricted search space and ineffective exploration strategy. \nWe present Ansor, a tensor program generation framework for deep learning applications. Compared with existing search strategies, Ansor explores much more optimization combinations by sampling programs from a hierarchical representation of the search space. Ansor then fine-tunes the sampled programs with evolutionary search and a learned cost model to identify the best programs. Ansor can find high-performance programs that are outside the search space of existing state-of-the-art approaches. Besides, Ansor utilizes a scheduler to simultaneously optimize multiple subgraphs in a set of deep neural networks. Our evaluation shows that Ansor improves the execution performance of deep neural networks on the Intel CPU, ARM CPU, and NVIDIA GPU by up to $3.8\\times$, $2.6\\times$, and $1.7 \\times$, respectively."
            },
            "slug": "Ansor-:-Generating-High-Performance-Tensor-Programs-Zheng-Jia",
            "title": {
                "fragments": [],
                "text": "Ansor : Generating High-Performance Tensor Programs for Deep Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 50,
                "text": "Ansor is presented, a tensor program generation framework for deep learning applications that can find high-performance programs that are outside the search space of existing state-of-the-art approaches."
            },
            "venue": {
                "fragments": [],
                "text": "OSDI"
            },
            "year": 2020
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37270394"
                        ],
                        "name": "M. Cowan",
                        "slug": "M.-Cowan",
                        "structuredName": {
                            "firstName": "Meghan",
                            "lastName": "Cowan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Cowan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47108160"
                        ],
                        "name": "T. Moreau",
                        "slug": "T.-Moreau",
                        "structuredName": {
                            "firstName": "Thierry",
                            "lastName": "Moreau",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Moreau"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913774"
                        ],
                        "name": "Tianqi Chen",
                        "slug": "Tianqi-Chen",
                        "structuredName": {
                            "firstName": "Tianqi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianqi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48712671"
                        ],
                        "name": "James Bornholt",
                        "slug": "James-Bornholt",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Bornholt",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "James Bornholt"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717411"
                        ],
                        "name": "L. Ceze",
                        "slug": "L.-Ceze",
                        "structuredName": {
                            "firstName": "Luis",
                            "lastName": "Ceze",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Ceze"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 16,
                                "start": 12
                            }
                        ],
                        "text": "Cowan et al.[14] study about generating quantized kernels."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 211521880,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "75cb4f04b1d0f6aceafb68438a949894ce4323b5",
            "isKey": false,
            "numCitedBy": 18,
            "numCiting": 66,
            "paperAbstract": {
                "fragments": [],
                "text": "Quantization optimizes machine learning inference for resource constrained environments by reducing the precision of its computation. In the extreme, even single-bit computations can produce acceptable results at dramatically lower cost. But this ultra-low-precision quantization is difficult to exploit because extracting optimal performance requires hand-tuning both high-level scheduling decisions and low-level implementations. As a result, practitioners settle for a few predefined quantized kernels, sacrificing optimality and restricting their ability to adapt to new hardware. This paper presents a new automated approach to implementing quantized inference for machine learning models. We integrate the choice of how to lay out quantized values into the scheduling phase of a machine learning compiler, allowing it to be optimized in concert with tiling and parallelization decisions. After scheduling, we use program synthesis to automatically generate efficient low-level operator implementations for the desired precision and data layout. We scale up synthesis using a novel reduction sketch that exploits the structure of matrix multiplication. On a ResNet18 model, our generated code outperforms an optimized floating-point baseline by up to 3.9\u00d7, and a state-of-the-art quantized implementation by up to 16.6\u00d7."
            },
            "slug": "Automatic-generation-of-high-performance-quantized-Cowan-Moreau",
            "title": {
                "fragments": [],
                "text": "Automatic generation of high-performance quantized machine learning kernels"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A new automated approach to implementing quantized inference for machine learning models is presented, integrating the choice of how to lay out quantized values into the scheduling phase of a machine learning compiler, allowing it to be optimized in concert with tiling and parallelization decisions."
            },
            "venue": {
                "fragments": [],
                "text": "CGO"
            },
            "year": 2020
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3121592"
                        ],
                        "name": "Nadav Rotem",
                        "slug": "Nadav-Rotem",
                        "structuredName": {
                            "firstName": "Nadav",
                            "lastName": "Rotem",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nadav Rotem"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8855702"
                        ],
                        "name": "Jordan Fix",
                        "slug": "Jordan-Fix",
                        "structuredName": {
                            "firstName": "Jordan",
                            "lastName": "Fix",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jordan Fix"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46247320"
                        ],
                        "name": "Saleem Abdulrasool",
                        "slug": "Saleem-Abdulrasool",
                        "structuredName": {
                            "firstName": "Saleem",
                            "lastName": "Abdulrasool",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saleem Abdulrasool"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46193056"
                        ],
                        "name": "Summer Deng",
                        "slug": "Summer-Deng",
                        "structuredName": {
                            "firstName": "Summer",
                            "lastName": "Deng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Summer Deng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46257780"
                        ],
                        "name": "Roman Dzhabarov",
                        "slug": "Roman-Dzhabarov",
                        "structuredName": {
                            "firstName": "Roman",
                            "lastName": "Dzhabarov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Roman Dzhabarov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153509089"
                        ],
                        "name": "James Hegeman",
                        "slug": "James-Hegeman",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Hegeman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "James Hegeman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46211183"
                        ],
                        "name": "Roman Levenstein",
                        "slug": "Roman-Levenstein",
                        "structuredName": {
                            "firstName": "Roman",
                            "lastName": "Levenstein",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Roman Levenstein"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2130533"
                        ],
                        "name": "Bertrand A. Maher",
                        "slug": "Bertrand-A.-Maher",
                        "structuredName": {
                            "firstName": "Bertrand",
                            "lastName": "Maher",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bertrand A. Maher"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143758120"
                        ],
                        "name": "N. Satish",
                        "slug": "N.-Satish",
                        "structuredName": {
                            "firstName": "Nadathur",
                            "lastName": "Satish",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Satish"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2925676"
                        ],
                        "name": "Jakob R. Olesen",
                        "slug": "Jakob-R.-Olesen",
                        "structuredName": {
                            "firstName": "Jakob",
                            "lastName": "Olesen",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jakob R. Olesen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1686843"
                        ],
                        "name": "Jongsoo Park",
                        "slug": "Jongsoo-Park",
                        "structuredName": {
                            "firstName": "Jongsoo",
                            "lastName": "Park",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jongsoo Park"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46250117"
                        ],
                        "name": "Artem Rakhov",
                        "slug": "Artem-Rakhov",
                        "structuredName": {
                            "firstName": "Artem",
                            "lastName": "Rakhov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Artem Rakhov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1711231"
                        ],
                        "name": "M. Smelyanskiy",
                        "slug": "M.-Smelyanskiy",
                        "structuredName": {
                            "firstName": "Mikhail",
                            "lastName": "Smelyanskiy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Smelyanskiy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 16,
                                "start": 12
                            }
                        ],
                        "text": "TC[47], Glow[35] and Tiramisu[9] can generate accelerator kernels given computation graph."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 23823854,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0261195ae7e1545caefb0ea7afb92bd66bfbb790",
            "isKey": false,
            "numCitedBy": 164,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper presents the design of Glow, a machine learning compiler for heterogeneous hardware. It is a pragmatic approach to compilation that enables the generation of highly optimized code for multiple targets. Glow lowers the traditional neural network dataflow graph into a two-phase strongly-typed intermediate representation. The high-level intermediate representation allows the optimizer to perform domain-specific optimizations. The lower-level instruction-based address-only intermediate representation allows the compiler to perform memory-related optimizations, such as instruction scheduling, static memory allocation and copy elimination. At the lowest level, the optimizer performs machine-specific code generation to take advantage of specialized hardware features. Glow features a lowering phase which enables the compiler to support a high number of input operators as well as a large number of hardware targets by eliminating the need to implement all operators on all targets. The lowering phase is designed to reduce the input space and allow new hardware backends to focus on a small number of linear algebra primitives."
            },
            "slug": "Glow:-Graph-Lowering-Compiler-Techniques-for-Neural-Rotem-Fix",
            "title": {
                "fragments": [],
                "text": "Glow: Graph Lowering Compiler Techniques for Neural Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "Glow features a lowering phase which enables the compiler to support a high number of input operators as well as a large number of hardware targets by eliminating the need to implement all operators on all targets."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "33816984"
                        ],
                        "name": "L. Truong",
                        "slug": "L.-Truong",
                        "structuredName": {
                            "firstName": "Leonard",
                            "lastName": "Truong",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Truong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1721712"
                        ],
                        "name": "R. Barik",
                        "slug": "R.-Barik",
                        "structuredName": {
                            "firstName": "Rajkishore",
                            "lastName": "Barik",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Barik"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1698790"
                        ],
                        "name": "E. Totoni",
                        "slug": "E.-Totoni",
                        "structuredName": {
                            "firstName": "Ehsan",
                            "lastName": "Totoni",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Totoni"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2115767593"
                        ],
                        "name": "Hai Liu",
                        "slug": "Hai-Liu",
                        "structuredName": {
                            "firstName": "Hai",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hai Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "6827332"
                        ],
                        "name": "Chick Markley",
                        "slug": "Chick-Markley",
                        "structuredName": {
                            "firstName": "Chick",
                            "lastName": "Markley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chick Markley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143608596"
                        ],
                        "name": "A. Fox",
                        "slug": "A.-Fox",
                        "structuredName": {
                            "firstName": "Armando",
                            "lastName": "Fox",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Fox"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1774432"
                        ],
                        "name": "T. Shpeisman",
                        "slug": "T.-Shpeisman",
                        "structuredName": {
                            "firstName": "Tatiana",
                            "lastName": "Shpeisman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Shpeisman"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 9,
                                "start": 5
                            }
                        ],
                        "text": "Latte[46] is a DSL system allowing users to specify, synthesize and optimize code."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 1856206,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e729739e2796348faa50c0e88e38be83b070d3fe",
            "isKey": false,
            "numCitedBy": 54,
            "numCiting": 60,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep neural networks (DNNs) have undergone a surge in popularity with consistent advances in the state of the art for tasks including image recognition, natural language processing, and speech recognition. The computationally expensive nature of these networks has led to the proliferation of implementations that sacrifice abstraction for high performance. In this paper, we present Latte, a domain-specific language for DNNs that provides a natural abstraction for specifying new layers without sacrificing performance. Users of Latte express DNNs as ensembles of neurons with connections between them. The Latte compiler synthesizes a program based on the user specification, applies a suite of domain-specific and general optimizations, and emits efficient machine code for heterogeneous architectures. Latte also includes a communication runtime for distributed memory data-parallelism. Using networks described using Latte, we demonstrate 3-6x speedup over Caffe (C++/MKL) on the three state-of-the-art ImageNet models executing on an Intel Xeon E5-2699 v3 x86 CPU."
            },
            "slug": "Latte:-a-language,-compiler,-and-runtime-for-and-Truong-Barik",
            "title": {
                "fragments": [],
                "text": "Latte: a language, compiler, and runtime for elegant and efficient deep neural networks"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "Latte is presented, a domain-specific language for DNNs that provides a natural abstraction for specifying new layers without sacrificing performance, and 3-6x speedup over Caffe (C++/MKL) on the three state-of-the-art ImageNet models executing on an Intel Xeon E5-2699 v3 x86 CPU."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1800919"
                        ],
                        "name": "Nicolas Vasilache",
                        "slug": "Nicolas-Vasilache",
                        "structuredName": {
                            "firstName": "Nicolas",
                            "lastName": "Vasilache",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nicolas Vasilache"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2054833547"
                        ],
                        "name": "O. Zinenko",
                        "slug": "O.-Zinenko",
                        "structuredName": {
                            "firstName": "Oleksandr",
                            "lastName": "Zinenko",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Zinenko"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2097631216"
                        ],
                        "name": "Theodoros Theodoridis",
                        "slug": "Theodoros-Theodoridis",
                        "structuredName": {
                            "firstName": "Theodoros",
                            "lastName": "Theodoridis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Theodoros Theodoridis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47316088"
                        ],
                        "name": "Priya Goyal",
                        "slug": "Priya-Goyal",
                        "structuredName": {
                            "firstName": "Priya",
                            "lastName": "Goyal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Priya Goyal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2375710"
                        ],
                        "name": "Zach DeVito",
                        "slug": "Zach-DeVito",
                        "structuredName": {
                            "firstName": "Zach",
                            "lastName": "DeVito",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zach DeVito"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "16521420"
                        ],
                        "name": "William S. Moses",
                        "slug": "William-S.-Moses",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Moses",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "William S. Moses"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1772079"
                        ],
                        "name": "Sven Verdoolaege",
                        "slug": "Sven-Verdoolaege",
                        "structuredName": {
                            "firstName": "Sven",
                            "lastName": "Verdoolaege",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sven Verdoolaege"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145509576"
                        ],
                        "name": "Albert Cohen",
                        "slug": "Albert-Cohen",
                        "structuredName": {
                            "firstName": "Albert",
                            "lastName": "Cohen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Albert Cohen"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 111,
                                "start": 92
                            }
                        ],
                        "text": "Many current research works mainly focus on dense tensor computations (GEMM and convolution)[6, 12, 34, 39, 47] as dense computations dominate the execution time formany DNN workloads (like CNN[20, 38, 42])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 6,
                                "start": 2
                            }
                        ],
                        "text": "TC[47], Glow[35] and Tiramisu[9] can generate accelerator kernels given computation graph."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 44014988,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "cae9d90524cccac5081666985d5d055b71697cee",
            "isKey": false,
            "numCitedBy": 284,
            "numCiting": 102,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep learning models with convolutional and recurrent networks are now ubiquitous and analyze massive amounts of audio, image, video, text and graph data, with applications in automatic translation, speech-to-text, scene understanding, ranking user preferences, ad placement, etc. Competing frameworks for building these networks such as TensorFlow, Chainer, CNTK, Torch/PyTorch, Caffe1/2, MXNet and Theano, explore different tradeoffs between usability and expressiveness, research or production orientation and supported hardware. They operate on a DAG of computational operators, wrapping high-performance libraries such as CUDNN (for NVIDIA GPUs) or NNPACK (for various CPUs), and automate memory allocation, synchronization, distribution. Custom operators are needed where the computation does not fit existing high-performance library calls, usually at a high engineering cost. This is frequently required when new operators are invented by researchers: such operators suffer a severe performance penalty, which limits the pace of innovation. Furthermore, even if there is an existing runtime call these frameworks can use, it often doesn't offer optimal performance for a user's particular network architecture and dataset, missing optimizations between operators as well as optimizations that can be done knowing the size and shape of data. Our contributions include (1) a language close to the mathematics of deep learning called Tensor Comprehensions offering both imperative and declarative styles, (2) a polyhedral Just-In-Time compiler to convert a mathematical description of a deep learning DAG into a CUDA kernel with delegated memory management and synchronization, also providing optimizations such as operator fusion and specialization for specific sizes, (3) a compilation cache populated by an autotuner. [Abstract cutoff]"
            },
            "slug": "Tensor-Comprehensions:-Framework-Agnostic-Machine-Vasilache-Zinenko",
            "title": {
                "fragments": [],
                "text": "Tensor Comprehensions: Framework-Agnostic High-Performance Machine Learning Abstractions"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "A language close to the mathematics of deep learning called Tensor Comprehensions offering both imperative and declarative styles, a polyhedral Just-In-Time compiler to convert a mathematical description of a deep learning DAG into a CUDA kernel with delegated memory management and synchronization, and a compilation cache populated by an autotuner are contributed."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49470542"
                        ],
                        "name": "Xiuxia Zhang",
                        "slug": "Xiuxia-Zhang",
                        "structuredName": {
                            "firstName": "Xiuxia",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xiuxia Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1930057"
                        ],
                        "name": "Guangming Tan",
                        "slug": "Guangming-Tan",
                        "structuredName": {
                            "firstName": "Guangming",
                            "lastName": "Tan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Guangming Tan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2044823"
                        ],
                        "name": "Shuangbai Xue",
                        "slug": "Shuangbai-Xue",
                        "structuredName": {
                            "firstName": "Shuangbai",
                            "lastName": "Xue",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shuangbai Xue"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47786204"
                        ],
                        "name": "Jiajia Li",
                        "slug": "Jiajia-Li",
                        "structuredName": {
                            "firstName": "Jiajia",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jiajia Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48918498"
                        ],
                        "name": "Ke-ren Zhou",
                        "slug": "Ke-ren-Zhou",
                        "structuredName": {
                            "firstName": "Ke-ren",
                            "lastName": "Zhou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ke-ren Zhou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2750388"
                        ],
                        "name": "Mingyu Chen",
                        "slug": "Mingyu-Chen",
                        "structuredName": {
                            "firstName": "Mingyu",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mingyu Chen"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 76
                            }
                        ],
                        "text": "Performance models for GPU and other accelerators is another research topic [15, 25, 30, 52, 54, 55]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 18757573,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d976bb3e73493db9b059e61601e1cfe8e48c597c",
            "isKey": false,
            "numCitedBy": 42,
            "numCiting": 38,
            "paperAbstract": {
                "fragments": [],
                "text": "In this paper, we present a methodology to understand GPU microarchitectural features and improve performance for compute-intensive kernels. The methodology relies on a reverse engineering approach to crack the GPU ISA encodings in order to build a GPU assembler. An assembly microbenchmark suite correlates microarchitectural features with their performance factors to uncover instruction-level and memory hierarchy preferences. We use SGEMM as a running example to show the ways to achieve bare-metal performance tuning. The performance boost is achieved by tuning FFMA throughput by activating dual-issue, eliminating register bank conflicts, adding non-FFMA instructions with little penalty, and choosing proper width of global/shared load instructions. On NVIDIA Kepler K20m, we develop a faster SGEMM with 3.1Tflop/s performance and 88% efficiency; the performance is 15% higher than cuBLAS7.0. Applying these optimizations to convolution, the implementation gains 39%-62% performance improvement compared with cuDNN4.0. The toolchain is an attempt to automatically crack different GPU ISA encodings and build an assembler adaptively for the purpose of performance enhancements to applications on GPUs."
            },
            "slug": "Understanding-the-GPU-Microarchitecture-to-Achieve-Zhang-Tan",
            "title": {
                "fragments": [],
                "text": "Understanding the GPU Microarchitecture to Achieve Bare-Metal Performance Tuning"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "The toolchain is an attempt to automatically crack different GPU ISA encodings and build an assembler adaptively for the purpose of performance enhancements to applications on GPUs."
            },
            "venue": {
                "fragments": [],
                "text": "PPoPP"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2118389666"
                        ],
                        "name": "Yao Zhang",
                        "slug": "Yao-Zhang",
                        "structuredName": {
                            "firstName": "Yao",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yao Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1758404"
                        ],
                        "name": "John Douglas Owens",
                        "slug": "John-Douglas-Owens",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Owens",
                            "middleNames": [
                                "Douglas"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "John Douglas Owens"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 76
                            }
                        ],
                        "text": "Performance models for GPU and other accelerators is another research topic [15, 25, 30, 52, 54, 55]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 10246721,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e4827160affa489adc4d80a2ffa3bfa7ac2a00a8",
            "isKey": false,
            "numCitedBy": 275,
            "numCiting": 25,
            "paperAbstract": {
                "fragments": [],
                "text": "We develop a microbenchmark-based performance model for NVIDIA GeForce 200-series GPUs. Our model identifies GPU program bottlenecks and quantitatively analyzes performance, and thus allows programmers and architects to predict the benefits of potential program optimizations and architectural improvements. In particular, we use a microbenchmark-based approach to develop a throughput model for three major components of GPU execution time: the instruction pipeline, shared memory access, and global memory access. Because our model is based on the GPU's native instruction set, we can predict performance with a 5\u201315% error. To demonstrate the usefulness of the model, we analyze three representative real-world and already highly-optimized programs: dense matrix multiply, tridiagonal systems solver, and sparse matrix vector multiply. The model provides us detailed quantitative analysis on performance, allowing us to understand the configuration of the fastest dense matrix multiply implementation and to optimize the tridiagonal solver and sparse matrix vector multiply by 60% and 18% respectively. Furthermore, our model applied to analysis on these codes allows us to suggest architectural improvements on hardware resource allocation, avoiding bank conflicts, block scheduling, and memory transaction granularity."
            },
            "slug": "A-quantitative-performance-analysis-model-for-GPU-Zhang-Owens",
            "title": {
                "fragments": [],
                "text": "A quantitative performance analysis model for GPU architectures"
            },
            "tldr": {
                "abstractSimilarityScore": 94,
                "text": "A microbenchmark-based performance model is developed for NVIDIA GeForce 200-series GPUs that identifies GPU program bottlenecks and quantitatively analyzes performance, and thus allows programmers and architects to predict the benefits of potential program optimizations and architectural improvements."
            },
            "venue": {
                "fragments": [],
                "text": "2011 IEEE 17th International Symposium on High Performance Computer Architecture"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39384383"
                        ],
                        "name": "Asif M. Adnan",
                        "slug": "Asif-M.-Adnan",
                        "structuredName": {
                            "firstName": "Asif",
                            "lastName": "Adnan",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Asif M. Adnan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1716549"
                        ],
                        "name": "S. Radhakrishnan",
                        "slug": "S.-Radhakrishnan",
                        "structuredName": {
                            "firstName": "S.",
                            "lastName": "Radhakrishnan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Radhakrishnan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2151179"
                        ],
                        "name": "S. Karabuk",
                        "slug": "S.-Karabuk",
                        "structuredName": {
                            "firstName": "Suleyman",
                            "lastName": "Karabuk",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Karabuk"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 99
                            }
                        ],
                        "text": "Some previous works explored static thread and block compositions in database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 99
                            }
                        ],
                        "text": "Prior works have explored the basic idea in AI workloads[8, 12, 28], database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 1268124,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "06c3a1a62574c7cb6f60af214598bca57e79b8fc",
            "isKey": false,
            "numCitedBy": 2,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "Kernels are executable code segments and kernel fusion is a technique for combing the segments in a coherent manner to improve execution time. For the first time, we have developed a technique to fuse image processing kernels to be executed on GPGPUs for improving execution time and total throughput (amount of data processed in unit time). We have applied our techniques for feature tracking on video images captured by a high speed digital video camera where the number of frames captured varies between 600-1000 frames per second. Image processing kernels are composed of multiple simple kernels, which executes on the input image in a given sequence. A set of kernels that can be fused together forms a partition (or fused kernel). Given a set of Kernels and the data dependencies between them, it is difficult to determine the partitions of kernels such that the total performance is maximized (execution time and throughput). We have developed and implemented an optimization model to find such a partition. We also developed an algorithm to fuse multiple kernels based on their data dependencies. Additionally, to further improve performance on GPGPU systems, we have provided methods to distribute data and threads to processors. Our model was able to reduce data traffic, which resulted better performance.The performance (both execution time and throughput) of the proposed method for kernel fusing and its subsequent execution is shown to be 2 to 3 times higher than executing kernels in sequence. We have demonstrated our technique for facial feature tracking with applications to Neuroscience."
            },
            "slug": "Efficient-Kernel-Fusion-Techniques-for-Massive-Data-Adnan-Radhakrishnan",
            "title": {
                "fragments": [],
                "text": "Efficient Kernel Fusion Techniques for Massive Video Data Analysis on GPGPUs"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "The performance (both execution time and throughput) of the proposed method for kernel fusing and its subsequent execution is shown to be 2 to 3 times higher than executing kernels in sequence."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144390847"
                        ],
                        "name": "Andrew Anderson",
                        "slug": "Andrew-Anderson",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Anderson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Anderson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145453252"
                        ],
                        "name": "David Gregg",
                        "slug": "David-Gregg",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Gregg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David Gregg"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 111,
                                "start": 92
                            }
                        ],
                        "text": "Many current research works mainly focus on dense tensor computations (GEMM and convolution)[6, 12, 34, 39, 47] as dense computations dominate the execution time formany DNN workloads (like CNN[20, 38, 42])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 18,
                                "start": 15
                            }
                        ],
                        "text": "Anderson et al.[6] propose a solution for selecting fast kernel implementations in the global context by formulating a PBQP problem."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 3374904,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4a93dc34dc4a5b1c03ae0a5b23a88bece568c28a",
            "isKey": false,
            "numCitedBy": 24,
            "numCiting": 20,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep Neural Networks (DNNs) require very large amounts of computation, and many different algorithms have been proposed to implement their most expensive layers, each of which has a large number of variants with different trade-offs of parallelism, locality, memory footprint, and execution time. In addition, specific algorithms operate much more efficiently on specialized data layouts. We state the problem of optimal primitive selection in the presence of data layout transformations, and show that it is NP-hard by demonstrating an embedding in the Partitioned Boolean Quadratic Assignment problem (PBQP). We propose an analytic solution via a PBQP solver, and evaluate our approach experimentally by optimizing several popular DNNs using a library of more than 70 DNN primitives, on an embedded platform and a general purpose platform. We show experimentally that significant gains are possible versus the state of the art vendor libraries by using a principled analytic solution to the problem of primitive selection in the presence of data layout transformations."
            },
            "slug": "Optimal-DNN-primitive-selection-with-partitioned-Anderson-Gregg",
            "title": {
                "fragments": [],
                "text": "Optimal DNN primitive selection with partitioned boolean quadratic programming"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "This work states the problem of optimal primitive selection in the presence of data layout transformations, and shows that it is NP-hard by demonstrating an embedding in the Partitioned Boolean Quadratic Assignment problem (PBQP)."
            },
            "venue": {
                "fragments": [],
                "text": "CGO"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2318023"
                        ],
                        "name": "M. Moskewicz",
                        "slug": "M.-Moskewicz",
                        "structuredName": {
                            "firstName": "Matthew",
                            "lastName": "Moskewicz",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Moskewicz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1692563"
                        ],
                        "name": "A. Jannesari",
                        "slug": "A.-Jannesari",
                        "structuredName": {
                            "firstName": "Ali",
                            "lastName": "Jannesari",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Jannesari"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1732330"
                        ],
                        "name": "K. Keutzer",
                        "slug": "K.-Keutzer",
                        "structuredName": {
                            "firstName": "Kurt",
                            "lastName": "Keutzer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Keutzer"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 8,
                                "start": 4
                            }
                        ],
                        "text": "Boda[31] is a code generator that targets mobile platforms."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 7197543,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5aefb814b264081d71674e9509c57cdfa3820752",
            "isKey": false,
            "numCitedBy": 12,
            "numCiting": 20,
            "paperAbstract": {
                "fragments": [],
                "text": "Neural networks (NNs) are currently a very popular topic in machine learning for both research and practice. GPUs are the dominant computing platform for research efforts and are also gaining popularity as a deployment platform for applications such as autonomous vehicles. As a result, GPU vendors such as NVIDIA have spent enormous effort to write special-purpose NN libraries. On other hardware targets, especially mobile GPUs, such vendor libraries are not generally available. Thus, the development of portable, open, high-performance, energy-efficient GPU code for NN operations would enable broader deployment of NN-based algorithms. A root problem is that high efficiency GPU programming suffers from high complexity, low productivity, and low portability. To address this, this work presents a framework to enable productive, high-efficiency GPU programming for NN computations across hardware platforms and programming models. In particular, the framework provides specific support for metaprogramming and autotuning of operations over ND-Arrays. To show the correctness and value of our framework and approach, we implement a selection of NN operations, covering the core operations needed for deploying three common image-processing neural networks. We target three different hardware platforms: NVIDIA, AMD, and Qualcomm GPUs. On NVIDIA GPUs, we show both portability between OpenCL and CUDA as well competitive performance compared to the vendor library. On Qualcomm GPUs, we show that our framework enables productive development of target-specific optimizations, and achieves reasonable absolute performance. Finally, On AMD GPUs, we show initial results that indicate our framework can yield reasonable performance on a new platform with minimal effort."
            },
            "slug": "Boda:-A-Holistic-Approach-for-Implementing-Neural-Moskewicz-Jannesari",
            "title": {
                "fragments": [],
                "text": "Boda: A Holistic Approach for Implementing Neural Network Computations"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "This work presents a framework to enable productive, high-efficiency GPU programming for NN computations across hardware platforms and programming models, and provides specific support for metaprogramming and autotuning of operations over ND-Arrays."
            },
            "venue": {
                "fragments": [],
                "text": "Conf. Computing Frontiers"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913774"
                        ],
                        "name": "Tianqi Chen",
                        "slug": "Tianqi-Chen",
                        "structuredName": {
                            "firstName": "Tianqi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianqi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2124778071"
                        ],
                        "name": "Mu Li",
                        "slug": "Mu-Li",
                        "structuredName": {
                            "firstName": "Mu",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mu Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110420880"
                        ],
                        "name": "Yutian Li",
                        "slug": "Yutian-Li",
                        "structuredName": {
                            "firstName": "Yutian",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yutian Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1491081747"
                        ],
                        "name": "Min Lin",
                        "slug": "Min-Lin",
                        "structuredName": {
                            "firstName": "Min",
                            "lastName": "Lin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Min Lin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48246959"
                        ],
                        "name": "Naiyan Wang",
                        "slug": "Naiyan-Wang",
                        "structuredName": {
                            "firstName": "Naiyan",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Naiyan Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1508337194"
                        ],
                        "name": "Minjie Wang",
                        "slug": "Minjie-Wang",
                        "structuredName": {
                            "firstName": "Minjie",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Minjie Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39102205"
                        ],
                        "name": "Tianjun Xiao",
                        "slug": "Tianjun-Xiao",
                        "structuredName": {
                            "firstName": "Tianjun",
                            "lastName": "Xiao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianjun Xiao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2113742783"
                        ],
                        "name": "Bing Xu",
                        "slug": "Bing-Xu",
                        "structuredName": {
                            "firstName": "Bing",
                            "lastName": "Xu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bing Xu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "151505981"
                        ],
                        "name": "Chiyuan Zhang",
                        "slug": "Chiyuan-Zhang",
                        "structuredName": {
                            "firstName": "Chiyuan",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chiyuan Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38448016"
                        ],
                        "name": "Zheng Zhang",
                        "slug": "Zheng-Zhang",
                        "structuredName": {
                            "firstName": "Zheng",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zheng Zhang"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 156,
                                "start": 152
                            }
                        ],
                        "text": "Suchworkloads are typically expressed as computation graphs, and mapped to hardware through domain specific frameworks (TensorFlow[2], PyTorch[1], MXNet[11], etc)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 1507815,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "62df84d6a4d26f95e4714796c2337c9848cc13b5",
            "isKey": false,
            "numCitedBy": 1891,
            "numCiting": 16,
            "paperAbstract": {
                "fragments": [],
                "text": "MXNet is a multi-language machine learning (ML) library to ease the development of ML algorithms, especially for deep neural networks. Embedded in the host language, it blends declarative symbolic expression with imperative tensor computation. It offers auto differentiation to derive gradients. MXNet is computation and memory efficient and runs on various heterogeneous systems, ranging from mobile devices to distributed GPU clusters. \nThis paper describes both the API design and the system implementation of MXNet, and explains how embedding of both symbolic expression and tensor operation is handled in a unified fashion. Our preliminary experiments reveal promising results on large scale deep neural network applications using multiple GPU machines."
            },
            "slug": "MXNet:-A-Flexible-and-Efficient-Machine-Learning-Chen-Li",
            "title": {
                "fragments": [],
                "text": "MXNet: A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "The API design and the system implementation of MXNet are described, and it is explained how embedding of both symbolic expression and tensor operation is handled in a unified fashion."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "29045085"
                        ],
                        "name": "Samuel J. Kaufman",
                        "slug": "Samuel-J.-Kaufman",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Kaufman",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Samuel J. Kaufman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2623548"
                        ],
                        "name": "P. Phothilimthana",
                        "slug": "P.-Phothilimthana",
                        "structuredName": {
                            "firstName": "Phitchaya",
                            "lastName": "Phothilimthana",
                            "middleNames": [
                                "Mangpo"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Phothilimthana"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2389316"
                        ],
                        "name": "Yanqi Zhou",
                        "slug": "Yanqi-Zhou",
                        "structuredName": {
                            "firstName": "Yanqi",
                            "lastName": "Zhou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yanqi Zhou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2062790552"
                        ],
                        "name": "Mike Burrows",
                        "slug": "Mike-Burrows",
                        "structuredName": {
                            "firstName": "Mike",
                            "lastName": "Burrows",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mike Burrows"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 76
                            }
                        ],
                        "text": "Performance models for GPU and other accelerators is another research topic [15, 25, 30, 52, 54, 55]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 220936445,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "19a496dc113fae4a08be12c65e8ec65fa323e090",
            "isKey": false,
            "numCitedBy": 7,
            "numCiting": 35,
            "paperAbstract": {
                "fragments": [],
                "text": "Accurate hardware performance models are critical to efficient code generation. They can be used by compilers to make heuristic decisions, by superoptimizers as an minimization objective, or by autotuners to find an optimal configuration of a specific program. However, they are difficult to develop because contemporary processors are complex, and the recent proliferation of deep learning accelerators has increased the development burden. We demonstrate a method of learning performance models from a corpus of tensor computation graph programs for the Tensor Processing Unit (TPU). We train a neural network over kernel-level sub-graphs from the corpus and find that the learned model is competitive to a heavily-optimized analytical cost model used in the production XLA compiler."
            },
            "slug": "A-Learned-Performance-Model-for-the-Tensor-Unit-Kaufman-Phothilimthana",
            "title": {
                "fragments": [],
                "text": "A Learned Performance Model for the Tensor Processing Unit"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "A method of learning performance models from a corpus of tensor computation graph programs for the Tensor Processing Unit (TPU) is demonstrated and it is found that the learned model is competitive to a heavily-optimized analytical cost model used in the production XLA compiler."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2020
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48813086"
                        ],
                        "name": "Zhe Jia",
                        "slug": "Zhe-Jia",
                        "structuredName": {
                            "firstName": "Zhe",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhe Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "138304679"
                        ],
                        "name": "Marco Maggioni",
                        "slug": "Marco-Maggioni",
                        "structuredName": {
                            "firstName": "Marco",
                            "lastName": "Maggioni",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Marco Maggioni"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109849147"
                        ],
                        "name": "Jeffrey K. Smith",
                        "slug": "Jeffrey-K.-Smith",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Smith",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jeffrey K. Smith"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3277273"
                        ],
                        "name": "D. Scarpazza",
                        "slug": "D.-Scarpazza",
                        "structuredName": {
                            "firstName": "Daniele",
                            "lastName": "Scarpazza",
                            "middleNames": [
                                "Paolo"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Scarpazza"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 55,
                                "start": 47
                            }
                        ],
                        "text": "As for Lwarp , we use the reported CPI numbers [21, 22] and multiply it with the total instruction count (Ninstruction ) we estimated."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 81981887,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "01baca4fa7ad5d28b95f6f72fe33de9a34633bc6",
            "isKey": false,
            "numCitedBy": 51,
            "numCiting": 8,
            "paperAbstract": {
                "fragments": [],
                "text": "In 2019, the rapid rate at which GPU manufacturers refresh their designs, coupled with their reluctance to disclose microarchitectural details, is still a hurdle for those software designers who want to extract the highest possible performance. Last year, these very reasons motivated us to dissect the Volta GPU architecture using microbenchmarks. \nThe introduction in August 2018 of Turing, NVidia's latest architecture, pressed us to update our study. In this report, we examine Turing and compare it quantitatively against previous NVidia GPU generations. Specifically, we study the T4 GPU: a low-power board aiming at inference applications. We describe its improvements against its inference-oriented predecessor: the P4 GPU based on the Pascal architecture. Both T4 and P4 GPUs achieve significantly higher frequency-per-Watt figures than their full-size counterparts. \nWe study the performance of the T4's TensorCores, finding a much higher throughput on low-precision operands than on the P4 GPU. We reveal that Turing introduces new instructions that express matrix math more succinctly. We map Turing's instruction space, finding the same encoding as Volta, and additional instructions. We reveal that the Turing TU104 chip has the same memory hierarchy depth as the Volta GV100; cache levels sizes on the TU104 are frequently twice as large as those found on the Pascal GP104. We benchmark each constituent of the T4 memory hierarchy and find substantial overall performance improvements over its P4 predecessor. We studied how clock throttling affects compute-intensive workloads that hit power or thermal limits. \nMany of our findings are novel, published here for the first time. All of them can guide high-performance software developers get closer to the GPU's peak performance."
            },
            "slug": "Dissecting-the-NVidia-Turing-T4-GPU-via-Jia-Maggioni",
            "title": {
                "fragments": [],
                "text": "Dissecting the NVidia Turing T4 GPU via Microbenchmarking"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This report examines Turing and compares it quantitatively against previous NVidia GPU generations, and reveals that Turing introduces new instructions that express matrix math more succinctly, and maps Turing's instruction space, finding the same encoding as Volta, and additional instructions."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2040049"
                        ],
                        "name": "G. Diamos",
                        "slug": "G.-Diamos",
                        "structuredName": {
                            "firstName": "Gregory",
                            "lastName": "Diamos",
                            "middleNames": [
                                "Frederick"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Diamos"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2264597"
                        ],
                        "name": "Shubho Sengupta",
                        "slug": "Shubho-Sengupta",
                        "structuredName": {
                            "firstName": "Shubho",
                            "lastName": "Sengupta",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shubho Sengupta"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2301680"
                        ],
                        "name": "Bryan Catanzaro",
                        "slug": "Bryan-Catanzaro",
                        "structuredName": {
                            "firstName": "Bryan",
                            "lastName": "Catanzaro",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bryan Catanzaro"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35977287"
                        ],
                        "name": "Mike Chrzanowski",
                        "slug": "Mike-Chrzanowski",
                        "structuredName": {
                            "firstName": "Mike",
                            "lastName": "Chrzanowski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mike Chrzanowski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144638694"
                        ],
                        "name": "Adam Coates",
                        "slug": "Adam-Coates",
                        "structuredName": {
                            "firstName": "Adam",
                            "lastName": "Coates",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Adam Coates"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "152585800"
                        ],
                        "name": "Erich Elsen",
                        "slug": "Erich-Elsen",
                        "structuredName": {
                            "firstName": "Erich",
                            "lastName": "Elsen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Erich Elsen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9695761"
                        ],
                        "name": "Jesse Engel",
                        "slug": "Jesse-Engel",
                        "structuredName": {
                            "firstName": "Jesse",
                            "lastName": "Engel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jesse Engel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144479015"
                        ],
                        "name": "Awni Y. Hannun",
                        "slug": "Awni-Y.-Hannun",
                        "structuredName": {
                            "firstName": "Awni",
                            "lastName": "Hannun",
                            "middleNames": [
                                "Y."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Awni Y. Hannun"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145031342"
                        ],
                        "name": "S. Satheesh",
                        "slug": "S.-Satheesh",
                        "structuredName": {
                            "firstName": "Sanjeev",
                            "lastName": "Satheesh",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Satheesh"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 22,
                                "start": 18
                            }
                        ],
                        "text": "[7], Diamos et al.[17] study about kernel fusion technique to speedup RNN workloads."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 34,
                                "start": 21
                            }
                        ],
                        "text": "Appleyard et al.[7], Diamos et al.[17] study about kernel fusion technique to speedup RNN workloads."
                    },
                    "intents": []
                }
            ],
            "corpusId": 17818155,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "56172b6fe2613c37d9790bde8ab6ccda14b35678",
            "isKey": false,
            "numCitedBy": 82,
            "numCiting": 53,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper introduces a new technique for mapping Deep Recurrent Neural Networks (RNN) efficiently onto GPUs. We show how it is possible to achieve substantially higher computational throughput at low mini-batch sizes than direct implementations of RNNs based on matrix multiplications. The key to our approach is the use of persistent computational kernels that exploit the GPU's inverted memory hierarchy to reuse network weights over multiple timesteps. Our initial implementation sustains 2.8 TFLOP/s at a mini-batch size of 4 on an NVIDIA TitanX GPU. This provides a 16\u00d7 reduction in activation memory footprint, enables model training with 12\u00d7 more parameters on the same hardware, allows us to strongly scale RNN training to 128 GPUs, and allows us to efficiently explore end-to-end speech recognition models with over 100 layers."
            },
            "slug": "Persistent-RNNs:-Stashing-Recurrent-Weights-On-Chip-Diamos-Sengupta",
            "title": {
                "fragments": [],
                "text": "Persistent RNNs: Stashing Recurrent Weights On-Chip"
            },
            "tldr": {
                "abstractSimilarityScore": 66,
                "text": "This paper introduces a new technique for mapping Deep Recurrent Neural Networks efficiently onto GPUs that uses persistent computational kernels that exploit the GPU's inverted memory hierarchy to reuse network weights over multiple timesteps."
            },
            "venue": {
                "fragments": [],
                "text": "ICML"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1590803341"
                        ],
                        "name": "Jinsung Kim",
                        "slug": "Jinsung-Kim",
                        "structuredName": {
                            "firstName": "Jinsung",
                            "lastName": "Kim",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jinsung Kim"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1403811034"
                        ],
                        "name": "Aravind Sukumaran-Rajam",
                        "slug": "Aravind-Sukumaran-Rajam",
                        "structuredName": {
                            "firstName": "Aravind",
                            "lastName": "Sukumaran-Rajam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Aravind Sukumaran-Rajam"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1411068509"
                        ],
                        "name": "V. Thumma",
                        "slug": "V.-Thumma",
                        "structuredName": {
                            "firstName": "Vineeth",
                            "lastName": "Thumma",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Thumma"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144497869"
                        ],
                        "name": "S. Krishnamoorthy",
                        "slug": "S.-Krishnamoorthy",
                        "structuredName": {
                            "firstName": "Sriram",
                            "lastName": "Krishnamoorthy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Krishnamoorthy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3225184"
                        ],
                        "name": "A. Panyala",
                        "slug": "A.-Panyala",
                        "structuredName": {
                            "firstName": "Ajay",
                            "lastName": "Panyala",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Panyala"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1793611"
                        ],
                        "name": "L. Pouchet",
                        "slug": "L.-Pouchet",
                        "structuredName": {
                            "firstName": "Louis-No\u00ebl",
                            "lastName": "Pouchet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Pouchet"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1793925"
                        ],
                        "name": "A. Rountev",
                        "slug": "A.-Rountev",
                        "structuredName": {
                            "firstName": "Atanas",
                            "lastName": "Rountev",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Rountev"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145293384"
                        ],
                        "name": "P. Sadayappan",
                        "slug": "P.-Sadayappan",
                        "structuredName": {
                            "firstName": "P.",
                            "lastName": "Sadayappan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Sadayappan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 14,
                                "start": 10
                            }
                        ],
                        "text": "Kim et al.[26] propose a GPU code generator for arbitrary tensor contractions."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 71149945,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "fb2b2cd5016a5e0b43841343e65f13ab95623510",
            "isKey": false,
            "numCitedBy": 23,
            "numCiting": 24,
            "paperAbstract": {
                "fragments": [],
                "text": "Tensor contractions are higher dimensional generalizations of matrix-matrix multiplication. They form the compute-intensive core of many applications in computational science and data science. In this paper, we describe a high-performance GPU code generator for arbitrary tensor contractions. It exploits domain-specific properties about data reuse in tensor contractions to devise an effective code generation schema, coupled with an effective model-driven search, to determine parameters for mapping of computation to threads and staging of data through the GPU memory hierarchy. Experimental evaluation using a set of tensor contraction benchmarks demonstrates performance improvement and/or significantly reduced code generation time over other state-of-the-art tensor contraction libraries and code generators."
            },
            "slug": "A-Code-Generator-for-High-Performance-Tensor-on-Kim-Sukumaran-Rajam",
            "title": {
                "fragments": [],
                "text": "A Code Generator for High-Performance Tensor Contractions on GPUs"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A high-performance GPU code generator for arbitrary tensor contractions that exploits domain-specific properties about data reuse in tensorcontractions to devise an effective code generation schema and determine parameters for mapping of computation to threads and staging of data through the GPU memory hierarchy."
            },
            "venue": {
                "fragments": [],
                "text": "2019 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144432839"
                        ],
                        "name": "Alberto Parravicini",
                        "slug": "Alberto-Parravicini",
                        "structuredName": {
                            "firstName": "Alberto",
                            "lastName": "Parravicini",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alberto Parravicini"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2038264194"
                        ],
                        "name": "Arnaud Delamare",
                        "slug": "Arnaud-Delamare",
                        "structuredName": {
                            "firstName": "Arnaud",
                            "lastName": "Delamare",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Arnaud Delamare"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "21305012"
                        ],
                        "name": "M. Arnaboldi",
                        "slug": "M.-Arnaboldi",
                        "structuredName": {
                            "firstName": "Marco",
                            "lastName": "Arnaboldi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Arnaboldi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1695345"
                        ],
                        "name": "M. Santambrogio",
                        "slug": "M.-Santambrogio",
                        "structuredName": {
                            "firstName": "Marco",
                            "lastName": "Santambrogio",
                            "middleNames": [
                                "Domenico"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Santambrogio"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 155,
                                "start": 151
                            }
                        ],
                        "text": "CUDA Graph [19] reduces kernel launch overhead but suffers from severer initialization overhead and large extra GPU memory usage due to graph creation [31]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 229297720,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b3a8dfd5b6fed6cd828a17a4cd0f1ca5b317f96b",
            "isKey": false,
            "numCitedBy": 5,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "GPUs are readily available in cloud computing and personal devices, but their use for data processing acceleration has been slowed down by their limited integration with common programming languages such as Python or Java. Moreover, using GPUs to their full capabilities requires expert knowledge of asynchronous programming. In this work, we present a novel GPU run time scheduler for multi-task GPU computations that transparently provides asynchronous execution, space-sharing, and transfer-computation overlap without requiring in advance any information about the program dependency structure. We leverage the GrCUDA polyglot API to integrate our scheduler with multiple high-level languages and provide a platform for fast prototyping and easy GPU acceleration. We validate our work on 6 benchmarks created to evaluate task-parallelism and show an average of 44% speedup against synchronous execution, with no execution time slowdown compared to hand-optimized host code written using the C++ CUDA Graphs API."
            },
            "slug": "DAG-based-Scheduling-with-Resource-Sharing-for-in-a-Parravicini-Delamare",
            "title": {
                "fragments": [],
                "text": "DAG-based Scheduling with Resource Sharing for Multi-task Applications in a Polyglot GPU Runtime"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This work presents a novel GPU run time scheduler for multi-task GPU computations that transparently provides asynchronous execution, space-sharing, and transfer-computation overlap without requiring in advance any information about the program dependency structure."
            },
            "venue": {
                "fragments": [],
                "text": "2021 IEEE International Parallel and Distributed Processing Symposium (IPDPS)"
            },
            "year": 2021
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2115547171"
                        ],
                        "name": "Zhen Zheng",
                        "slug": "Zhen-Zheng",
                        "structuredName": {
                            "firstName": "Zhen",
                            "lastName": "Zheng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhen Zheng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3025447"
                        ],
                        "name": "Chanyoung Oh",
                        "slug": "Chanyoung-Oh",
                        "structuredName": {
                            "firstName": "Chanyoung",
                            "lastName": "Oh",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chanyoung Oh"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2467444"
                        ],
                        "name": "Jidong Zhai",
                        "slug": "Jidong-Zhai",
                        "structuredName": {
                            "firstName": "Jidong",
                            "lastName": "Zhai",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jidong Zhai"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37914192"
                        ],
                        "name": "Xipeng Shen",
                        "slug": "Xipeng-Shen",
                        "structuredName": {
                            "firstName": "Xipeng",
                            "lastName": "Shen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xipeng Shen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1714079"
                        ],
                        "name": "Youngmin Yi",
                        "slug": "Youngmin-Yi",
                        "structuredName": {
                            "firstName": "Youngmin",
                            "lastName": "Yi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Youngmin Yi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1712168"
                        ],
                        "name": "Wenguang Chen",
                        "slug": "Wenguang-Chen",
                        "structuredName": {
                            "firstName": "Wenguang",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Wenguang Chen"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 217,
                                "start": 213
                            }
                        ],
                        "text": "Note that naive composition of multiple computations may cause notable performance slowdown, as different portions of the kernel may have conflicting memory layout, parallelization or on-chip resource requirements[57]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 24232551,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b4ed343d41008dc6523e72be00fc063270d16696",
            "isKey": false,
            "numCitedBy": 30,
            "numCiting": 57,
            "paperAbstract": {
                "fragments": [],
                "text": "Pipeline is an important programming pattern, while GPU, designed mostly for data-level parallel executions, lacks an efficient mechanism to support pipeline programming and executions. This paper provides a systematic examination of various existing pipeline execution models on GPU, and analyzes their strengths and weaknesses. To address their shortcomings, this paper then proposes three new execution models equipped with much improved controllability, including a hybrid model that is capable of getting the strengths of all. These insights ultimately lead to the development of a software programming framework named VersaPipe. With VersaPipe, users only need to write the operations for each pipeline stage. VersaPipe will then automatically assemble the stages into a hybrid execution model and configure it to achieve the best performance. Experiments on a set of pipeline benchmarks and a real-world face detection application show that VersaPipe produces up to $6.90 \\times (2.88 \\times$ on average) speedups over the original manual implementations. CCS CONCEPTS \u2022 General and reference $\\rightarrow$ Performance; \u2022 Computing methodologies $\\rightarrow$ Parallel computing methodologies; \u2022 Computer systems organization $\\rightarrow$ Heterogeneous (hybrid) systems;"
            },
            "slug": "VersaPipe:-A-Versatile-Programming-Framework-for-on-Zheng-Oh",
            "title": {
                "fragments": [],
                "text": "VersaPipe: A Versatile Programming Framework for Pipelined Computing on GPU"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "This paper proposes three new execution models equipped with much improved controllability, including a hybrid model that is capable of getting the strengths of all, and leads to the development of a software programming framework named VersaPipe."
            },
            "venue": {
                "fragments": [],
                "text": "2017 50th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40231275"
                        ],
                        "name": "J. Appleyard",
                        "slug": "J.-Appleyard",
                        "structuredName": {
                            "firstName": "Jeremy",
                            "lastName": "Appleyard",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Appleyard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2367821"
                        ],
                        "name": "Tom\u00e1s Kocisk\u00fd",
                        "slug": "Tom\u00e1s-Kocisk\u00fd",
                        "structuredName": {
                            "firstName": "Tom\u00e1s",
                            "lastName": "Kocisk\u00fd",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tom\u00e1s Kocisk\u00fd"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1685771"
                        ],
                        "name": "P. Blunsom",
                        "slug": "P.-Blunsom",
                        "structuredName": {
                            "firstName": "Phil",
                            "lastName": "Blunsom",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Blunsom"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 7780188,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8e072ff7df01f944e08d40203474f49ea8521d57",
            "isKey": false,
            "numCitedBy": 86,
            "numCiting": 27,
            "paperAbstract": {
                "fragments": [],
                "text": "As recurrent neural networks become larger and deeper, training times for single networks are rising into weeks or even months. As such there is a significant incentive to improve the performance and scalability of these networks. While GPUs have become the hardware of choice for training and deploying recurrent models, the implementations employed often make use of only basic optimizations for these architectures. In this article we demonstrate that by exposing parallelism between operations within the network, an order of magnitude speedup across a range of network sizes can be achieved over a naive implementation. We describe three stages of optimization that have been incorporated into the fifth release of NVIDIA's cuDNN: firstly optimizing a single cell, secondly a single layer, and thirdly the entire network."
            },
            "slug": "Optimizing-Performance-of-Recurrent-Neural-Networks-Appleyard-Kocisk\u00fd",
            "title": {
                "fragments": [],
                "text": "Optimizing Performance of Recurrent Neural Networks on GPUs"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "It is demonstrated that by exposing parallelism between operations within the network, an order of magnitude speedup across a range of network sizes can be achieved over a naive implementation."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48493240"
                        ],
                        "name": "C. Ding",
                        "slug": "C.-Ding",
                        "structuredName": {
                            "firstName": "Chen",
                            "lastName": "Ding",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Ding"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "70455556"
                        ],
                        "name": "K. Kennedy",
                        "slug": "K.-Kennedy",
                        "structuredName": {
                            "firstName": "Ken",
                            "lastName": "Kennedy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Kennedy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 71,
                                "start": 60
                            }
                        ],
                        "text": "GPUkernel fusion, inspired from classical loop optimizations[5, 18, 19], is known to boost performance in many application domains."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 6011413,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e8294122747a16df4f566c39c2ed6d629bd8af74",
            "isKey": false,
            "numCitedBy": 114,
            "numCiting": 54,
            "paperAbstract": {
                "fragments": [],
                "text": "Reusing data in cache is critical to achieving high performance on modern machines because it reduces the impact of the latency and bandwidth limitations of direct memory access. To date, most studies of software memory hierarchy management have focused on the latency problem. However today's machines are increasingly limited by insufficient memory bandwidth-on these machines, latency-oriented techniques are inadequate because they do not seek to minimize the total memory traffic over the whole program. This paper explores the potential for addressing bandwidth limitations by increasing global cache reuse-that is, reusing data across whole program and over the entire data collection. To this end, the paper explores a two-step global strategy. The first step fuses computations on the same data to enable the caching of repeated accesses. The second step groups data used by the same computation to bring about contiguous access to memory. While the first step reduces the frequency of memory accesses, the second step improves their efficiency. The paper demonstrates the effectiveness of this strategy and shows how to automate it in a production compiler."
            },
            "slug": "Improving-effective-bandwidth-through-compiler-of-Ding-Kennedy",
            "title": {
                "fragments": [],
                "text": "Improving effective bandwidth through compiler enhancement of global cache reuse"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "The potential for addressing bandwidth limitations by increasing global cache reuse is explored-that is, reusing data across whole program and over the entire data collection, in a two-step global strategy."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings 15th International Parallel and Distributed Processing Symposium. IPDPS 2001"
            },
            "year": 2001
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2574060"
                        ],
                        "name": "Christian Szegedy",
                        "slug": "Christian-Szegedy",
                        "structuredName": {
                            "firstName": "Christian",
                            "lastName": "Szegedy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christian Szegedy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2657155"
                        ],
                        "name": "Vincent Vanhoucke",
                        "slug": "Vincent-Vanhoucke",
                        "structuredName": {
                            "firstName": "Vincent",
                            "lastName": "Vanhoucke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vincent Vanhoucke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2054165706"
                        ],
                        "name": "S. Ioffe",
                        "slug": "S.-Ioffe",
                        "structuredName": {
                            "firstName": "Sergey",
                            "lastName": "Ioffe",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Ioffe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1789737"
                        ],
                        "name": "Jonathon Shlens",
                        "slug": "Jonathon-Shlens",
                        "structuredName": {
                            "firstName": "Jonathon",
                            "lastName": "Shlens",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathon Shlens"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3282833"
                        ],
                        "name": "Z. Wojna",
                        "slug": "Z.-Wojna",
                        "structuredName": {
                            "firstName": "Zbigniew",
                            "lastName": "Wojna",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Z. Wojna"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 205,
                                "start": 193
                            }
                        ],
                        "text": "Many current research works mainly focus on dense tensor computations (GEMM and convolution)[6, 12, 34, 39, 47] as dense computations dominate the execution time formany DNN workloads (like CNN[20, 38, 42])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 206593880,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "23ffaa0fe06eae05817f527a47ac3291077f9e58",
            "isKey": false,
            "numCitedBy": 15857,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "Convolutional networks are at the core of most state of-the-art computer vision solutions for a wide variety of tasks. Since 2014 very deep convolutional networks started to become mainstream, yielding substantial gains in various benchmarks. Although increased model size and computational cost tend to translate to immediate quality gains for most tasks (as long as enough labeled data is provided for training), computational efficiency and low parameter count are still enabling factors for various use cases such as mobile vision and big-data scenarios. Here we are exploring ways to scale up networks in ways that aim at utilizing the added computation as efficiently as possible by suitably factorized convolutions and aggressive regularization. We benchmark our methods on the ILSVRC 2012 classification challenge validation set demonstrate substantial gains over the state of the art: 21:2% top-1 and 5:6% top-5 error for single frame evaluation using a network with a computational cost of 5 billion multiply-adds per inference and with using less than 25 million parameters. With an ensemble of 4 models and multi-crop evaluation, we report 3:5% top-5 error and 17:3% top-1 error on the validation set and 3:6% top-5 error on the official test set."
            },
            "slug": "Rethinking-the-Inception-Architecture-for-Computer-Szegedy-Vanhoucke",
            "title": {
                "fragments": [],
                "text": "Rethinking the Inception Architecture for Computer Vision"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This work is exploring ways to scale up networks in ways that aim at utilizing the added computation as efficiently as possible by suitably factorized convolutions and aggressive regularization."
            },
            "venue": {
                "fragments": [],
                "text": "2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2146667356"
                        ],
                        "name": "Junhao Wu",
                        "slug": "Junhao-Wu",
                        "structuredName": {
                            "firstName": "Junhao",
                            "lastName": "Wu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Junhao Wu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3897285"
                        ],
                        "name": "Xuan S. Yang",
                        "slug": "Xuan-S.-Yang",
                        "structuredName": {
                            "firstName": "Xuan",
                            "lastName": "Yang",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xuan S. Yang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "12345396"
                        ],
                        "name": "Zhengrui Zhang",
                        "slug": "Zhengrui-Zhang",
                        "structuredName": {
                            "firstName": "Zhengrui",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhengrui Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "31895061"
                        ],
                        "name": "G. Chen",
                        "slug": "G.-Chen",
                        "structuredName": {
                            "firstName": "Guoliang",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "151498912"
                        ],
                        "name": "Rui Mao",
                        "slug": "Rui-Mao",
                        "structuredName": {
                            "firstName": "Rui",
                            "lastName": "Mao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Rui Mao"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 76
                            }
                        ],
                        "text": "Performance models for GPU and other accelerators is another research topic [15, 25, 30, 52, 54, 55]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 88486983,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "aaa560eccf81a5e1a1d41902f9b0c1235e28f60a",
            "isKey": false,
            "numCitedBy": 6,
            "numCiting": 50,
            "paperAbstract": {
                "fragments": [],
                "text": "Graphics processing units (GPUs) have become extremely important devices for accelerating computing performance in many applications. However, there have been few accurate models to estimate the performance of such applications running on modern GPUs. In this paper, we propose a performance model to estimate the execution times for massively parallel programs running on NVIDIA GPUs, one that takes on-chip resources and cost of data transfer between CPU and GPU into consideration. Four different GPUs with different architectures were used to evaluate our model. We demonstrated the effectiveness of the proposed model by applying it to various tasks in medical image registration. Experiments have demonstrated that by capturing on-chip GPU resources and data transfer time with our model, we were able to obtain a more accurate prediction of the actual running time, compared to the traditional model. Moreover, by using the optimal value of the block size parameter, estimated by our model, to accelerate the landmark tracking task on GPU devices, speedups of approximately 80\u00d7, 100\u00d7, 200\u00d7 and 800\u00d7, on the C2050, K20c, M5000 and P100 can be achieved, making it possible to track massive numbers of landmarks and thereby improving the registration accuracy."
            },
            "slug": "A-Performance-Model-for-GPU-Architectures-that-to-Wu-Yang",
            "title": {
                "fragments": [],
                "text": "A Performance Model for GPU Architectures that Considers On-Chip Resources: Application to Medical Image Registration"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "A performance model to estimate the execution times for massively parallel programs running on NVIDIA GPUs, one that takes on-chip resources and cost of data transfer between CPU and GPU into consideration is proposed."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Parallel and Distributed Systems"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2057642721"
                        ],
                        "name": "Mart\u00edn Abadi",
                        "slug": "Mart\u00edn-Abadi",
                        "structuredName": {
                            "firstName": "Mart\u00edn",
                            "lastName": "Abadi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mart\u00edn Abadi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2078528337"
                        ],
                        "name": "Ashish Agarwal",
                        "slug": "Ashish-Agarwal",
                        "structuredName": {
                            "firstName": "Ashish",
                            "lastName": "Agarwal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ashish Agarwal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144758007"
                        ],
                        "name": "P. Barham",
                        "slug": "P.-Barham",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Barham",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Barham"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2445241"
                        ],
                        "name": "E. Brevdo",
                        "slug": "E.-Brevdo",
                        "structuredName": {
                            "firstName": "Eugene",
                            "lastName": "Brevdo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Brevdo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2545358"
                        ],
                        "name": "Z. Chen",
                        "slug": "Z.-Chen",
                        "structuredName": {
                            "firstName": "Z.",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Z. Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48738717"
                        ],
                        "name": "C. Citro",
                        "slug": "C.-Citro",
                        "structuredName": {
                            "firstName": "Craig",
                            "lastName": "Citro",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Citro"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32131713"
                        ],
                        "name": "G. Corrado",
                        "slug": "G.-Corrado",
                        "structuredName": {
                            "firstName": "Gregory",
                            "lastName": "Corrado",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Corrado"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "36347083"
                        ],
                        "name": "Andy Davis",
                        "slug": "Andy-Davis",
                        "structuredName": {
                            "firstName": "Andy",
                            "lastName": "Davis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andy Davis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49959210"
                        ],
                        "name": "J. Dean",
                        "slug": "J.-Dean",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Dean",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dean"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145139947"
                        ],
                        "name": "Matthieu Devin",
                        "slug": "Matthieu-Devin",
                        "structuredName": {
                            "firstName": "Matthieu",
                            "lastName": "Devin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matthieu Devin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1780892"
                        ],
                        "name": "S. Ghemawat",
                        "slug": "S.-Ghemawat",
                        "structuredName": {
                            "firstName": "Sanjay",
                            "lastName": "Ghemawat",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Ghemawat"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153440022"
                        ],
                        "name": "Ian J. Goodfellow",
                        "slug": "Ian-J.-Goodfellow",
                        "structuredName": {
                            "firstName": "Ian",
                            "lastName": "Goodfellow",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ian J. Goodfellow"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064102917"
                        ],
                        "name": "A. Harp",
                        "slug": "A.-Harp",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Harp",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Harp"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060655766"
                        ],
                        "name": "Geoffrey Irving",
                        "slug": "Geoffrey-Irving",
                        "structuredName": {
                            "firstName": "Geoffrey",
                            "lastName": "Irving",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Geoffrey Irving"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2090818"
                        ],
                        "name": "M. Isard",
                        "slug": "M.-Isard",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Isard",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Isard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39978391"
                        ],
                        "name": "Yangqing Jia",
                        "slug": "Yangqing-Jia",
                        "structuredName": {
                            "firstName": "Yangqing",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yangqing Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1944541"
                        ],
                        "name": "R. J\u00f3zefowicz",
                        "slug": "R.-J\u00f3zefowicz",
                        "structuredName": {
                            "firstName": "Rafal",
                            "lastName": "J\u00f3zefowicz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. J\u00f3zefowicz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40527594"
                        ],
                        "name": "Lukasz Kaiser",
                        "slug": "Lukasz-Kaiser",
                        "structuredName": {
                            "firstName": "Lukasz",
                            "lastName": "Kaiser",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lukasz Kaiser"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1942300"
                        ],
                        "name": "M. Kudlur",
                        "slug": "M.-Kudlur",
                        "structuredName": {
                            "firstName": "Manjunath",
                            "lastName": "Kudlur",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Kudlur"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3369421"
                        ],
                        "name": "J. Levenberg",
                        "slug": "J.-Levenberg",
                        "structuredName": {
                            "firstName": "Josh",
                            "lastName": "Levenberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Levenberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "30415265"
                        ],
                        "name": "Dandelion Man\u00e9",
                        "slug": "Dandelion-Man\u00e9",
                        "structuredName": {
                            "firstName": "Dandelion",
                            "lastName": "Man\u00e9",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dandelion Man\u00e9"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3089272"
                        ],
                        "name": "R. Monga",
                        "slug": "R.-Monga",
                        "structuredName": {
                            "firstName": "Rajat",
                            "lastName": "Monga",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Monga"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144375552"
                        ],
                        "name": "Sherry Moore",
                        "slug": "Sherry-Moore",
                        "structuredName": {
                            "firstName": "Sherry",
                            "lastName": "Moore",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sherry Moore"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "20154699"
                        ],
                        "name": "D. Murray",
                        "slug": "D.-Murray",
                        "structuredName": {
                            "firstName": "Derek",
                            "lastName": "Murray",
                            "middleNames": [
                                "Gordon"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Murray"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37232298"
                        ],
                        "name": "C. Olah",
                        "slug": "C.-Olah",
                        "structuredName": {
                            "firstName": "Christopher",
                            "lastName": "Olah",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Olah"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144927151"
                        ],
                        "name": "M. Schuster",
                        "slug": "M.-Schuster",
                        "structuredName": {
                            "firstName": "Mike",
                            "lastName": "Schuster",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Schuster"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1789737"
                        ],
                        "name": "Jonathon Shlens",
                        "slug": "Jonathon-Shlens",
                        "structuredName": {
                            "firstName": "Jonathon",
                            "lastName": "Shlens",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathon Shlens"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32163737"
                        ],
                        "name": "Benoit Steiner",
                        "slug": "Benoit-Steiner",
                        "structuredName": {
                            "firstName": "Benoit",
                            "lastName": "Steiner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Benoit Steiner"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1701686"
                        ],
                        "name": "Ilya Sutskever",
                        "slug": "Ilya-Sutskever",
                        "structuredName": {
                            "firstName": "Ilya",
                            "lastName": "Sutskever",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ilya Sutskever"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35210462"
                        ],
                        "name": "Kunal Talwar",
                        "slug": "Kunal-Talwar",
                        "structuredName": {
                            "firstName": "Kunal",
                            "lastName": "Talwar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kunal Talwar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2080690"
                        ],
                        "name": "P. Tucker",
                        "slug": "P.-Tucker",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Tucker",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Tucker"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2657155"
                        ],
                        "name": "Vincent Vanhoucke",
                        "slug": "Vincent-Vanhoucke",
                        "structuredName": {
                            "firstName": "Vincent",
                            "lastName": "Vanhoucke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vincent Vanhoucke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2053781980"
                        ],
                        "name": "Vijay Vasudevan",
                        "slug": "Vijay-Vasudevan",
                        "structuredName": {
                            "firstName": "Vijay",
                            "lastName": "Vasudevan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vijay Vasudevan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1765169"
                        ],
                        "name": "F. Vi\u00e9gas",
                        "slug": "F.-Vi\u00e9gas",
                        "structuredName": {
                            "firstName": "Fernanda",
                            "lastName": "Vi\u00e9gas",
                            "middleNames": [
                                "B."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Vi\u00e9gas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1689108"
                        ],
                        "name": "Oriol Vinyals",
                        "slug": "Oriol-Vinyals",
                        "structuredName": {
                            "firstName": "Oriol",
                            "lastName": "Vinyals",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Oriol Vinyals"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47941411"
                        ],
                        "name": "P. Warden",
                        "slug": "P.-Warden",
                        "structuredName": {
                            "firstName": "Pete",
                            "lastName": "Warden",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Warden"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145233583"
                        ],
                        "name": "M. Wattenberg",
                        "slug": "M.-Wattenberg",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Wattenberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Wattenberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35078078"
                        ],
                        "name": "M. Wicke",
                        "slug": "M.-Wicke",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Wicke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Wicke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2117163698"
                        ],
                        "name": "Yuan Yu",
                        "slug": "Yuan-Yu",
                        "structuredName": {
                            "firstName": "Yuan",
                            "lastName": "Yu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuan Yu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2152198093"
                        ],
                        "name": "Xiaoqiang Zheng",
                        "slug": "Xiaoqiang-Zheng",
                        "structuredName": {
                            "firstName": "Xiaoqiang",
                            "lastName": "Zheng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xiaoqiang Zheng"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 133,
                                "start": 130
                            }
                        ],
                        "text": "Suchworkloads are typically expressed as computation graphs, and mapped to hardware through domain specific frameworks (TensorFlow[2], PyTorch[1], MXNet[11], etc)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 5707386,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "9c9d7247f8c51ec5a02b0d911d1d7b9e8160495d",
            "isKey": false,
            "numCitedBy": 9255,
            "numCiting": 70,
            "paperAbstract": {
                "fragments": [],
                "text": "TensorFlow is an interface for expressing machine learning algorithms, and an implementation for executing such algorithms. A computation expressed using TensorFlow can be executed with little or no change on a wide variety of heterogeneous systems, ranging from mobile devices such as phones and tablets up to large-scale distributed systems of hundreds of machines and thousands of computational devices such as GPU cards. The system is flexible and can be used to express a wide variety of algorithms, including training and inference algorithms for deep neural network models, and it has been used for conducting research and for deploying machine learning systems into production across more than a dozen areas of computer science and other fields, including speech recognition, computer vision, robotics, information retrieval, natural language processing, geographic information extraction, and computational drug discovery. This paper describes the TensorFlow interface and an implementation of that interface that we have built at Google. The TensorFlow API and a reference implementation were released as an open-source package under the Apache 2.0 license in November, 2015 and are available at www.tensorflow.org."
            },
            "slug": "TensorFlow:-Large-Scale-Machine-Learning-on-Systems-Abadi-Agarwal",
            "title": {
                "fragments": [],
                "text": "TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "The TensorFlow interface and an implementation of that interface that is built at Google are described, which has been used for conducting research and for deploying machine learning systems into production across more than a dozen areas of computer science and other fields."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40348417"
                        ],
                        "name": "Ashish Vaswani",
                        "slug": "Ashish-Vaswani",
                        "structuredName": {
                            "firstName": "Ashish",
                            "lastName": "Vaswani",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ashish Vaswani"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1846258"
                        ],
                        "name": "Noam M. Shazeer",
                        "slug": "Noam-M.-Shazeer",
                        "structuredName": {
                            "firstName": "Noam",
                            "lastName": "Shazeer",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Noam M. Shazeer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3877127"
                        ],
                        "name": "Niki Parmar",
                        "slug": "Niki-Parmar",
                        "structuredName": {
                            "firstName": "Niki",
                            "lastName": "Parmar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Niki Parmar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39328010"
                        ],
                        "name": "Jakob Uszkoreit",
                        "slug": "Jakob-Uszkoreit",
                        "structuredName": {
                            "firstName": "Jakob",
                            "lastName": "Uszkoreit",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jakob Uszkoreit"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145024664"
                        ],
                        "name": "Llion Jones",
                        "slug": "Llion-Jones",
                        "structuredName": {
                            "firstName": "Llion",
                            "lastName": "Jones",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Llion Jones"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "19177000"
                        ],
                        "name": "Aidan N. Gomez",
                        "slug": "Aidan-N.-Gomez",
                        "structuredName": {
                            "firstName": "Aidan",
                            "lastName": "Gomez",
                            "middleNames": [
                                "N."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Aidan N. Gomez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40527594"
                        ],
                        "name": "Lukasz Kaiser",
                        "slug": "Lukasz-Kaiser",
                        "structuredName": {
                            "firstName": "Lukasz",
                            "lastName": "Kaiser",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lukasz Kaiser"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3443442"
                        ],
                        "name": "Illia Polosukhin",
                        "slug": "Illia-Polosukhin",
                        "structuredName": {
                            "firstName": "Illia",
                            "lastName": "Polosukhin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Illia Polosukhin"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 88,
                                "start": 84
                            }
                        ],
                        "text": "These applications range from images (CRNN [37]), speech (ASR[53]), NLP (Transformer[48], BERT [16]), to internet scale E-commerce search and recommendation systems (DIEN [58])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 13756489,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
            "isKey": false,
            "numCitedBy": 36491,
            "numCiting": 44,
            "paperAbstract": {
                "fragments": [],
                "text": "The dominant sequence transduction models are based on complex recurrent or convolutional neural networks in an encoder-decoder configuration. The best performing models also connect the encoder and decoder through an attention mechanism. We propose a new simple network architecture, the Transformer, based solely on attention mechanisms, dispensing with recurrence and convolutions entirely. Experiments on two machine translation tasks show these models to be superior in quality while being more parallelizable and requiring significantly less time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-to-German translation task, improving over the existing best results, including ensembles by over 2 BLEU. On the WMT 2014 English-to-French translation task, our model establishes a new single-model state-of-the-art BLEU score of 41.8 after training for 3.5 days on eight GPUs, a small fraction of the training costs of the best models from the literature. We show that the Transformer generalizes well to other tasks by applying it successfully to English constituency parsing both with large and limited training data."
            },
            "slug": "Attention-is-All-you-Need-Vaswani-Shazeer",
            "title": {
                "fragments": [],
                "text": "Attention is All you Need"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "A new simple network architecture, the Transformer, based solely on attention mechanisms, dispensing with recurrence and convolutions entirely is proposed, which generalizes well to other tasks by applying it successfully to English constituency parsing both with large and limited training data."
            },
            "venue": {
                "fragments": [],
                "text": "NIPS"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2072782550"
                        ],
                        "name": "Zhihao Jia",
                        "slug": "Zhihao-Jia",
                        "structuredName": {
                            "firstName": "Zhihao",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhihao Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110226192"
                        ],
                        "name": "James J. Thomas",
                        "slug": "James-J.-Thomas",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Thomas",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "James J. Thomas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2155642"
                        ],
                        "name": "Todd Warszawski",
                        "slug": "Todd-Warszawski",
                        "structuredName": {
                            "firstName": "Todd",
                            "lastName": "Warszawski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Todd Warszawski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2092402029"
                        ],
                        "name": "Mingyu Gao",
                        "slug": "Mingyu-Gao",
                        "structuredName": {
                            "firstName": "Mingyu",
                            "lastName": "Gao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mingyu Gao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143834867"
                        ],
                        "name": "M. Zaharia",
                        "slug": "M.-Zaharia",
                        "structuredName": {
                            "firstName": "Matei",
                            "lastName": "Zaharia",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Zaharia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144653825"
                        ],
                        "name": "A. Aiken",
                        "slug": "A.-Aiken",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Aiken",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Aiken"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 10,
                                "start": 2
                            }
                        ],
                        "text": "al[23, 24] explores graph substitutions to optimize the graph with equivalent transformation."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 102345141,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a226e7dc70c9902fa57b987f8fee78b04052c954",
            "isKey": false,
            "numCitedBy": 39,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": "Existing deep learning frameworks optimize the computation graph of a DNN model by performing greedy rule-based graph transformations, which generally only consider transformations that strictly improve runtime performance. We propose relaxed graph substitutions that enable the exploration of complex graph optimizations by relaxing the strict performance improvement constraint, which greatly increases the space of semantically equivalent computation graphs that can be discovered by repeated application of a suitable set of graph transformations. We introduce a backtracking search algorithm over a set of relaxed graph substitutions to find optimized networks and use a flow-based graph split algorithm to recursively split a computation graph into smaller subgraphs to allow efficient search. We implement relaxed graph substitutions in a system called MetaFlow and show that MetaFlow improves the inference and training performance by 1.1-1.6\u00d7 and 1.1-1.2\u00d7 respectively over existing deep learning frameworks."
            },
            "slug": "Optimizing-DNN-Computation-with-Relaxed-Graph-Jia-Thomas",
            "title": {
                "fragments": [],
                "text": "Optimizing DNN Computation with Relaxed Graph Substitutions"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "A backtracking search algorithm is introduced over a set of relaxed graph substitutions to find optimized networks and a flow-based graph split algorithm is used to recursively split a computation graph into smaller subgraphs to allow efficient search."
            },
            "venue": {
                "fragments": [],
                "text": "MLSys"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144616193"
                        ],
                        "name": "R. Allen",
                        "slug": "R.-Allen",
                        "structuredName": {
                            "firstName": "Randy",
                            "lastName": "Allen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Allen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "70455556"
                        ],
                        "name": "K. Kennedy",
                        "slug": "K.-Kennedy",
                        "structuredName": {
                            "firstName": "Ken",
                            "lastName": "Kennedy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Kennedy"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 71,
                                "start": 60
                            }
                        ],
                        "text": "GPUkernel fusion, inspired from classical loop optimizations[5, 18, 19], is known to boost performance in many application domains."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 74,
                                "start": 67
                            }
                        ],
                        "text": "To reduce control flow overhead, we perform aggressive loop fusion [5, 19] to merge as many element-wise ops as possible into a single loop structure when these ops have the same parallelism dimension."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 43779902,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "9dc9f86fb3116acf723f4404dcdf279fe322f01f",
            "isKey": false,
            "numCitedBy": 1104,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Modern computer architectures designed with high-performance microprocessors offer tremendous potential gains in performance over previous designs. Yet their very complexity makes it increasingly difficult to produce efficient code and to realize their full potential. This landmark text from two leaders in the field focuses on the pivotal role that compilers can play in addressing this critical issue. The basis for all the methods presented in this book is data dependence, a fundamental compiler analysis tool for optimizing programs on high-performance microprocessors and parallel architectures. It enables compiler designers to write compilers that automatically transform simple, sequential programs into forms that can exploit special features of these modern architectures. The text provides a broad introduction to data dependence, to the many transformation strategies it supports, and to its applications to important optimization problems such as parallelization, compiler memory hierarchy management, and instruction scheduling. The authors demonstrate the importance and wide applicability of dependence-based compiler optimizations and give the compiler writer the basics needed to understand and implement them. They also offer cookbook explanations for transforming applications by hand to computational scientists and engineers who are driven to obtain the best possible performance of their complex applications."
            },
            "slug": "Optimizing-Compilers-for-Modern-Architectures:-A-Allen-Kennedy",
            "title": {
                "fragments": [],
                "text": "Optimizing Compilers for Modern Architectures: A Dependence-based Approach"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "A broad introduction to data dependence, to the many transformation strategies it supports, and to its applications to important optimization problems such as parallelization, compiler memory hierarchy management, and instruction scheduling are provided."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2001
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1758245"
                        ],
                        "name": "Riyadh Baghdadi",
                        "slug": "Riyadh-Baghdadi",
                        "structuredName": {
                            "firstName": "Riyadh",
                            "lastName": "Baghdadi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Riyadh Baghdadi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "4875117"
                        ],
                        "name": "Jessica Ray",
                        "slug": "Jessica-Ray",
                        "structuredName": {
                            "firstName": "Jessica",
                            "lastName": "Ray",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jessica Ray"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40899986"
                        ],
                        "name": "Malek Ben Romdhane",
                        "slug": "Malek-Ben-Romdhane",
                        "structuredName": {
                            "firstName": "Malek",
                            "lastName": "Romdhane",
                            "middleNames": [
                                "Ben"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Malek Ben Romdhane"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3436746"
                        ],
                        "name": "Emanuele Del Sozzo",
                        "slug": "Emanuele-Del-Sozzo",
                        "structuredName": {
                            "firstName": "Emanuele",
                            "lastName": "Sozzo",
                            "middleNames": [
                                "Del"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Emanuele Del Sozzo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8844033"
                        ],
                        "name": "Patricia Suriana",
                        "slug": "Patricia-Suriana",
                        "structuredName": {
                            "firstName": "Patricia",
                            "lastName": "Suriana",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Patricia Suriana"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060643"
                        ],
                        "name": "Abdurrahman Akkas",
                        "slug": "Abdurrahman-Akkas",
                        "structuredName": {
                            "firstName": "Abdurrahman",
                            "lastName": "Akkas",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Abdurrahman Akkas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145683292"
                        ],
                        "name": "S. Kamil",
                        "slug": "S.-Kamil",
                        "structuredName": {
                            "firstName": "Shoaib",
                            "lastName": "Kamil",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kamil"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "11860259"
                        ],
                        "name": "Yunming Zhang",
                        "slug": "Yunming-Zhang",
                        "structuredName": {
                            "firstName": "Yunming",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yunming Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 52832097,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "82f3c1b67e1af9a1c8ee12e55a5d51ce7f1b212f",
            "isKey": false,
            "numCitedBy": 1,
            "numCiting": 36,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper introduces Tiramisu, a polyhedral framework designed to generate high performance code formultiple platforms including multicores, GPUs, and distributed machines. Tiramisu introduces a scheduling language with novel extensions to explicitly manage the complexities that arise when targeting these systems. The extensions include explicit communication, synchronization, and mapping buffers to different memory hierarchies. Tiramisu relies on a flexible representation based on the polyhedral model and explicitly uses a well-defined four-level IR that allows full separation between the algorithms, loop transformations, data-layouts, and communication. This separation simplifies targeting multiple hardware architectures with the same algorithm. We evaluate Tiramisu by writing a set of image processing and stencil benchmarks and compare it with state-of-the-art compilers. We show that Tiramisu matches or outperforms existing compilers on different hardware architectures, including multicore CPUs, GPUs, and distributed machines."
            },
            "slug": "Tiramisu-:-A-Polyhedral-Compiler-with-A-Scheduling-Baghdadi-Ray",
            "title": {
                "fragments": [],
                "text": "Tiramisu : A Polyhedral Compiler with A Scheduling Language for Targeting High Performance Systems Riyadh"
            },
            "tldr": {
                "abstractSimilarityScore": 77,
                "text": "Tiramisu is introduced, a polyhedral framework designed to generate high performance code formultiple platforms including multicores, GPUs, and distributed machines, with novel extensions to explicitly manage the complexities that arise when targeting these systems."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2072782550"
                        ],
                        "name": "Zhihao Jia",
                        "slug": "Zhihao-Jia",
                        "structuredName": {
                            "firstName": "Zhihao",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhihao Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2381030"
                        ],
                        "name": "Oded Padon",
                        "slug": "Oded-Padon",
                        "structuredName": {
                            "firstName": "Oded",
                            "lastName": "Padon",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Oded Padon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110226192"
                        ],
                        "name": "James J. Thomas",
                        "slug": "James-J.-Thomas",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Thomas",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "James J. Thomas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2155642"
                        ],
                        "name": "Todd Warszawski",
                        "slug": "Todd-Warszawski",
                        "structuredName": {
                            "firstName": "Todd",
                            "lastName": "Warszawski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Todd Warszawski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143834867"
                        ],
                        "name": "M. Zaharia",
                        "slug": "M.-Zaharia",
                        "structuredName": {
                            "firstName": "Matei",
                            "lastName": "Zaharia",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Zaharia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144653825"
                        ],
                        "name": "A. Aiken",
                        "slug": "A.-Aiken",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Aiken",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Aiken"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 10,
                                "start": 2
                            }
                        ],
                        "text": "al[23, 24] explores graph substitutions to optimize the graph with equivalent transformation."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 202726856,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "80b362efee95c1759c6dab9219eb77ca3ee44475",
            "isKey": false,
            "numCitedBy": 122,
            "numCiting": 41,
            "paperAbstract": {
                "fragments": [],
                "text": "Existing deep neural network (DNN) frameworks optimize the computation graph of a DNN by applying graph transformations manually designed by human experts. This approach misses possible graph optimizations and is difficult to scale, as new DNN operators are introduced on a regular basis. We propose TASO, the first DNN computation graph optimizer that automatically generates graph substitutions. TASO takes as input a list of operator specifications and generates candidate substitutions using the given operators as basic building blocks. All generated substitutions are formally verified against the operator specifications using an automated theorem prover. To optimize a given DNN computation graph, TASO performs a cost-based backtracking search, applying the substitutions to find an optimized graph, which can be directly used by existing DNN frameworks. Our evaluation on five real-world DNN architectures shows that TASO outperforms existing DNN frameworks by up to 2.8X, while requiring significantly less human effort. For example, TensorFlow currently contains approximately 53,000 lines of manual optimization rules, while the operator specifications needed by TASO are only 1,400 lines of code."
            },
            "slug": "TASO:-optimizing-deep-learning-computation-with-of-Jia-Padon",
            "title": {
                "fragments": [],
                "text": "TASO: optimizing deep learning computation with automatic generation of graph substitutions"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "TASO is proposed, the first DNN computation graph optimizer that automatically generates graph substitutions, and shows that TASO outperforms existing DNN frameworks by up to 2.8X, while requiring significantly less human effort."
            },
            "venue": {
                "fragments": [],
                "text": "SOSP"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144917697"
                        ],
                        "name": "G. Gao",
                        "slug": "G.-Gao",
                        "structuredName": {
                            "firstName": "Guang",
                            "lastName": "Gao",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Gao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47617625"
                        ],
                        "name": "R. Olsen",
                        "slug": "R.-Olsen",
                        "structuredName": {
                            "firstName": "R.",
                            "lastName": "Olsen",
                            "middleNames": [],
                            "suffix": ""
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Olsen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1728219"
                        ],
                        "name": "Vivek Sarkar",
                        "slug": "Vivek-Sarkar",
                        "structuredName": {
                            "firstName": "Vivek",
                            "lastName": "Sarkar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vivek Sarkar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2849890"
                        ],
                        "name": "R. Thekkath",
                        "slug": "R.-Thekkath",
                        "structuredName": {
                            "firstName": "Radhika",
                            "lastName": "Thekkath",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Thekkath"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 71,
                                "start": 60
                            }
                        ],
                        "text": "GPUkernel fusion, inspired from classical loop optimizations[5, 18, 19], is known to boost performance in many application domains."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 74,
                                "start": 67
                            }
                        ],
                        "text": "To reduce control flow overhead, we perform aggressive loop fusion [5, 19] to merge as many element-wise ops as possible into a single loop structure when these ops have the same parallelism dimension."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 206638009,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "623d38e327221c52579b906adc21b2a3a706b651",
            "isKey": false,
            "numCitedBy": 140,
            "numCiting": 17,
            "paperAbstract": {
                "fragments": [],
                "text": "In this paper we propose a loop fusion algorithm specifically designed to increase opportunities for array contraction. Array contraction is an optimization that transforms array variables into scalar variables within a loop nest. In contrast to array elements, scalar variables have better cache behavior and can be allocated to registers. In past work we investigated loop interchange and loop reversal as optimizations that increase opportunities for array contraction [13]. This paper extends this work by including the loop fusion optimization. The fusion method discussed in this paper uses the maxflow-mincut algorithm to do loop clustering. Our collective loop fusion algorithm is efficient, and we demonstrate its usefulness for array contraction with a simple example."
            },
            "slug": "Collective-Loop-Fusion-for-Array-Contraction-Gao-Olsen",
            "title": {
                "fragments": [],
                "text": "Collective Loop Fusion for Array Contraction"
            },
            "tldr": {
                "abstractSimilarityScore": 50,
                "text": "The fusion method discussed in this paper uses the maxflow-mincut algorithm to do loop clustering and is efficient, and its usefulness for array contraction is demonstrated with a simple example."
            },
            "venue": {
                "fragments": [],
                "text": "LCPC"
            },
            "year": 1992
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39353098"
                        ],
                        "name": "Kaiming He",
                        "slug": "Kaiming-He",
                        "structuredName": {
                            "firstName": "Kaiming",
                            "lastName": "He",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kaiming He"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1771551"
                        ],
                        "name": "X. Zhang",
                        "slug": "X.-Zhang",
                        "structuredName": {
                            "firstName": "X.",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "X. Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3080683"
                        ],
                        "name": "Shaoqing Ren",
                        "slug": "Shaoqing-Ren",
                        "structuredName": {
                            "firstName": "Shaoqing",
                            "lastName": "Ren",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shaoqing Ren"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [],
                        "name": "Jian Sun",
                        "slug": "Jian-Sun",
                        "structuredName": {
                            "firstName": "Jian",
                            "lastName": "Sun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jian Sun"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 205,
                                "start": 193
                            }
                        ],
                        "text": "Many current research works mainly focus on dense tensor computations (GEMM and convolution)[6, 12, 34, 39, 47] as dense computations dominate the execution time formany DNN workloads (like CNN[20, 38, 42])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 206594692,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
            "isKey": false,
            "numCitedBy": 97653,
            "numCiting": 61,
            "paperAbstract": {
                "fragments": [],
                "text": "Deeper neural networks are more difficult to train. We present a residual learning framework to ease the training of networks that are substantially deeper than those used previously. We explicitly reformulate the layers as learning residual functions with reference to the layer inputs, instead of learning unreferenced functions. We provide comprehensive empirical evidence showing that these residual networks are easier to optimize, and can gain accuracy from considerably increased depth. On the ImageNet dataset we evaluate residual nets with a depth of up to 152 layers - 8\u00d7 deeper than VGG nets [40] but still having lower complexity. An ensemble of these residual nets achieves 3.57% error on the ImageNet test set. This result won the 1st place on the ILSVRC 2015 classification task. We also present analysis on CIFAR-10 with 100 and 1000 layers. The depth of representations is of central importance for many visual recognition tasks. Solely due to our extremely deep representations, we obtain a 28% relative improvement on the COCO object detection dataset. Deep residual nets are foundations of our submissions to ILSVRC & COCO 2015 competitions1, where we also won the 1st places on the tasks of ImageNet detection, ImageNet localization, COCO detection, and COCO segmentation."
            },
            "slug": "Deep-Residual-Learning-for-Image-Recognition-He-Zhang",
            "title": {
                "fragments": [],
                "text": "Deep Residual Learning for Image Recognition"
            },
            "tldr": {
                "abstractSimilarityScore": 63,
                "text": "This work presents a residual learning framework to ease the training of networks that are substantially deeper than those used previously, and provides comprehensive empirical evidence showing that these residual networks are easier to optimize, and can gain accuracy from considerably increased depth."
            },
            "venue": {
                "fragments": [],
                "text": "2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48813086"
                        ],
                        "name": "Zhe Jia",
                        "slug": "Zhe-Jia",
                        "structuredName": {
                            "firstName": "Zhe",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhe Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "138304679"
                        ],
                        "name": "Marco Maggioni",
                        "slug": "Marco-Maggioni",
                        "structuredName": {
                            "firstName": "Marco",
                            "lastName": "Maggioni",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Marco Maggioni"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064282343"
                        ],
                        "name": "Benjamin Staiger",
                        "slug": "Benjamin-Staiger",
                        "structuredName": {
                            "firstName": "Benjamin",
                            "lastName": "Staiger",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Benjamin Staiger"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3277273"
                        ],
                        "name": "D. Scarpazza",
                        "slug": "D.-Scarpazza",
                        "structuredName": {
                            "firstName": "Daniele",
                            "lastName": "Scarpazza",
                            "middleNames": [
                                "Paolo"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Scarpazza"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 55,
                                "start": 47
                            }
                        ],
                        "text": "As for Lwarp , we use the reported CPI numbers [21, 22] and multiply it with the total instruction count (Ninstruction ) we estimated."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 4930164,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0e5d529befc3ca2e3e3371a0c39dc05731c1d5b7",
            "isKey": false,
            "numCitedBy": 181,
            "numCiting": 12,
            "paperAbstract": {
                "fragments": [],
                "text": "Every year, novel NVIDIA GPU designs are introduced. This rapid architectural and technological progression, coupled with a reluctance by manufacturers to disclose low-level details, makes it difficult for even the most proficient GPU software designers to remain up-to-date with the technological advances at a microarchitectural level. To address this dearth of public, microarchitectural-level information on the novel NVIDIA GPUs, independent researchers have resorted to microbenchmarks-based dissection and discovery. This has led to a prolific line of publications that shed light on instruction encoding, and memory hierarchy's geometry and features at each level. Namely, research that describes the performance and behavior of the Kepler, Maxwell and Pascal architectures. In this technical report, we continue this line of research by presenting the microarchitectural details of the NVIDIA Volta architecture, discovered through microbenchmarks and instruction set disassembly. Additionally, we compare quantitatively our Volta findings against its predecessors, Kepler, Maxwell and Pascal."
            },
            "slug": "Dissecting-the-NVIDIA-Volta-GPU-Architecture-via-Jia-Maggioni",
            "title": {
                "fragments": [],
                "text": "Dissecting the NVIDIA Volta GPU Architecture via Microbenchmarking"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This technical report presents the microarchitectural details of the NVIDIA Volta architecture, discovered through microbenchmarks and instruction set disassembly, and compares quantitatively the findings against its predecessors, Kepler, Maxwell and Pascal."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8791785"
                        ],
                        "name": "Daniele G. Spampinato",
                        "slug": "Daniele-G.-Spampinato",
                        "structuredName": {
                            "firstName": "Daniele",
                            "lastName": "Spampinato",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daniele G. Spampinato"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401568417"
                        ],
                        "name": "Diego Fabregat-Traver",
                        "slug": "Diego-Fabregat-Traver",
                        "structuredName": {
                            "firstName": "Diego",
                            "lastName": "Fabregat-Traver",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Diego Fabregat-Traver"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1766804"
                        ],
                        "name": "P. Bientinesi",
                        "slug": "P.-Bientinesi",
                        "structuredName": {
                            "firstName": "Paolo",
                            "lastName": "Bientinesi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Bientinesi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "79639302"
                        ],
                        "name": "Markus P\u00fcschel",
                        "slug": "Markus-P\u00fcschel",
                        "structuredName": {
                            "firstName": "Markus",
                            "lastName": "P\u00fcschel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Markus P\u00fcschel"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 11,
                                "start": 7
                            }
                        ],
                        "text": "SLINGEN[41] is another DSL system which takes mathematical specifications and generates optimized C functions for linear algebra operators."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 3379231,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dd98edd7c176fc9f301e18e84048c0fccccb8e0d",
            "isKey": false,
            "numCitedBy": 26,
            "numCiting": 44,
            "paperAbstract": {
                "fragments": [],
                "text": "We present SLinGen, a program generation system for linear algebra. The input to SLinGen is an application expressed mathematically in a linear-algebra-inspired language (LA) that we define. LA provides basic scalar/vector/matrix additions/multiplications and higher level operations including linear systems solvers, Cholesky and LU factorizations. The output of SLinGen is performance-optimized single-source C code, optionally vectorized with intrinsics. The target of SLinGen are small-scale computations on fixed-size operands, for which a straightforward implementation using optimized libraries (e.g., BLAS or LAPACK) is known to yield suboptimal performance (besides increasing code size and introducing dependencies), but which are crucial in control, signal processing, computer vision, and other domains. Internally, SLinGen uses synthesis and DSL-based techniques to optimize at a high level of abstraction. We benchmark our program generator on three prototypical applications: the Kalman filter, Gaussian process regression, and an L1-analysis convex solver, as well as basic routines including Cholesky factorization and solvers for the continuous-time Lyapunov and Sylvester equations. The results show significant speed-ups compared to straightforward C with Intel icc and clang with a polyhedral optimizer, as well as library-based and template-based implementations."
            },
            "slug": "Program-generation-for-small-scale-linear-algebra-Spampinato-Fabregat-Traver",
            "title": {
                "fragments": [],
                "text": "Program generation for small-scale linear algebra applications"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "The target of SLinGen are small-scale computations on fixed-size operands, for which a straightforward implementation using optimized libraries is known to yield suboptimal performance, but which are crucial in control, signal processing, computer vision, and other domains."
            },
            "venue": {
                "fragments": [],
                "text": "CGO"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39172707"
                        ],
                        "name": "Jacob Devlin",
                        "slug": "Jacob-Devlin",
                        "structuredName": {
                            "firstName": "Jacob",
                            "lastName": "Devlin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jacob Devlin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1744179"
                        ],
                        "name": "Ming-Wei Chang",
                        "slug": "Ming-Wei-Chang",
                        "structuredName": {
                            "firstName": "Ming-Wei",
                            "lastName": "Chang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ming-Wei Chang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2544107"
                        ],
                        "name": "Kenton Lee",
                        "slug": "Kenton-Lee",
                        "structuredName": {
                            "firstName": "Kenton",
                            "lastName": "Lee",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kenton Lee"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3259253"
                        ],
                        "name": "Kristina Toutanova",
                        "slug": "Kristina-Toutanova",
                        "structuredName": {
                            "firstName": "Kristina",
                            "lastName": "Toutanova",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kristina Toutanova"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 99,
                                "start": 95
                            }
                        ],
                        "text": "These applications range from images (CRNN [37]), speech (ASR[53]), NLP (Transformer[48], BERT [16]), to internet scale E-commerce search and recommendation systems (DIEN [58])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 164,
                                "start": 160
                            }
                        ],
                        "text": "As a result, the scheduling and pre-/postprocessing time on CPU introduced by the machine learning framework dominants the execution time for some models (like BERT inference, DIEN, ASR and CRNN )."
                    },
                    "intents": []
                }
            ],
            "corpusId": 52967399,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "df2b0e26d0599ce3e70df8a9da02e51594e0e992",
            "isKey": false,
            "numCitedBy": 35052,
            "numCiting": 60,
            "paperAbstract": {
                "fragments": [],
                "text": "We introduce a new language representation model called BERT, which stands for Bidirectional Encoder Representations from Transformers. Unlike recent language representation models (Peters et al., 2018a; Radford et al., 2018), BERT is designed to pre-train deep bidirectional representations from unlabeled text by jointly conditioning on both left and right context in all layers. As a result, the pre-trained BERT model can be fine-tuned with just one additional output layer to create state-of-the-art models for a wide range of tasks, such as question answering and language inference, without substantial task-specific architecture modifications. BERT is conceptually simple and empirically powerful. It obtains new state-of-the-art results on eleven natural language processing tasks, including pushing the GLUE score to 80.5 (7.7 point absolute improvement), MultiNLI accuracy to 86.7% (4.6% absolute improvement), SQuAD v1.1 question answering Test F1 to 93.2 (1.5 point absolute improvement) and SQuAD v2.0 Test F1 to 83.1 (5.1 point absolute improvement)."
            },
            "slug": "BERT:-Pre-training-of-Deep-Bidirectional-for-Devlin-Chang",
            "title": {
                "fragments": [],
                "text": "BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding"
            },
            "tldr": {
                "abstractSimilarityScore": 52,
                "text": "A new language representation model, BERT, designed to pre-train deep bidirectional representations from unlabeled text by jointly conditioning on both left and right context in all layers, which can be fine-tuned with just one additional output layer to create state-of-the-art models for a wide range of tasks."
            },
            "venue": {
                "fragments": [],
                "text": "NAACL"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34838386"
                        ],
                        "name": "K. Simonyan",
                        "slug": "K.-Simonyan",
                        "structuredName": {
                            "firstName": "Karen",
                            "lastName": "Simonyan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Simonyan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1688869"
                        ],
                        "name": "Andrew Zisserman",
                        "slug": "Andrew-Zisserman",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Zisserman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Zisserman"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 205,
                                "start": 193
                            }
                        ],
                        "text": "Many current research works mainly focus on dense tensor computations (GEMM and convolution)[6, 12, 34, 39, 47] as dense computations dominate the execution time formany DNN workloads (like CNN[20, 38, 42])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 14124313,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "eb42cf88027de515750f230b23b1a057dc782108",
            "isKey": false,
            "numCitedBy": 63195,
            "numCiting": 57,
            "paperAbstract": {
                "fragments": [],
                "text": "In this work we investigate the effect of the convolutional network depth on its accuracy in the large-scale image recognition setting. Our main contribution is a thorough evaluation of networks of increasing depth using an architecture with very small (3x3) convolution filters, which shows that a significant improvement on the prior-art configurations can be achieved by pushing the depth to 16-19 weight layers. These findings were the basis of our ImageNet Challenge 2014 submission, where our team secured the first and the second places in the localisation and classification tracks respectively. We also show that our representations generalise well to other datasets, where they achieve state-of-the-art results. We have made our two best-performing ConvNet models publicly available to facilitate further research on the use of deep visual representations in computer vision."
            },
            "slug": "Very-Deep-Convolutional-Networks-for-Large-Scale-Simonyan-Zisserman",
            "title": {
                "fragments": [],
                "text": "Very Deep Convolutional Networks for Large-Scale Image Recognition"
            },
            "tldr": {
                "abstractSimilarityScore": 73,
                "text": "This work investigates the effect of the convolutional network depth on its accuracy in the large-scale image recognition setting using an architecture with very small convolution filters, which shows that a significant improvement on the prior-art configurations can be achieved by pushing the depth to 16-19 weight layers."
            },
            "venue": {
                "fragments": [],
                "text": "ICLR"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35066946"
                        ],
                        "name": "Guorui Zhou",
                        "slug": "Guorui-Zhou",
                        "structuredName": {
                            "firstName": "Guorui",
                            "lastName": "Zhou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Guorui Zhou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "51431610"
                        ],
                        "name": "Na Mou",
                        "slug": "Na-Mou",
                        "structuredName": {
                            "firstName": "Na",
                            "lastName": "Mou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Na Mou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109755002"
                        ],
                        "name": "Ying Fan",
                        "slug": "Ying-Fan",
                        "structuredName": {
                            "firstName": "Ying",
                            "lastName": "Fan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ying Fan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37915354"
                        ],
                        "name": "Qi Pi",
                        "slug": "Qi-Pi",
                        "structuredName": {
                            "firstName": "Qi",
                            "lastName": "Pi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Qi Pi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9455314"
                        ],
                        "name": "Weijie Bian",
                        "slug": "Weijie-Bian",
                        "structuredName": {
                            "firstName": "Weijie",
                            "lastName": "Bian",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Weijie Bian"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144161025"
                        ],
                        "name": "Chang Zhou",
                        "slug": "Chang-Zhou",
                        "structuredName": {
                            "firstName": "Chang",
                            "lastName": "Zhou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chang Zhou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "150345697"
                        ],
                        "name": "Xiaoqiang Zhu",
                        "slug": "Xiaoqiang-Zhu",
                        "structuredName": {
                            "firstName": "Xiaoqiang",
                            "lastName": "Zhu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xiaoqiang Zhu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "20029557"
                        ],
                        "name": "Kun Gai",
                        "slug": "Kun-Gai",
                        "structuredName": {
                            "firstName": "Kun",
                            "lastName": "Gai",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kun Gai"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 175,
                                "start": 171
                            }
                        ],
                        "text": "These applications range from images (CRNN [37]), speech (ASR[53]), NLP (Transformer[48], BERT [16]), to internet scale E-commerce search and recommendation systems (DIEN [58])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 52188056,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "70d5ceb59118334e1a6eed33a149234413147b92",
            "isKey": false,
            "numCitedBy": 394,
            "numCiting": 35,
            "paperAbstract": {
                "fragments": [],
                "text": "Click-through rate (CTR) prediction, whose goal is to estimate the probability of a user clicking on the item, has become one of the core tasks in the advertising system. For CTR prediction model, it is necessary to capture the latent user interest behind the user behavior data. Besides, considering the changing of the external environment and the internal cognition, user interest evolves over time dynamically. There are several CTR prediction methods for interest modeling, while most of them regard the representation of behavior as the interest directly, and lack specially modeling for latent interest behind the concrete behavior. Moreover, little work considers the changing trend of the interest. In this paper, we propose a novel model, named Deep Interest Evolution Network (DIEN), for CTR prediction. Specifically, we design interest extractor layer to capture temporal interests from history behavior sequence. At this layer, we introduce an auxiliary loss to supervise interest extracting at each step. As user interests are diverse, especially in the e-commerce system, we propose interest evolving layer to capture interest evolving process that is relative to the target item. At interest evolving layer, attention mechanism is embedded into the sequential structure novelly, and the effects of relative interests are strengthened during interest evolution. In the experiments on both public and industrial datasets, DIEN significantly outperforms the state-of-the-art solutions. Notably, DIEN has been deployed in the display advertisement system of Taobao, and obtained 20.7% improvement on CTR."
            },
            "slug": "Deep-Interest-Evolution-Network-for-Click-Through-Zhou-Mou",
            "title": {
                "fragments": [],
                "text": "Deep Interest Evolution Network for Click-Through Rate Prediction"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "This paper proposes a novel model, named Deep Interest Evolution Network~(DIEN), for CTR prediction, which significantly outperforms the state-of-the-art solutions and design interest extractor layer to capture temporal interests from history behavior sequence."
            },
            "venue": {
                "fragments": [],
                "text": "AAAI"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2704460"
                        ],
                        "name": "David Furcy",
                        "slug": "David-Furcy",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Furcy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David Furcy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145314818"
                        ],
                        "name": "Sven Koenig",
                        "slug": "Sven-Koenig",
                        "structuredName": {
                            "firstName": "Sven",
                            "lastName": "Koenig",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sven Koenig"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 37,
                                "start": 33
                            }
                        ],
                        "text": "FusionStitching uses beam search [17] to generate top-3 (width of the beam) candidate fusion plans, and finally selects the best plan within the 3 candidates with latency-evaluator (sec 4."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 10168483,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e7a0dadcf989b35f76c909d5701e265f7fa4839a",
            "isKey": false,
            "numCitedBy": 90,
            "numCiting": 28,
            "paperAbstract": {
                "fragments": [],
                "text": "Beam search reduces the memory consumption of best-first search at the cost of finding longer paths but its memory consumption can still exceed the given memory capacity quickly. We therefore develop BULB (Beam search Using Limited discrepancy Backtracking), a complete memory-bounded search method that is able to solve more problem instances of large search problems than beam search and does so with a reasonable runtime. At the same time, BULB tends to find shorter paths than beam search because it is able to use larger beam widths without running out of memory. We demonstrate these properties of BULB experimentally for three standard benchmark domains."
            },
            "slug": "Limited-Discrepancy-Beam-Search-Furcy-Koenig",
            "title": {
                "fragments": [],
                "text": "Limited Discrepancy Beam Search"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "BULB (Beam search Using Limited discrepancy Backtracking), a complete memory-bounded search method that is able to solve more problem instances of large search problems than beam search and does so with a reasonable runtime."
            },
            "venue": {
                "fragments": [],
                "text": "IJCAI"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2276155"
                        ],
                        "name": "Baoguang Shi",
                        "slug": "Baoguang-Shi",
                        "structuredName": {
                            "firstName": "Baoguang",
                            "lastName": "Shi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Baoguang Shi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145905113"
                        ],
                        "name": "X. Bai",
                        "slug": "X.-Bai",
                        "structuredName": {
                            "firstName": "Xiang",
                            "lastName": "Bai",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "X. Bai"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2146721"
                        ],
                        "name": "C. Yao",
                        "slug": "C.-Yao",
                        "structuredName": {
                            "firstName": "Cong",
                            "lastName": "Yao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Yao"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 47,
                                "start": 43
                            }
                        ],
                        "text": "These applications range from images (CRNN [37]), speech (ASR[53]), NLP (Transformer[48], BERT [16]), to internet scale E-commerce search and recommendation systems (DIEN [58])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 24139,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8e9149ab00236d04db23394774e716c4f1d89231",
            "isKey": false,
            "numCitedBy": 1414,
            "numCiting": 48,
            "paperAbstract": {
                "fragments": [],
                "text": "Image-based sequence recognition has been a long-standing research topic in computer vision. In this paper, we investigate the problem of scene text recognition, which is among the most important and challenging tasks in image-based sequence recognition. A novel neural network architecture, which integrates feature extraction, sequence modeling and transcription into a unified framework, is proposed. Compared with previous systems for scene text recognition, the proposed architecture possesses four distinctive properties: (1) It is end-to-end trainable, in contrast to most of the existing algorithms whose components are separately trained and tuned. (2) It naturally handles sequences in arbitrary lengths, involving no character segmentation or horizontal scale normalization. (3) It is not confined to any predefined lexicon and achieves remarkable performances in both lexicon-free and lexicon-based scene text recognition tasks. (4) It generates an effective yet much smaller model, which is more practical for real-world application scenarios. The experiments on standard benchmarks, including the IIIT-5K, Street View Text and ICDAR datasets, demonstrate the superiority of the proposed algorithm over the prior arts. Moreover, the proposed algorithm performs well in the task of image-based music score recognition, which evidently verifies the generality of it."
            },
            "slug": "An-End-to-End-Trainable-Neural-Network-for-Sequence-Shi-Bai",
            "title": {
                "fragments": [],
                "text": "An End-to-End Trainable Neural Network for Image-Based Sequence Recognition and Its Application to Scene Text Recognition"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "A novel neural network architecture, which integrates feature extraction, sequence modeling and transcription into a unified framework, is proposed, which generates an effective yet much smaller model, which is more practical for real-world application scenarios."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Pattern Analysis and Machine Intelligence"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1802969"
                        ],
                        "name": "Ciprian Chelba",
                        "slug": "Ciprian-Chelba",
                        "structuredName": {
                            "firstName": "Ciprian",
                            "lastName": "Chelba",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ciprian Chelba"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48623026"
                        ],
                        "name": "M. Chen",
                        "slug": "M.-Chen",
                        "structuredName": {
                            "firstName": "Mia",
                            "lastName": "Chen",
                            "middleNames": [
                                "Xu"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "12295226"
                        ],
                        "name": "Ankur Bapna",
                        "slug": "Ankur-Bapna",
                        "structuredName": {
                            "firstName": "Ankur",
                            "lastName": "Bapna",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ankur Bapna"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1846258"
                        ],
                        "name": "Noam M. Shazeer",
                        "slug": "Noam-M.-Shazeer",
                        "structuredName": {
                            "firstName": "Noam",
                            "lastName": "Shazeer",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Noam M. Shazeer"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 21,
                                "start": 17
                            }
                        ],
                        "text": "FasterTransformer[10] provides hand tuned libraries for common components in Transformer."
                    },
                    "intents": []
                }
            ],
            "corpusId": 210472463,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "765866ecb5fe6a225d4e791498caf6a8351c16c7",
            "isKey": false,
            "numCitedBy": 10,
            "numCiting": 9,
            "paperAbstract": {
                "fragments": [],
                "text": "Motivated by the fact that most of the information relevant to the prediction of target tokens is drawn from the source sentence $S=s_1, \\ldots, s_S$, we propose truncating the target-side window used for computing self-attention by making an $N$-gram assumption. Experiments on WMT EnDe and EnFr data sets show that the $N$-gram masked self-attention model loses very little in BLEU score for $N$ values in the range $4, \\ldots, 8$, depending on the task."
            },
            "slug": "Faster-Transformer-Decoding:-N-gram-Masked-Chelba-Chen",
            "title": {
                "fragments": [],
                "text": "Faster Transformer Decoding: N-gram Masked Self-Attention"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "Experiments on WMT EnDe and EnFr data sets show that the N-gram masked self-attention model loses very little in BLEU score for values in the range of $4, \\ldots, 8$ depending on the task."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2020
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145971118"
                        ],
                        "name": "K. Cooper",
                        "slug": "K.-Cooper",
                        "structuredName": {
                            "firstName": "Keith",
                            "lastName": "Cooper",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Cooper"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144757886"
                        ],
                        "name": "T. Harvey",
                        "slug": "T.-Harvey",
                        "structuredName": {
                            "firstName": "Timothy",
                            "lastName": "Harvey",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Harvey"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "70455556"
                        ],
                        "name": "K. Kennedy",
                        "slug": "K.-Kennedy",
                        "structuredName": {
                            "firstName": "Ken",
                            "lastName": "Kennedy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Kennedy"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "mory sharing technique. The insight is that, FusionStitching reuses previous allocated shared memory as much as possible to reduce unnecessary shared memory allocation. We use dominance tree algorithm[13] for shared memory dataflow analyze. The approach takes a computation graph and shared memory requests as input, and outputs an allocation map. To optimize shared space sharing, we traverse ops of the"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 62285381,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d36348f844d6f25bacd2a21ec9e7e48fd2f88547",
            "isKey": false,
            "numCitedBy": 93,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "Th ep roblem of finding the dominators in a control-flow graph has a long history in the literature. The original algorithms suffered from a large asymptotic complexity but were easy to understand. Subsequent work improved the time bound, but generally sacrificed both simplicity and ease of implementation. This paper returns to a simple formulation of dominance as a global data-flow problem. Some insights into the natur eo f dominance lead to an implementation of an O(N 2 )a lgorithm that runs faster, in practice, than the classic Lengauer-Tarjan algorithm, which has a timebound of O(E \u2217 log(N )). We compare the algorithm to Lengauer-Tarjan because it is the best known and most widely used of the fast algorithms for dominance. Working from the same implementatio ni nsights, we also rederive (from earlier work on control dependence by Ferrante, et al. )a method for calculating dominance frontiers that we show is faster than the original algorithm by Cytron, et al. The aim of this paper is not to present a new algorithm, but, rather, to make an argument based on empirical evidence that algorithms with discouraging asymptotic complexities can be faster in practice than those more commonly employed. We show that, in some cases, careful engineering of simple algorithms can overcome theoretical advantages, even when problems grow beyond realistic sizes. Further, we argue that the algorithms presented herein are intuitive and easily implemented, making them excellent teaching tools."
            },
            "slug": "AS-imple,-Fast-Dominance-Algorithm-Cooper-Harvey",
            "title": {
                "fragments": [],
                "text": "AS imple, Fast Dominance Algorithm"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "It is shown that, in some cases, careful engineering of simple algorithms can overcome theoretical advantages, even when problems grow beyond realistic sizes."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1999
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1726014586"
                        ],
                        "name": "Jizhe Wang",
                        "slug": "Jizhe-Wang",
                        "structuredName": {
                            "firstName": "Jizhe",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jizhe Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1756575"
                        ],
                        "name": "Pipei Huang",
                        "slug": "Pipei-Huang",
                        "structuredName": {
                            "firstName": "Pipei",
                            "lastName": "Huang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Pipei Huang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46430770"
                        ],
                        "name": "Huan Zhao",
                        "slug": "Huan-Zhao",
                        "structuredName": {
                            "firstName": "Huan",
                            "lastName": "Zhao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Huan Zhao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2155337043"
                        ],
                        "name": "Zhibo Zhang",
                        "slug": "Zhibo-Zhang",
                        "structuredName": {
                            "firstName": "Zhibo",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhibo Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "14545267"
                        ],
                        "name": "Binqiang Zhao",
                        "slug": "Binqiang-Zhao",
                        "structuredName": {
                            "firstName": "Binqiang",
                            "lastName": "Zhao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Binqiang Zhao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1692152"
                        ],
                        "name": "Lee",
                        "slug": "Lee",
                        "structuredName": {
                            "firstName": "",
                            "lastName": "Lee",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lee"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 184,
                                "start": 180
                            }
                        ],
                        "text": "Recent years have witnessed a surge of industry scale applications of deep learning models, ranging from images/videos, text/NLP, to billion scale search and recommendation systems[50]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 3742725,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b77b179522ac01b6903c2719d9b5d29c1efa652e",
            "isKey": false,
            "numCitedBy": 263,
            "numCiting": 41,
            "paperAbstract": {
                "fragments": [],
                "text": "Recommender systems (RSs) have been the most important technology for increasing the business in Taobao, the largest online consumer-to-consumer (C2C) platform in China. There are three major challenges facing RS in Taobao: scalability, sparsity and cold start. In this paper, we present our technical solutions to address these three challenges. The methods are based on a well-known graph embedding framework. We first construct an item graph from users' behavior history, and learn the embeddings of all items in the graph. The item embeddings are employed to compute pairwise similarities between all items, which are then used in the recommendation process. To alleviate the sparsity and cold start problems, side information is incorporated into the graph embedding framework. We propose two aggregation methods to integrate the embeddings of items and the corresponding side information. Experimental results from offline experiments show that methods incorporating side information are superior to those that do not. Further, we describe the platform upon which the embedding methods are deployed and the workflow to process the billion-scale data in Taobao. Using A/B test, we show that the online Click-Through-Rates (CTRs) are improved comparing to the previous collaborative filtering based methods widely used in Taobao, further demonstrating the effectiveness and feasibility of our proposed methods in Taobao's live production environment."
            },
            "slug": "Billion-scale-Commodity-Embedding-for-E-commerce-in-Wang-Huang",
            "title": {
                "fragments": [],
                "text": "Billion-scale Commodity Embedding for E-commerce Recommendation in Alibaba"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "The technical solutions to address the scalability, sparsity and cold start problems of RS in Taobao are presented, and two aggregation methods to integrate the embeddings of items and the corresponding side information are proposed."
            },
            "venue": {
                "fragments": [],
                "text": "KDD"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47971768"
                        ],
                        "name": "J. Schulman",
                        "slug": "J.-Schulman",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Schulman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Schulman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143909660"
                        ],
                        "name": "F. Wolski",
                        "slug": "F.-Wolski",
                        "structuredName": {
                            "firstName": "Filip",
                            "lastName": "Wolski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Wolski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "6515819"
                        ],
                        "name": "Prafulla Dhariwal",
                        "slug": "Prafulla-Dhariwal",
                        "structuredName": {
                            "firstName": "Prafulla",
                            "lastName": "Dhariwal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Prafulla Dhariwal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38909097"
                        ],
                        "name": "Alec Radford",
                        "slug": "Alec-Radford",
                        "structuredName": {
                            "firstName": "Alec",
                            "lastName": "Radford",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alec Radford"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2067138712"
                        ],
                        "name": "Oleg Klimov",
                        "slug": "Oleg-Klimov",
                        "structuredName": {
                            "firstName": "Oleg",
                            "lastName": "Klimov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Oleg Klimov"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 106
                            }
                        ],
                        "text": "[3] propose a priority-based fusion approach and learn fusion strategies with Proximal Policy Optimization[36] algorithm."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 125,
                                "start": 97
                            }
                        ],
                        "text": "Abdolrashidi et al.[3] propose a priority-based fusion approach and learn fusion strategies with Proximal Policy Optimization[36] algorithm."
                    },
                    "intents": []
                }
            ],
            "corpusId": 28695052,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dce6f9d4017b1785979e7520fd0834ef8cf02f4b",
            "isKey": false,
            "numCitedBy": 6094,
            "numCiting": 15,
            "paperAbstract": {
                "fragments": [],
                "text": "We propose a new family of policy gradient methods for reinforcement learning, which alternate between sampling data through interaction with the environment, and optimizing a \"surrogate\" objective function using stochastic gradient ascent. Whereas standard policy gradient methods perform one gradient update per data sample, we propose a novel objective function that enables multiple epochs of minibatch updates. The new methods, which we call proximal policy optimization (PPO), have some of the benefits of trust region policy optimization (TRPO), but they are much simpler to implement, more general, and have better sample complexity (empirically). Our experiments test PPO on a collection of benchmark tasks, including simulated robotic locomotion and Atari game playing, and we show that PPO outperforms other online policy gradient methods, and overall strikes a favorable balance between sample complexity, simplicity, and wall-time."
            },
            "slug": "Proximal-Policy-Optimization-Algorithms-Schulman-Wolski",
            "title": {
                "fragments": [],
                "text": "Proximal Policy Optimization Algorithms"
            },
            "tldr": {
                "abstractSimilarityScore": 95,
                "text": "A new family of policy gradient methods for reinforcement learning, which alternate between sampling data through interaction with the environment, and optimizing a \"surrogate\" objective function using stochastic gradient ascent, are proposed."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145971118"
                        ],
                        "name": "K. Cooper",
                        "slug": "K.-Cooper",
                        "structuredName": {
                            "firstName": "Keith",
                            "lastName": "Cooper",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Cooper"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144757886"
                        ],
                        "name": "T. Harvey",
                        "slug": "T.-Harvey",
                        "structuredName": {
                            "firstName": "Timothy",
                            "lastName": "Harvey",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Harvey"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "70455556"
                        ],
                        "name": "K. Kennedy",
                        "slug": "K.-Kennedy",
                        "structuredName": {
                            "firstName": "Ken",
                            "lastName": "Kennedy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Kennedy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 35,
                                "start": 31
                            }
                        ],
                        "text": "We use dominance tree algorithm[13] for shared memory dataflow analyze."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 2539308,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "50a116a8e82ec9d9a936018518554fa94a6bef9d",
            "isKey": false,
            "numCitedBy": 129,
            "numCiting": 39,
            "paperAbstract": {
                "fragments": [],
                "text": "The problem of finding the dominators in a control-flow graph has a long history in the literature. The original algorithms suffered from a large asymptotic complexity but were easy to understand. Subsequent work improved the time bound, but generally sacrificed both simplicity and ease of implementation. This paper returns to a simple formulation of dominance as a global data-flow problem. Some insights into the nature of dominance lead to an implementation of an O(N) algorithm that runs faster, in practice, than the classic Lengauer-Tarjan algorithm, which has a timebound of O(E \u2217 log(N)). We compare the algorithm to Lengauer-Tarjan because it is the best known and most widely used of the fast algorithms for dominance. Working from the same implementation insights, we also rederive (from earlier work on control dependence by Ferrante, et al.) a method for calculating dominance frontiers that we show is faster than the original algorithm by Cytron, et al. The aim of this paper is not to present a new algorithm, but, rather, to make an argument based on empirical evidence that algorithms with discouraging asymptotic complexities can be faster in practice than those more commonly employed. We show that, in some cases, careful engineering of simple algorithms can overcome theoretical advantages, even when problems grow beyond realistic sizes. Further, we argue that the algorithms presented herein are intuitive and easily implemented, making them excellent teaching tools."
            },
            "slug": "A-Simple,-Fast-Dominance-Algorithm-Cooper-Harvey",
            "title": {
                "fragments": [],
                "text": "A Simple, Fast Dominance Algorithm"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "It is shown that, in some cases, careful engineering of simple algorithms can overcome theoretical advantages, even when problems grow beyond realistic sizes."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2001
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145184042"
                        ],
                        "name": "J. W. Merrill",
                        "slug": "J.-W.-Merrill",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Merrill",
                            "middleNames": [
                                "W.",
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. W. Merrill"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 4660196,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a733492f597c4d0a27a24c8fffdf5d116fa7e09f",
            "isKey": false,
            "numCitedBy": 225,
            "numCiting": 1,
            "paperAbstract": {
                "fragments": [],
                "text": "The topic of this thesis is to built an accurate automatic speech recognition system to be able to recognize speech using Kaldi, an open-source toolkit for speech recognition written in C++ and with free data. First of all, the main process of automatic speech recognition is explained in details on first steps. Secondly, different approaches of training and adaptation techniques are studied in order to improve the recognition accuracy. Furthermore, as data size is a very important point in order to achieve enough recognition accuracy, the role of it, is also studied on this thesis."
            },
            "slug": "Automatic-speech-recognition-Merrill",
            "title": {
                "fragments": [],
                "text": "Automatic speech recognition"
            },
            "tldr": {
                "abstractSimilarityScore": 94,
                "text": "This thesis aims to built an accurate automatic speech recognition system to be able to recognize speech using Kaldi, an open-source toolkit for speech recognition written in C++ and with free data."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2007
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 33,
                                "start": 29
                            }
                        ],
                        "text": "The XLA compilation framework[28] can handle more general computation patterns, but offers only basic capability for fusion and kernel generation with empirical rules."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 71,
                                "start": 67
                            }
                        ],
                        "text": "We realize FusionStitching into TensorFlow as an alternative of XLA[28], state-of-the-art compilation optimization framework about memory intensive ops."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 18,
                                "start": 14
                            }
                        ],
                        "text": "TensorFlow XLA[28] framework implements kernel packing and thread composition."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 67,
                                "start": 56
                            }
                        ],
                        "text": "Prior works have explored the basic idea in AI workloads[8, 12, 28], database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "XLA: TensorFlow, compiled"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2665634"
                        ],
                        "name": "Dillon Sharlet",
                        "slug": "Dillon-Sharlet",
                        "structuredName": {
                            "firstName": "Dillon",
                            "lastName": "Sharlet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dillon Sharlet"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2496412"
                        ],
                        "name": "Connelly Barnes",
                        "slug": "Connelly-Barnes",
                        "structuredName": {
                            "firstName": "Connelly",
                            "lastName": "Barnes",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Connelly Barnes"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1801789"
                        ],
                        "name": "M. Levoy",
                        "slug": "M.-Levoy",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Levoy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Levoy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 111,
                                "start": 92
                            }
                        ],
                        "text": "Many current research works mainly focus on dense tensor computations (GEMM and convolution)[6, 12, 34, 39, 47] as dense computations dominate the execution time formany DNN workloads (like CNN[20, 38, 42])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 33,
                                "start": 29
                            }
                        ],
                        "text": "TVM[12], Ansor[56] and Halide[34] are capable to generate high performance kernels with well designed schedules."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 99
                            }
                        ],
                        "text": "Some previous works explored static thread and block compositions in database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 99
                            }
                        ],
                        "text": "Prior works have explored the basic idea in AI workloads[8, 12, 28], database[51], image processing[4, 33, 34], and HPC applications[27, 49]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 23647423,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "255f645102919a7c3e451cac9b8f0f07c0a882c1",
            "isKey": true,
            "numCitedBy": 62,
            "numCiting": 29,
            "paperAbstract": {
                "fragments": [],
                "text": "Writing high-performance code on modern machines requires not just locally optimizing inner loops, but globally reorganizing computations to exploit parallelism and locality---doing things such as tiling and blocking whole pipelines to fit in cache. This is especially true for image processing pipelines, where individual stages do much too little work to amortize the cost of loading and storing results to and from off-chip memory. As a result, the performance difference between a naive implementation of a pipeline and one globally optimized for parallelism and locality is often an order of magnitude. However, using existing programming tools, writing high-performance image processing code requires sacrificing simplicity, portability, and modularity. We argue that this is because traditional programming models conflate the computations defining the algorithm with decisions about intermediate storage and the order of computation, which we call the schedule. We propose a new programming language for image processing pipelines, called Halide, that separates the algorithm from its schedule. Programmers can change the schedule to express many possible organizations of a single algorithm. The Halide compiler then synthesizes a globally combined loop nest for an entire algorithm, given a schedule. Halide models a space of schedules which is expressive enough to describe organizations that match or outperform state-of-the-art hand-written implementations of many computational photography and computer vision algorithms. Its model is simple enough to do so often in only a few lines of code, and small changes generate efficient implementations for x86, ARM, Graphics Processors (GPUs), and specialized image processors, all from a single algorithm. Halide has been public and open source for over four years, during which it has been used by hundreds of programmers to deploy code to tens of thousands of servers and hundreds of millions of phones, processing billions of images every day."
            },
            "slug": "Halide:-decoupling-algorithms-from-schedules-for-Ragan-Kelley-Adams",
            "title": {
                "fragments": [],
                "text": "Halide: decoupling algorithms from schedules for high-performance image processing"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "A new programming language for image processing pipelines, called Halide, that separates the algorithm from its schedule, and is expressive enough to describe organizations that match or outperform state-of-the-art hand-written implementations of many computational photography and computer vision algorithms."
            },
            "venue": {
                "fragments": [],
                "text": "Commun. ACM"
            },
            "year": 2018
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Hlo transpose operation"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Torch nn"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2015
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "TensorFlow team"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 47,
                                "start": 43
                            }
                        ],
                        "text": "These applications range from images (CRNN [37]), speech (ASR [52]), NLP (Transformer [47], BERT [15]), to internet scale E-commerce search and recommendation systems (DIEN [57])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An end-toend trainable neural network for image-based sequence recognition and its application to scene text recognition"
            },
            "venue": {
                "fragments": [],
                "text": "IEEE transactions on pattern analysis and machine intelligence,"
            },
            "year": 2016
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "AUTOMATIC SPEECH RECOG-NITION"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2016
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 68,
                                "start": 63
                            }
                        ],
                        "text": "Algorithm 1 Fusion Exploration Algorithm 1: Input: Computation Graph G(V ,E) 2: Output: A set of valid fusion patterns S 3: procedure Explore(G) 4: D\u2190 InitiazeBuffer() 5: S \u2190 {} 6: I \u2190 TopologicalSort(G) // Sorted indices 7: for i in I do 8: C \u2190 GetConsumerIndex(G, i) 9: D[i] \u2190 GroupReduction(D.select(C), C , i) 10: S \u2190 S \u222a D[i] 11: end for 12: return S 13: end procedure 14: 15: procedure GroupReduction(D, C , i) 16: if n(C) = 1 then 17: return D[0] 18: end if 19: D\u2217\u2190 InitiazeBuffer() 20: C\u2217\u2190 [] 21: G \u2190 Group(C) 22: for j in 0 \u00b7 \u00b7 \u00b7n(G) \u2212 1 do 23: Y \u2190 {{i}} 24: form in G[j] do 25: Y \u2190 Y \u00d7 (D[m] \u222a \u2205) 26: end for 27: Y \u2190 Sort(Y , f ) // Sort Y and select first k items 28: D\u2217[j] \u2190 Y .first(k) 29: C\u2217.append(j) 30: end for 31: GroupReduction(D\u2217, C\u2217, v) 32: end procedure\nAn constraint of a fusion pattern is that, no cyclic dependence is allowed."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 15,
                                "start": 11
                            }
                        ],
                        "text": "CUDA Graph [19] reduces kernel launch overhead but suffers from severer initialization overhead and large extra GPU memory usage due to graph creation [31]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Getting started with cuda graphs. URL: https://devblogs"
            },
            "venue": {
                "fragments": [],
                "text": "nvidia. com/cudagraphs,"
            },
            "year": 2019
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 36,
                                "start": 32
                            }
                        ],
                        "text": "We use dominance tree algorithm [12] for shared memory dataflow analysis."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A simple, fast dominance"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2001
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "TensorFlow team. tf.math.multiply"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Hlo reduce operation"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Louis-No\u00ebl Pouchet, Atanas Rountev, and Ponnuswamy Sadayappan. 2019. A code generator for highperformance tensor contractions on gpus"
            },
            "venue": {
                "fragments": [],
                "text": "IEEE/ACM International Symposium on Code Generation and Optimization"
            },
            "year": 2019
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Getting started with cuda graphs"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2019
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 22,
                                "start": 19
                            }
                        ],
                        "text": "Abdolrashidi et al.[3] propose a priority-based fusion approach and learn fusion strategies with Proximal Policy Optimization[36] algorithm."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Learning to Fuse"
            },
            "venue": {
                "fragments": [],
                "text": "NeurIPS"
            },
            "year": 2019
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 47,
            "methodology": 14
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 68,
        "totalPages": 7
    },
    "page_url": "https://www.semanticscholar.org/paper/FusionStitching:-Boosting-Memory-Intensive-for-Deep-Zheng-Zhao/682bc0138e7c6e555eb741844e94e740aef9917d?sort=total-citations"
}