{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2880213"
                        ],
                        "name": "Edgar Solomonik",
                        "slug": "Edgar-Solomonik",
                        "structuredName": {
                            "firstName": "Edgar",
                            "lastName": "Solomonik",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Edgar Solomonik"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1713648"
                        ],
                        "name": "T. Hoefler",
                        "slug": "T.-Hoefler",
                        "structuredName": {
                            "firstName": "Torsten",
                            "lastName": "Hoefler",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Hoefler"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6839033,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "43f01d002dab4377b944e0fd42ea6ec02587758e",
            "isKey": false,
            "numCitedBy": 30,
            "numCiting": 47,
            "paperAbstract": {
                "fragments": [],
                "text": "Dense and sparse tensors allow the representation of most bulk data structures in computational science applications. We show that sparse tensor algebra can also be used to express many of the transformations on these datasets, especially those which are parallelizable. Tensor computations are a natural generalization of matrix and graph computations. We extend the usual basic operations of tensor summation and contraction to arbitrary functions, and further operations such as reductions and mapping. The expression of these transformations in a high-level sparse linear algebra domain specific language allows our framework to understand their properties at runtime to select the preferred communication-avoiding algorithm. To demonstrate the efficacy of our approach, we show how key graph algorithms as well as common numerical kernels can be succinctly expressed using our interface and provide performance results of a general library implementation."
            },
            "slug": "Sparse-Tensor-Algebra-as-a-Parallel-Programming-Solomonik-Hoefler",
            "title": {
                "fragments": [],
                "text": "Sparse Tensor Algebra as a Parallel Programming Model"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "This work extends the usual basic operations of tensor summation and contraction to arbitrary functions, and further operations such as reductions and mapping, and shows how key graph algorithms as well as common numerical kernels can be succinctly expressed using this interface and provide performance results of a general library implementation."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3191917"
                        ],
                        "name": "Hongbo Rong",
                        "slug": "Hongbo-Rong",
                        "structuredName": {
                            "firstName": "Hongbo",
                            "lastName": "Rong",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hongbo Rong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1686843"
                        ],
                        "name": "Jongsoo Park",
                        "slug": "Jongsoo-Park",
                        "structuredName": {
                            "firstName": "Jongsoo",
                            "lastName": "Park",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jongsoo Park"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2794865"
                        ],
                        "name": "Lingxiang Xiang",
                        "slug": "Lingxiang-Xiang",
                        "structuredName": {
                            "firstName": "Lingxiang",
                            "lastName": "Xiang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lingxiang Xiang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2068149321"
                        ],
                        "name": "T. A. Anderson",
                        "slug": "T.-A.-Anderson",
                        "structuredName": {
                            "firstName": "T.",
                            "lastName": "Anderson",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. A. Anderson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1711231"
                        ],
                        "name": "M. Smelyanskiy",
                        "slug": "M.-Smelyanskiy",
                        "structuredName": {
                            "firstName": "Mikhail",
                            "lastName": "Smelyanskiy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Smelyanskiy"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 14825684,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "27f3bb5ef854c0b0e559fb382114ba24891514b0",
            "isKey": false,
            "numCitedBy": 18,
            "numCiting": 76,
            "paperAbstract": {
                "fragments": [],
                "text": "The sparse matrix is a key data structure in various domains such as high-performance computing, machine learning, and graph analytics. To maximize performance of sparse matrix operations, it is especially important to optimize across the operations and not just within individual operations. While a straightforward per-operation mapping to library routines misses optimization opportunities, manually optimizing across the boundary of library routines is time-consuming and error-prone, sacrificing productivity. This paper introduces Sparso, a framework that automates such optimizations, enabling both high performance and high productivity. In Sparso, a compiler and sparse linear algebra libraries collaboratively discover and exploit context, which we define as the invariant properties of matrices and relationships between them in a program. We present compiler analyses, namely collective reordering analysis and matrix property discovery, to discover the context. The context discovered from these analyses drives key optimizations across library routines and matrices. We have implemented Sparso with the Julia language, Intel MKL and SpMP libraries. We evaluate our context-driven optimizations in 6 representative sparse linear algebra algorithms. Compared with a baseline that invokes high-performance libraries without context optimizations, Sparso results in 1.2~17x (average 5.7x) speedups. Our approach of compiler-library collaboration and context-driven optimizations should be also applicable to other productivity languages such as Matlab, Python, and R."
            },
            "slug": "Sparso:-Context-driven-optimizations-of-sparse-Rong-Park",
            "title": {
                "fragments": [],
                "text": "Sparso: Context-driven optimizations of sparse linear algebra"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "In Sparso, a compiler and sparse linear algebra libraries collaboratively discover and exploit context, which is defined as the invariant properties of matrices and relationships between them in a program, to discover the context and drive key optimizations across library routines and matrices."
            },
            "venue": {
                "fragments": [],
                "text": "2016 International Conference on Parallel Architecture and Compilation Techniques (PACT)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110486618"
                        ],
                        "name": "Shaden Smith",
                        "slug": "Shaden-Smith",
                        "structuredName": {
                            "firstName": "Shaden",
                            "lastName": "Smith",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shaden Smith"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1820592"
                        ],
                        "name": "N. Ravindran",
                        "slug": "N.-Ravindran",
                        "structuredName": {
                            "firstName": "Niranjay",
                            "lastName": "Ravindran",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Ravindran"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "73776482"
                        ],
                        "name": "N. Sidiropoulos",
                        "slug": "N.-Sidiropoulos",
                        "structuredName": {
                            "firstName": "N.",
                            "lastName": "Sidiropoulos",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Sidiropoulos"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50877490"
                        ],
                        "name": "G. Karypis",
                        "slug": "G.-Karypis",
                        "structuredName": {
                            "firstName": "George",
                            "lastName": "Karypis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Karypis"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 15182166,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e331cc03cf0990fd985f93df2e1c471ed927cac8",
            "isKey": false,
            "numCitedBy": 151,
            "numCiting": 22,
            "paperAbstract": {
                "fragments": [],
                "text": "Multi-dimensional arrays, or tensors, are increasingly found in fields such as signal processing and recommender systems. Real-world tensors can be enormous in size and often very sparse. There is a need for efficient, high-performance tools capable of processing the massive sparse tensors of today and the future. This paper introduces SPLATT, a C library with shared-memory parallelism for three-mode tensors. SPLATT contains algorithmic improvements over competing state of the art tools for sparse tensor factorization. SPLATT has a fast, parallel method of multiplying a matricide tensor by a Khatri-Rao product, which is a key kernel in tensor factorization methods. SPLATT uses a novel data structure that exploits the sparsity patterns of tensors. This data structure has a small memory footprint similar to competing methods and allows for the computational improvements featured in our work. We also present a method of finding cache-friendly reordering and utilizing them with a novel form of cache tiling. To our knowledge, this is the first work to investigate reordering and cache tiling in this context. SPLATT averages almost 30x speedup compared to our baseline when using 16 threads and reaches over 80x speedup on NELL-2."
            },
            "slug": "SPLATT:-Efficient-and-Parallel-Sparse-Tensor-Matrix-Smith-Ravindran",
            "title": {
                "fragments": [],
                "text": "SPLATT: Efficient and Parallel Sparse Tensor-Matrix Multiplication"
            },
            "venue": {
                "fragments": [],
                "text": "2015 IEEE International Parallel and Distributed Processing Symposium"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1849855"
                        ],
                        "name": "D. Matthews",
                        "slug": "D.-Matthews",
                        "structuredName": {
                            "firstName": "Devin",
                            "lastName": "Matthews",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Matthews"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 3858036,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a4901727c359ab19ef69b393b4fb08173d6eefdc",
            "isKey": false,
            "numCitedBy": 46,
            "numCiting": 53,
            "paperAbstract": {
                "fragments": [],
                "text": "Tensor computations---in particular tensor contraction (TC)---are important kernels in many scientific computing applications. Due to the fundamental similarity of TC to matrix multiplication and to the availability of optimized implementations such as the BLAS, tensor operations have traditionally been implemented in terms of BLAS operations, incurring both a performance and a storage overhead. Instead, we implement TC using the flexible BLAS-like Instantiation Software (BLIS) framework, which allows for transposition (reshaping) of the tensor to be fused with internal partitioning and packing operations, requiring no explicit transposition operations or additional workspace. This implementation, TBLIS, achieves performance approaching that of matrix multiplication, and in some cases considerably higher than that of traditional TC. Our implementation supports multithreading using an approach identical to that used for matrix multiplication in BLIS, with similar performance characteristics. The complexity..."
            },
            "slug": "High-Performance-Tensor-Contraction-without-Matthews",
            "title": {
                "fragments": [],
                "text": "High-Performance Tensor Contraction without Transposition"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This work implements TC using the flexible BLAS-like Instantiation Software (BLIS) framework, which allows for transposition (reshaping) of the tensor to be fused with internal partitioning and packing operations, requiring no explicit transposition operations or additional workspace."
            },
            "venue": {
                "fragments": [],
                "text": "SIAM J. Sci. Comput."
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47786204"
                        ],
                        "name": "Jiajia Li",
                        "slug": "Jiajia-Li",
                        "structuredName": {
                            "firstName": "Jiajia",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jiajia Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2144390888"
                        ],
                        "name": "Yuchen Ma",
                        "slug": "Yuchen-Ma",
                        "structuredName": {
                            "firstName": "Yuchen",
                            "lastName": "Ma",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuchen Ma"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "7590116"
                        ],
                        "name": "C. Yan",
                        "slug": "C.-Yan",
                        "structuredName": {
                            "firstName": "Chenggang",
                            "lastName": "Yan",
                            "middleNames": [
                                "Clarence"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Yan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1771649"
                        ],
                        "name": "R. Vuduc",
                        "slug": "R.-Vuduc",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Vuduc",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Vuduc"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 28763485,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "669508257d4621864011252d0423047f98d9329c",
            "isKey": false,
            "numCitedBy": 28,
            "numCiting": 37,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper presents the optimized design and implementation of sparse tensor-times-dense matrix multiply (SpTTM) for CPU and GPU platforms. This primitive is a critical bottleneck in data analysis and mining applications based on tensor methods, such as the Tucker decomposition. We first design and implement sequential SpTTM to avoid explicit data transformations between a tensor and a matrix, which is the conventional approach. We further optimize SpTTM on multicore CPU and GPU systems by parallelizing, avoiding locks, and exploiting data locality. Our sequential SpTTM is up to 3.5\u00d7 faster than the SpTTM from Tensor Toolbox and 1.5\u00d7 over that from Cyclops Tensor Framework. Our parallel algorithms show 4.1\u00d7 speedup on multicore Intel Core i7 and 18.8\u00d7 speedup on NVIDIA K40c GPU over our sequential SpTTM respectively."
            },
            "slug": "Optimizing-Sparse-Tensor-Times-Matrix-on-Multi-core-Li-Ma",
            "title": {
                "fragments": [],
                "text": "Optimizing Sparse Tensor Times Matrix on Multi-core and Many-Core Architectures"
            },
            "tldr": {
                "abstractSimilarityScore": 89,
                "text": "The optimized design and implementation of sparse tensor-times-dense matrix multiply (SpTTM) for CPU and GPU platforms is presented, which is a critical bottleneck in data analysis and mining applications based on tensor methods, such as the Tucker decomposition."
            },
            "venue": {
                "fragments": [],
                "text": "2016 6th Workshop on Irregular Applications: Architecture and Algorithms (IA3)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47800062"
                        ],
                        "name": "M. Baskaran",
                        "slug": "M.-Baskaran",
                        "structuredName": {
                            "firstName": "Muthu",
                            "lastName": "Baskaran",
                            "middleNames": [
                                "Manikandan"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Baskaran"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35104370"
                        ],
                        "name": "Beno\u00eet Meister",
                        "slug": "Beno\u00eet-Meister",
                        "structuredName": {
                            "firstName": "Beno\u00eet",
                            "lastName": "Meister",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Beno\u00eet Meister"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1800919"
                        ],
                        "name": "Nicolas Vasilache",
                        "slug": "Nicolas-Vasilache",
                        "structuredName": {
                            "firstName": "Nicolas",
                            "lastName": "Vasilache",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nicolas Vasilache"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1802881"
                        ],
                        "name": "R. Lethin",
                        "slug": "R.-Lethin",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Lethin",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Lethin"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6934598,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c6cf2628cc27a595546b807fa247379d1fe0c5fa",
            "isKey": false,
            "numCitedBy": 58,
            "numCiting": 16,
            "paperAbstract": {
                "fragments": [],
                "text": "For applications that deal with large amounts of high dimensional multi-aspect data, it becomes natural to represent such data as tensors or multi-way arrays. Multi-linear algebraic computations such as tensor decompositions are performed for summarization and analysis of such data. Their use in real-world applications can span across domains such as signal processing, data mining, computer vision, and graph analysis. The major challenges with applying tensor decompositions in real-world applications are (1) dealing with large-scale high dimensional data and (2) dealing with sparse data. In this paper, we address these challenges in applying tensor decompositions in real data analytic applications. We describe new sparse tensor storage formats that provide storage benefits and are flexible and efficient for performing tensor computations. Further, we propose an optimization that improves data reuse and reduces redundant or unnecessary computations in tensor decomposition algorithms. Furthermore, we couple our data reuse optimization and the benefits of our sparse tensor storage formats to provide a memory-efficient scalable solution for handling large-scale sparse tensor computations. We demonstrate improved performance and address memory scalability using our techniques on both synthetic small data sets and large-scale sparse real data sets."
            },
            "slug": "Efficient-and-scalable-computations-with-sparse-Baskaran-Meister",
            "title": {
                "fragments": [],
                "text": "Efficient and scalable computations with sparse tensors"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This paper describes new sparse tensor storage formats that provide storage benefits and are flexible and efficient for performing tensor computations and proposes an optimization that improves data reuse and reduces redundant or unnecessary computations in tensor decomposition algorithms."
            },
            "venue": {
                "fragments": [],
                "text": "2012 IEEE Conference on High Performance Extreme Computing"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2350111"
                        ],
                        "name": "Jonathon Cai",
                        "slug": "Jonathon-Cai",
                        "structuredName": {
                            "firstName": "Jonathon",
                            "lastName": "Cai",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathon Cai"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47800062"
                        ],
                        "name": "M. Baskaran",
                        "slug": "M.-Baskaran",
                        "structuredName": {
                            "firstName": "Muthu",
                            "lastName": "Baskaran",
                            "middleNames": [
                                "Manikandan"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Baskaran"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35104370"
                        ],
                        "name": "Beno\u00eet Meister",
                        "slug": "Beno\u00eet-Meister",
                        "structuredName": {
                            "firstName": "Beno\u00eet",
                            "lastName": "Meister",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Beno\u00eet Meister"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1802881"
                        ],
                        "name": "R. Lethin",
                        "slug": "R.-Lethin",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Lethin",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Lethin"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 17559709,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "535406567c94a178e7e3bb27947b38afbc9f4ade",
            "isKey": false,
            "numCitedBy": 10,
            "numCiting": 25,
            "paperAbstract": {
                "fragments": [],
                "text": "For applications that deal with large amounts of high dimensional multi-aspect data, it is natural to represent such data as tensors or multi-way arrays. Tensor computations, such as tensor decompositions, are increasingly being used to extract and explain properties of such data. An important class of tensors is the symmetric tensor, which shows up in real-world applications such as signal processing, biomedical engineering, and data analysis. In this work, we describe novel optimizations that exploit the symmetry in tensors in order to reduce redundancy in computations and storage and effectively parallelize operations involving symmetric tensors. Specifically, we apply our optimizations on the matricized tensor times Khatri Rao product (mttkrp) operation, a key operation in tensor decomposition algorithms such as INDSCAL (individual differences in scaling) for symmetric tensors. We demonstrate improved performance for both sequential and parallel execution using our techniques on various synthetic and real data sets."
            },
            "slug": "Optimization-of-symmetric-tensor-computations-Cai-Baskaran",
            "title": {
                "fragments": [],
                "text": "Optimization of symmetric tensor computations"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "Novel optimizations that exploit the symmetry in tensors in order to reduce redundancy in computations and storage and effectively parallelize operations involving symmetric tensors are described."
            },
            "venue": {
                "fragments": [],
                "text": "2015 IEEE High Performance Extreme Computing Conference (HPEC)"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "30335993"
                        ],
                        "name": "Gilad Arnold",
                        "slug": "Gilad-Arnold",
                        "structuredName": {
                            "firstName": "Gilad",
                            "lastName": "Arnold",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Gilad Arnold"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 7426644,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "ddbc9de2d7de185fe12dfff766ba00a908aecc55",
            "isKey": false,
            "numCitedBy": 8,
            "numCiting": 68,
            "paperAbstract": {
                "fragments": [],
                "text": "Sparse matrix formats encode very large numerical matrices with relatively few nonzeros. They are typically implemented using imperative languages, with emphasis on low-level optimization. Such implementations are far removed from the conceptual organization of the sparse format, which obscures the representation invariants. They are further specialized by hand for particular applications, machines and workloads. Consequently, they are difficult to write, maintain, and verify. \nIn this dissertation we present LL, a small functional language suitable for implementing operations on sparse matrices. LL supports nested list and pair types, which naturally represent compressed matrices. It provides a few built-in operators and has a unique compositional dataflow model. As a result, LL programs are often direct analogs of high-level dataflow diagrams. This correspondence is useful when implementing sparse format construction and algebraic kernels such as sparse matrix-vector multiplication (SpMV). Despite its limited expressiveness, LL can specify interesting operations on real-world sparse formats. \nNext, we present a full functional verifier for sparse codes written in LL. We use a higher-order logic theorem prover, deploying standard simplification and introduction techniques. We use novel parametric predicates for tracking relationships between mathematical objects and their concrete representation. A simple heuristic tactic is used for automating proofs of different sparse formats. A qualitative analysis shows that our rule base exhibits good reusability and that the system easily extends to hierarchical formats. \nFinally, we describe a compiler for LL programs that generates efficient, parallel C code. We systematically map high-level nested datatypes onto compact and efficient low-level types. This facilitates a straightforward, syntax-directed translation of code. Local optimizations improve the performance of nested loops and eliminate redundant memory accesses. A coarse-grained heuristic loop parallelization scheme produces data-parallel code for execution on shared-memory multicore machines. Empirical evaluation shows that the sequential throughput of generated SpMV code is within 0.94\u20131.09 of a handwritten implementation. Parallel execution is 1.82\u20131.98 faster on two cores and 2.44\u20133.59 faster on four cores."
            },
            "slug": "Data-Parallel-Language-for-Correct-and-Efficient-Arnold",
            "title": {
                "fragments": [],
                "text": "Data-Parallel Language for Correct and Efficient Sparse Matrix Codes"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "LL, a small functional language suitable for implementing operations on sparse matrices, is presented, and a compiler for LL programs that generates efficient, parallel C code is described, which facilitates a straightforward, syntax-directed translation of code."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110486618"
                        ],
                        "name": "Shaden Smith",
                        "slug": "Shaden-Smith",
                        "structuredName": {
                            "firstName": "Shaden",
                            "lastName": "Smith",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shaden Smith"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50877490"
                        ],
                        "name": "G. Karypis",
                        "slug": "G.-Karypis",
                        "structuredName": {
                            "firstName": "George",
                            "lastName": "Karypis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Karypis"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 10315808,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "91c587158d19fdaeda6b453efa54064543a03e9d",
            "isKey": false,
            "numCitedBy": 88,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": "The Canonical Polyadic Decomposition (CPD) of tensors is a powerful tool for analyzing multi-way data and is used extensively to analyze very large and extremely sparse datasets. The bottleneck of computing the CPD is multiplying a sparse tensor by several dense matrices. Algorithms for tensor-matrix products fall into two classes. The first class saves floating point operations by storing a compressed tensor for each dimension of the data. These methods are fast but suffer high memory costs. The second class uses a single uncompressed tensor at the cost of additional floating point operations. In this work, we bridge the gap between the two approaches and introduce the compressed sparse fiber (CSF) a data structure for sparse tensors along with a novel parallel algorithm for tensor-matrix multiplication. CSF offers similar operation reductions as existing compressed methods while using only a single tensor structure. We validate our contributions with experiments comparing against state-of-the-art methods on a diverse set of datasets. Our work uses 58% less memory than the state-of-the-art while achieving 81% of the parallel performance on 16 threads."
            },
            "slug": "Tensor-matrix-products-with-a-compressed-sparse-Smith-Karypis",
            "title": {
                "fragments": [],
                "text": "Tensor-matrix products with a compressed sparse tensor"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "The compressed sparse fiber (CSF) a data structure for sparse tensors along with a novel parallel algorithm for tensor-matrix multiplication is introduced and offers similar operation reductions as existing compressed methods while using only a single tensor structure."
            },
            "venue": {
                "fragments": [],
                "text": "IA3@SC"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1771649"
                        ],
                        "name": "R. Vuduc",
                        "slug": "R.-Vuduc",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Vuduc",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Vuduc"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1700326"
                        ],
                        "name": "J. Demmel",
                        "slug": "J.-Demmel",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Demmel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Demmel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1731111"
                        ],
                        "name": "K. Yelick",
                        "slug": "K.-Yelick",
                        "structuredName": {
                            "firstName": "Katherine",
                            "lastName": "Yelick",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Yelick"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6252079,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5672ce28f2927b81b01303e4926643c55a4c8133",
            "isKey": false,
            "numCitedBy": 535,
            "numCiting": 55,
            "paperAbstract": {
                "fragments": [],
                "text": "The Optimized Sparse Kernel Interface (OSKI) is a collection of low-level primitives that provide automatically tuned computational kernels on sparse matrices, for use by solver libraries and applications. These kernels include sparse matrix-vector multiply and sparse triangular solve, among others. The primary aim of this interface is to hide the complex decision-making process needed to tune the performance of a kernel implementation for a particular user's sparse matrix and machine, while also exposing the steps and potentially non-trivial costs of tuning at run-time. This paper provides an overview of OSKI, which is based on our research on automatically tuned sparse kernels for modern cache-based superscalar machines."
            },
            "slug": "OSKI:-A-Library-of-Automatically-Tuned-Sparse-Vuduc-Demmel",
            "title": {
                "fragments": [],
                "text": "OSKI: A Library of Automatically Tuned Sparse Matrix Kernels"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "An overview of OSKI is provided, which is based on research on automatically tuned sparse kernels for modern cache-based superscalar machines, and the primary aim of this interface is to hide the complex decision-making process needed to tune the performance of a kernel implementation for a particular user's sparse matrix and machine."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40262521"
                        ],
                        "name": "O. Kaya",
                        "slug": "O.-Kaya",
                        "structuredName": {
                            "firstName": "Oguz",
                            "lastName": "Kaya",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Kaya"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145674689"
                        ],
                        "name": "B. U\u00e7ar",
                        "slug": "B.-U\u00e7ar",
                        "structuredName": {
                            "firstName": "Bora",
                            "lastName": "U\u00e7ar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. U\u00e7ar"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 18203301,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "75b7b85a6dbca16dbce1831c2f7de617e8b76e99",
            "isKey": false,
            "numCitedBy": 83,
            "numCiting": 41,
            "paperAbstract": {
                "fragments": [],
                "text": "We investigate an efficient parallelization of the most common iterative sparse tensor decomposition algorithms on distributed memory systems. A key operation in each iteration of these algorithms is the matricized tensor times Khatri-Rao product (MTTKRP). This operation amounts to element-wise vector multiplication and reduction depending on the sparsity of the tensor. We investigate a fine and a coarse-grain task definition for this operation, and propose hypergraph partitioning-based methods for these task definitions to achieve the load balance as well as reduce the communication requirements. We also design a distributed memory sparse tensor library, HyperTensor, which implements a well-known algorithm for the CANDECOMP-/PARAFAC (CP) tensor decomposition using the task definitions and the associated partitioning methods. We use this library to test the proposed implementation of MTTKRP in CP decomposition context, and report scalability results up to 1024 MPI ranks. We observed up to 194 fold speedups using 512 MPI processes on a well-known real world data, and significantly better performance results with respect to a state of the art implementation."
            },
            "slug": "Scalable-sparse-tensor-decompositions-in-memory-Kaya-U\u00e7ar",
            "title": {
                "fragments": [],
                "text": "Scalable sparse tensor decompositions in distributed memory systems"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A distributed memory sparse tensor library, HyperTensor, is designed, which implements a well-known algorithm for the CANDECOMP-/PARAFAC (CP) tensor decomposition using the task definitions and the associated partitioning methods."
            },
            "venue": {
                "fragments": [],
                "text": "SC15: International Conference for High Performance Computing, Networking, Storage and Analysis"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2066288670"
                        ],
                        "name": "T. Nelson",
                        "slug": "T.-Nelson",
                        "structuredName": {
                            "firstName": "Thomas",
                            "lastName": "Nelson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Nelson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2746645"
                        ],
                        "name": "Geoffrey Belter",
                        "slug": "Geoffrey-Belter",
                        "structuredName": {
                            "firstName": "Geoffrey",
                            "lastName": "Belter",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Geoffrey Belter"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2274043"
                        ],
                        "name": "Jeremy G. Siek",
                        "slug": "Jeremy-G.-Siek",
                        "structuredName": {
                            "firstName": "Jeremy",
                            "lastName": "Siek",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jeremy G. Siek"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2047797"
                        ],
                        "name": "E. Jessup",
                        "slug": "E.-Jessup",
                        "structuredName": {
                            "firstName": "Elizabeth",
                            "lastName": "Jessup",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Jessup"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1763308"
                        ],
                        "name": "B. Norris",
                        "slug": "B.-Norris",
                        "structuredName": {
                            "firstName": "Boyana",
                            "lastName": "Norris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Norris"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1188962,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2ed09ce69ec5e46e55c44e894aed20022bc97772",
            "isKey": false,
            "numCitedBy": 12,
            "numCiting": 61,
            "paperAbstract": {
                "fragments": [],
                "text": "Scientific programmers often turn to vendor-tuned Basic Linear Algebra Subprograms (BLAS) to obtain portable high performance. However, many numerical algorithms require several BLAS calls in sequence, and those successive calls do not achieve optimal performance. The entire sequence needs to be optimized in concert. Instead of vendor-tuned BLAS, a programmer could start with source code in Fortran or C (e.g., based on the Netlib BLAS) and use a state-of-the-art optimizing compiler. However, our experiments show that optimizing compilers often attain only one-quarter of the performance of hand-optimized code. In this article, we present a domain-specific compiler for matrix kernels, the Build to Order BLAS (BTO), that reliably achieves high performance using a scalable search algorithm for choosing the best combination of loop fusion, array contraction, and multithreading for data parallelism. The BTO compiler generates code that is between 16% slower and 39% faster than hand-optimized code."
            },
            "slug": "Reliable-Generation-of-High-Performance-Matrix-Nelson-Belter",
            "title": {
                "fragments": [],
                "text": "Reliable Generation of High-Performance Matrix Algebra"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A domain-specific compiler for matrix kernels, the Build to Order BLAS (BTO), that reliably achieves high performance using a scalable search algorithm for choosing the best combination of loop fusion, array contraction, and multithreading for data parallelism."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Math. Softw."
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35105210"
                        ],
                        "name": "L. Mullin",
                        "slug": "L.-Mullin",
                        "structuredName": {
                            "firstName": "Lenore",
                            "lastName": "Mullin",
                            "middleNames": [
                                "M.",
                                "Restifo"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Mullin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2639335"
                        ],
                        "name": "J. Raynolds",
                        "slug": "J.-Raynolds",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Raynolds",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Raynolds"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 490363,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8ba73768467f0c6924a8a965304abfe47ef885eb",
            "isKey": false,
            "numCitedBy": 6,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": "Understanding the layout of data and the accessing of that data is paramount to the optimal performance of an algorithm on one or many processors. This paper addresses the need for efficient tools to implement and carry out tensor based computations for scientific and engineering applications. In particular, we focus on certain ubiquitous operations such as outer products of arbitrary multi-dimensional arrays and matrix Kronecker products. We advocate an algebraic methodology based on A Mathematics of Arrays (MoA) and the \u03c8-Calculus, in which, any array based computer language (such as MATLAB) would be aug- mented to achieve optimal performance for the computation of multiple outer products. In this approach, an Operational Normal Form (ONF), which specifies the most efficient implementation in terms of starts, stops, and strides is mathematically derived given specific details of the pro- cessor/memory hierarchy. The vision of this research is the creation of a system in which the application scientist or engineer can use a functional subset of his/her favorite language and, in so doing, have the ability to generate code with high efficiency and compiler-like optimizations."
            },
            "slug": "Scalable,-Portable,-Verifiable-Kronecker-Products-Mullin-Raynolds",
            "title": {
                "fragments": [],
                "text": "Scalable, Portable, Verifiable Kronecker Products on Multi-scale Computers"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "The vision of this research is the creation of a system in which the application scientist or engineer can use a functional subset of his/her favorite language and have the ability to generate code with high efficiency and compiler-like optimizations."
            },
            "venue": {
                "fragments": [],
                "text": "Constraint Programming and Decision Making"
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2057642721"
                        ],
                        "name": "Mart\u00edn Abadi",
                        "slug": "Mart\u00edn-Abadi",
                        "structuredName": {
                            "firstName": "Mart\u00edn",
                            "lastName": "Abadi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mart\u00edn Abadi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144758007"
                        ],
                        "name": "P. Barham",
                        "slug": "P.-Barham",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Barham",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Barham"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2108406634"
                        ],
                        "name": "Jianmin Chen",
                        "slug": "Jianmin-Chen",
                        "structuredName": {
                            "firstName": "Jianmin",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jianmin Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2545358"
                        ],
                        "name": "Z. Chen",
                        "slug": "Z.-Chen",
                        "structuredName": {
                            "firstName": "Z.",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Z. Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "36347083"
                        ],
                        "name": "Andy Davis",
                        "slug": "Andy-Davis",
                        "structuredName": {
                            "firstName": "Andy",
                            "lastName": "Davis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andy Davis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49959210"
                        ],
                        "name": "J. Dean",
                        "slug": "J.-Dean",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Dean",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dean"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145139947"
                        ],
                        "name": "Matthieu Devin",
                        "slug": "Matthieu-Devin",
                        "structuredName": {
                            "firstName": "Matthieu",
                            "lastName": "Devin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matthieu Devin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1780892"
                        ],
                        "name": "S. Ghemawat",
                        "slug": "S.-Ghemawat",
                        "structuredName": {
                            "firstName": "Sanjay",
                            "lastName": "Ghemawat",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Ghemawat"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060655766"
                        ],
                        "name": "Geoffrey Irving",
                        "slug": "Geoffrey-Irving",
                        "structuredName": {
                            "firstName": "Geoffrey",
                            "lastName": "Irving",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Geoffrey Irving"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2090818"
                        ],
                        "name": "M. Isard",
                        "slug": "M.-Isard",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Isard",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Isard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1942300"
                        ],
                        "name": "M. Kudlur",
                        "slug": "M.-Kudlur",
                        "structuredName": {
                            "firstName": "Manjunath",
                            "lastName": "Kudlur",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Kudlur"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3369421"
                        ],
                        "name": "J. Levenberg",
                        "slug": "J.-Levenberg",
                        "structuredName": {
                            "firstName": "Josh",
                            "lastName": "Levenberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Levenberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3089272"
                        ],
                        "name": "R. Monga",
                        "slug": "R.-Monga",
                        "structuredName": {
                            "firstName": "Rajat",
                            "lastName": "Monga",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Monga"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144375552"
                        ],
                        "name": "Sherry Moore",
                        "slug": "Sherry-Moore",
                        "structuredName": {
                            "firstName": "Sherry",
                            "lastName": "Moore",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sherry Moore"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "20154699"
                        ],
                        "name": "D. Murray",
                        "slug": "D.-Murray",
                        "structuredName": {
                            "firstName": "Derek",
                            "lastName": "Murray",
                            "middleNames": [
                                "Gordon"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Murray"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32163737"
                        ],
                        "name": "Benoit Steiner",
                        "slug": "Benoit-Steiner",
                        "structuredName": {
                            "firstName": "Benoit",
                            "lastName": "Steiner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Benoit Steiner"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2080690"
                        ],
                        "name": "P. Tucker",
                        "slug": "P.-Tucker",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Tucker",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Tucker"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2053781980"
                        ],
                        "name": "Vijay Vasudevan",
                        "slug": "Vijay-Vasudevan",
                        "structuredName": {
                            "firstName": "Vijay",
                            "lastName": "Vasudevan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vijay Vasudevan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47941411"
                        ],
                        "name": "P. Warden",
                        "slug": "P.-Warden",
                        "structuredName": {
                            "firstName": "Pete",
                            "lastName": "Warden",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Warden"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35078078"
                        ],
                        "name": "M. Wicke",
                        "slug": "M.-Wicke",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Wicke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Wicke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2117163698"
                        ],
                        "name": "Yuan Yu",
                        "slug": "Yuan-Yu",
                        "structuredName": {
                            "firstName": "Yuan",
                            "lastName": "Yu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuan Yu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2144533795"
                        ],
                        "name": "Xiaoqiang Zhang",
                        "slug": "Xiaoqiang-Zhang",
                        "structuredName": {
                            "firstName": "Xiaoqiang",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xiaoqiang Zhang"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 165,
                                "start": 146
                            }
                        ],
                        "text": "In machine learning, TensorFlow is a recent framework where dense tensors are passed between tensor computation kernels in a dataflow computation [Abadi et al. 2016]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 184,
                                "start": 165
                            }
                        ],
                        "text": "Eigen in particular has proven popular due to its high performance and relative ease of use, and it is used in many large-scale projects such as Google\u2019s TensorFlow [Abadi et al. 2016]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 163,
                                "start": 153
                            }
                        ],
                        "text": "Eigen in particular has proven popular due to its high performance and relative ease of use, and it is used in many large-scale projects such as Google\u2019s TensorFlow [3]. pOSKI is a C library that automatically\nA compiler for dense and sparse tensor algebra."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 77,
                                "start": 58
                            }
                        ],
                        "text": "The technique can be used in libraries such as TensorFlow [Abadi et al. 2016] and Eigen [Guennebaud et al."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 10,
                                "start": 0
                            }
                        ],
                        "text": "TensorFlow: Large-scale machine learning on heterogeneous systems, 2015."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 10,
                                "start": 0
                            }
                        ],
                        "text": "TensorFlow is a recent interface for machine learning algorithms that passes dense tensors between kernels in a dataflow computation [3]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 57,
                                "start": 47
                            }
                        ],
                        "text": "Our technique can be used in libraries such as TensorFlow [3], or Eigen [20] or integrated into the compilers of MATLAB [28], Julia [13] or Simit [23]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 287,
                                "start": 175
                            }
                        ],
                        "text": "1 INTRODUCTION Tensor algebra is a powerful tool for computing onmultidimensional data and has many applications in machine learning, data analytics, engineering, and science [Abadi et al. 2016; Anandkumar et al. 2014; Bader et al. 2008; Einstein 1916; Feynman et al. 1963; Kolecki 2002]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 19,
                                "start": 9
                            }
                        ],
                        "text": "Finally, TensorFlow recently added some support for sparse tensor computations in the form of hand-coded kernels [3]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 6287870,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "46200b99c40e8586c8a0f588488ab6414119fb28",
            "isKey": true,
            "numCitedBy": 12805,
            "numCiting": 111,
            "paperAbstract": {
                "fragments": [],
                "text": "TensorFlow is a machine learning system that operates at large scale and in heterogeneous environments. Tensor-Flow uses dataflow graphs to represent computation, shared state, and the operations that mutate that state. It maps the nodes of a dataflow graph across many machines in a cluster, and within a machine across multiple computational devices, including multicore CPUs, general-purpose GPUs, and custom-designed ASICs known as Tensor Processing Units (TPUs). This architecture gives flexibility to the application developer: whereas in previous \"parameter server\" designs the management of shared state is built into the system, TensorFlow enables developers to experiment with novel optimizations and training algorithms. TensorFlow supports a variety of applications, with a focus on training and inference on deep neural networks. Several Google services use TensorFlow in production, we have released it as an open-source project, and it has become widely used for machine learning research. In this paper, we describe the TensorFlow dataflow model and demonstrate the compelling performance that TensorFlow achieves for several real-world applications."
            },
            "slug": "TensorFlow:-A-system-for-large-scale-machine-Abadi-Barham",
            "title": {
                "fragments": [],
                "text": "TensorFlow: A system for large-scale machine learning"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "The TensorFlow dataflow model is described and the compelling performance that Tensor Flow achieves for several real-world applications is demonstrated."
            },
            "venue": {
                "fragments": [],
                "text": "OSDI"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "31431661"
                        ],
                        "name": "Brett W. Bader",
                        "slug": "Brett-W.-Bader",
                        "structuredName": {
                            "firstName": "Brett",
                            "lastName": "Bader",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Brett W. Bader"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1744364"
                        ],
                        "name": "T. Kolda",
                        "slug": "T.-Kolda",
                        "structuredName": {
                            "firstName": "Tamara",
                            "lastName": "Kolda",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Kolda"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1491330,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "284bf60f7419485785268f84a1aaab47eb888233",
            "isKey": false,
            "numCitedBy": 437,
            "numCiting": 90,
            "paperAbstract": {
                "fragments": [],
                "text": "In this paper, the term tensor refers simply to a multidimensional or $N$-way array, and we consider how specially structured tensors allow for efficient storage and computation. First, we study sparse tensors, which have the property that the vast majority of the elements are zero. We propose storing sparse tensors using coordinate format and describe the computational efficiency of this scheme for various mathematical operations, including those typical to tensor decomposition algorithms. Second, we study factored tensors, which have the property that they can be assembled from more basic components. We consider two specific types: A Tucker tensor can be expressed as the product of a core tensor (which itself may be dense, sparse, or factored) and a matrix along each mode, and a Kruskal tensor can be expressed as the sum of rank-1 tensors. We are interested in the case where the storage of the components is less than the storage of the full tensor, and we demonstrate that many elementary operations can be computed using only the components. All of the efficiencies described in this paper are implemented in the Tensor Toolbox for MATLAB."
            },
            "slug": "Efficient-MATLAB-Computations-with-Sparse-and-Bader-Kolda",
            "title": {
                "fragments": [],
                "text": "Efficient MATLAB Computations with Sparse and Factored Tensors"
            },
            "tldr": {
                "abstractSimilarityScore": 57,
                "text": "This paper considers how specially structured tensors allow for efficient storage and computation, and proposes storing sparse tensors using coordinate format and describes the computational efficiency of this scheme for various mathematical operations, including those typical to tensor decomposition algorithms."
            },
            "venue": {
                "fragments": [],
                "text": "SIAM J. Sci. Comput."
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144301481"
                        ],
                        "name": "R. C. Whaley",
                        "slug": "R.-C.-Whaley",
                        "structuredName": {
                            "firstName": "R.",
                            "lastName": "Whaley",
                            "middleNames": [
                                "Clinton"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. C. Whaley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1708869"
                        ],
                        "name": "J. Dongarra",
                        "slug": "J.-Dongarra",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Dongarra",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dongarra"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1466414,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "214a0d9c93720aa8c3d10710bca8308e3f2618f5",
            "isKey": false,
            "numCitedBy": 1138,
            "numCiting": 22,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper describes an approach for the automatic generation and optimization of numerical software for processors with deep memory hierarchies and pipelined functional units. The production of such software for machines ranging from desktop workstations to embedded processors can be a tedious and time consuming process. The work described here can help in automating much of this process. We will concentrate our efforts on the widely used linear algebra kernels called the Basic Linear Algebra Subroutines (BLAS). In particular, the work presented here is for general matrix multiply, DGEMM. However much of the technology and approach developed here can be applied to the other Level 3 BLAS and the general strategy can have an impact on basic linear algebra operations in general and may be extended to other important kernel operations."
            },
            "slug": "Automatically-Tuned-Linear-Algebra-Software-Whaley-Dongarra",
            "title": {
                "fragments": [],
                "text": "Automatically Tuned Linear Algebra Software"
            },
            "tldr": {
                "abstractSimilarityScore": 74,
                "text": "An approach for the automatic generation and optimization of numerical software for processors with deep memory hierarchies and pipelined functional units using the widely used linear algebra kernels called the Basic Linear Algebra Subroutines (BLAS)."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the IEEE/ACM SC98 Conference"
            },
            "year": 1998
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143607407"
                        ],
                        "name": "V. Kotlyar",
                        "slug": "V.-Kotlyar",
                        "structuredName": {
                            "firstName": "Vladimir",
                            "lastName": "Kotlyar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Kotlyar"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 57429633,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e605bf32e85c041e82f4d8da761fb478f266942a",
            "isKey": false,
            "numCitedBy": 9,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Sparse matrix computations are ubiquitous in computational science. However, the development of high-performance software for sparse matrix computations is a tedious and error-prone task, for two reasons. First, there is no standard way of storing sparse matrices, since a variety of formats are used to avoid storing zeros, and the best choice for the format is dependent on the problem and the architecture. Second, for most algorithms, it takes a lot of code reorganization to produce an efficient sparse program that is tuned to a particular format. We view the problem of supporting effective development of high-performance sparse matrix codes as one of {\\em generic programming}. Generic programming is a discipline of designing and implementing software components which can be used when there is a set of {\\em related data structures} supporting a common semantics described by an API or protocol, and a set of {\\em common algorithms} that can be formulated in terms of this API. When designing a generic programming system one must address the following fundamental questions: -How do we represent efficient algorithms independently of any particular data-representation scheme? -How do we provide an interface to a diverse set of data-structures? -How do we ``knit'''' together the representation of the algorithms and the representation for the data to obtain an efficient implementation? This dissertation presents a {\\em relational algebraic model} for automatically generating efficient sparse codes starting with dense matrix codes and specification of sparse matrix formats. Our techniques are based on viewing arrays as relations and the execution of DOALL loop nests and loops with reductions as evaluation of queries over these relations. Storage formats are specified to the compiler through search and enumeration access methods and their costs. Code restructuring is then formulated as the search for the most efficient plan for the query. The main step in this process is the identification of simultaneous enumeration of data structures (relational joins) and the determination of the best implementations of this enumeration. This software architecture not only provides for a clean design of the compiler, but it also exposes additional opportunities for code optimization and has led us to more general transformation algorithms than previously reported in the literature. We present experimental data that demonstrates that the code generated by our compiler achieves performance competitive with that of hand-written codes for important computational kernels."
            },
            "slug": "Relational-Algebraic-Techniques-for-the-Synthesis-Kotlyar",
            "title": {
                "fragments": [],
                "text": "Relational Algebraic Techniques for the Synthesis of Sparse Matrix Programs"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This dissertation presents a relational algebraic model for automatically generating efficient sparse codes starting with dense matrix codes and specification of sparse matrix formats and presents experimental data that demonstrates that the code generated by the compiler achieves performance competitive with that of hand-written codes for important computational kernels."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1998
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8791785"
                        ],
                        "name": "Daniele G. Spampinato",
                        "slug": "Daniele-G.-Spampinato",
                        "structuredName": {
                            "firstName": "Daniele",
                            "lastName": "Spampinato",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daniele G. Spampinato"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1690697"
                        ],
                        "name": "Markus P\u00fcschel",
                        "slug": "Markus-P\u00fcschel",
                        "structuredName": {
                            "firstName": "Markus",
                            "lastName": "P\u00fcschel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Markus P\u00fcschel"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 11205862,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "529e1deae0a67b0f8d92fbb256adddced491ea40",
            "isKey": false,
            "numCitedBy": 79,
            "numCiting": 32,
            "paperAbstract": {
                "fragments": [],
                "text": "Many applications in media processing, control, graphics, and other domains require efficient small-scale linear algebra computations. However, most existing high performance libraries for linear algebra, such as ATLAS or Intel MKL are more geared towards large-scale problems (matrix sizes in the hundreds and larger) and towards specific interfaces (e.g., BLAS). In this paper we present LGen: a compiler for small-scale, basic linear algebra computations. The input to LGen is a fixed-size linear algebra expression; the output is a corresponding C function optionally including intrinsics to efficiently use SIMD vector extensions. LGen generates code using two levels of mathematical domain-specific languages (DSLs). The DSLs are used to perform tiling, loop fusion, and vectorization at a high level of abstraction, before the final code is generated. In addition, search is used to select among alternative generated implementations. We show benchmarks of code generated by LGen against Intel MKL and IPP as well as against alternative generators, such as the C++ template-based Eigen and the BTO compiler. The achieved speed-up is typically about a factor of two to three."
            },
            "slug": "A-Basic-Linear-Algebra-Compiler-Spampinato-P\u00fcschel",
            "title": {
                "fragments": [],
                "text": "A Basic Linear Algebra Compiler"
            },
            "tldr": {
                "abstractSimilarityScore": 50,
                "text": "This paper presents LGen: a compiler for small-scale, basic linear algebra computations, and shows benchmarks of code generated by LGen against Intel MKL and IPP as well as against alternative generators, such as the C++ template-based Eigen and the BTO compiler."
            },
            "venue": {
                "fragments": [],
                "text": "CGO '14"
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143607407"
                        ],
                        "name": "V. Kotlyar",
                        "slug": "V.-Kotlyar",
                        "structuredName": {
                            "firstName": "Vladimir",
                            "lastName": "Kotlyar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Kotlyar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1776186"
                        ],
                        "name": "K. Pingali",
                        "slug": "K.-Pingali",
                        "structuredName": {
                            "firstName": "Keshav",
                            "lastName": "Pingali",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Pingali"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3223763"
                        ],
                        "name": "P. Stodghill",
                        "slug": "P.-Stodghill",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Stodghill",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Stodghill"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 16318421,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0b2522ed3cf20c6e9844dd0cb72481041006e97c",
            "isKey": false,
            "numCitedBy": 20,
            "numCiting": 18,
            "paperAbstract": {
                "fragments": [],
                "text": "We describe how various sparse matrix and distribution formats can be handled using the relational approach to sparse matrix code compilation This approach allows for the development of compilation techniques that are independent of the storage formats by viewing the data structures as relations and abstracting the implementation details as access methods Introduction Sparse matrix computations are at the core of many computational science algorithms A typical application can often be separated into the discretization module which translates a continuous problem such as a system of di erential equations into a sequence of sparse matrix problems and into the solver module which solves the matrix problems Typically the solver is the most time and space intensive part of an application and quite naturally much e ort both in the numerical analysis and compilers communities has been devoted to producing e cient parallel and sequential code for sparse matrix solvers There are two challenges in generating solver code that has to be interfaced with discretization systems Di erent discretization systems produce the sparse matrices in many di erent formats Therefore the compiler should be able to generate solver code for di erent storage formats Some discretization systems partition the problem for parallel solution and use various methods for specifying the partitioning distribution Therefore a compiler should be able to produce parallel code for di erent distribution formats In our approach the programmer writes programs as if all matrices were dense and then provides a speci cation of which matrices are actually sparse and what formats distributions are used to represent them The job of the compiler is the following given a sequential dense matrix program descriptions of sparse matrix formats and data and computation distribution formats generate parallel sparse SPMD code and have introduced a relational algebra approach to solving this problem In this approach we view sparse matrices as database relations sparse matrix formats as implementations of access methods to the relations and execution of loop nests as evaluation of certain relational queries The key operator in these queries turns out to be the relational join For parallel execution we view loop nests as distributed queries and the process This research was supported by an NSF Presidential Young Investigator award CCR NSF Grant CCR and ONR grant N A version of this report appears in the proceedings of Eighth SIAM Conference on Parallel Processing for Scienti c Computing of generating SPMD node programs as the translation of distributed queries into equivalent local queries and communication statements In this paper we focus on how our compiler handles user de ned sparse data structures and distribution formats The architecture of the compiler is illustrated in Figure"
            },
            "slug": "Compiling-Parallel-Sparse-Code-for-User-Defined-Kotlyar-Pingali",
            "title": {
                "fragments": [],
                "text": "Compiling Parallel Sparse Code for User-Defined Data Structures"
            },
            "tldr": {
                "abstractSimilarityScore": 76,
                "text": "This paper describes how various sparse matrix and distribution formats can be handled using the relational approach to sparse matrix code compilation and introduces a relational algebra approach to solving this problem."
            },
            "venue": {
                "fragments": [],
                "text": "PPSC"
            },
            "year": 1997
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8407032"
                        ],
                        "name": "P. Springer",
                        "slug": "P.-Springer",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Springer",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Springer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1766804"
                        ],
                        "name": "P. Bientinesi",
                        "slug": "P.-Bientinesi",
                        "structuredName": {
                            "firstName": "Paolo",
                            "lastName": "Bientinesi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Bientinesi"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 3435088,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "aeb89c3190a875aeff5e2e0d1416d521ef78e69f",
            "isKey": false,
            "numCitedBy": 67,
            "numCiting": 72,
            "paperAbstract": {
                "fragments": [],
                "text": "We present \u201cGEMM-like Tensor\u2013Tensor multiplication\u201d (GETT), a novel approach for dense tensor contractions that mirrors the design of a high-performance general matrix\u2013matrix multiplication (GEMM). The critical insight behind GETT is the identification of three index sets, involved in the tensor contraction, which enable us to systematically reduce an arbitrary tensor contraction to loops around a highly tuned \u201cmacro-kernel.\u201d This macro-kernel operates on suitably prepared (\u201cpacked\u201d) sub-tensors that reside in a specified level of the cache hierarchy. In contrast to previous approaches to tensor contractions, GETT exhibits desirable features such as unit-stride memory accesses, cache-awareness, as well as full vectorization, without requiring auxiliary memory. We integrate GETT alongside the so-called Transpose\u2013Transpose-GEMM-Transpose and Loops-over-GEMM approaches into an open source \u201cTensor Contraction Code Generator.\u201d The performance results for a wide range of tensor contractions suggest that GETT has the potential of becoming the method of choice: While GETT exhibits excellent performance across the board, its effectiveness for bandwidth-bound tensor contractions is especially impressive, outperforming existing approaches by up to 12.4\u00d7. More precisely, GETT achieves speedups of up to 1.41\u00d7 over an equivalent-sized GEMM for bandwidth-bound tensor contractions while attaining up to 91.3% of peak floating-point performance for compute-bound tensor contractions."
            },
            "slug": "Design-of-a-High-Performance-GEMM-like-Springer-Bientinesi",
            "title": {
                "fragments": [],
                "text": "Design of a High-Performance GEMM-like Tensor\u2013Tensor Multiplication"
            },
            "tldr": {
                "abstractSimilarityScore": 64,
                "text": "GETT is a novel approach for dense tensor contractions that mirrors the design of a high-performance general matrix\u2013matrix multiplication (GEMM), and exhibits desirable features such as unit-stride memory accesses, cache-awareness, as well as full vectorization, without requiring auxiliary memory."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Math. Softw."
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2243725"
                        ],
                        "name": "E. Epifanovsky",
                        "slug": "E.-Epifanovsky",
                        "structuredName": {
                            "firstName": "Evgeny",
                            "lastName": "Epifanovsky",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Epifanovsky"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3279636"
                        ],
                        "name": "M. Wormit",
                        "slug": "M.-Wormit",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Wormit",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Wormit"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35481777"
                        ],
                        "name": "T. Kus",
                        "slug": "T.-Kus",
                        "structuredName": {
                            "firstName": "Tomasz",
                            "lastName": "Kus",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Kus"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144777343"
                        ],
                        "name": "A. Landau",
                        "slug": "A.-Landau",
                        "structuredName": {
                            "firstName": "Arie",
                            "lastName": "Landau",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Landau"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1845002"
                        ],
                        "name": "D. Zuev",
                        "slug": "D.-Zuev",
                        "structuredName": {
                            "firstName": "Dmitry",
                            "lastName": "Zuev",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Zuev"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1988261"
                        ],
                        "name": "K. Khistyaev",
                        "slug": "K.-Khistyaev",
                        "structuredName": {
                            "firstName": "Kirill",
                            "lastName": "Khistyaev",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Khistyaev"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "92069970"
                        ],
                        "name": "Prashant Manohar",
                        "slug": "Prashant-Manohar",
                        "structuredName": {
                            "firstName": "Prashant",
                            "lastName": "Manohar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Prashant Manohar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47817333"
                        ],
                        "name": "I. Kaliman",
                        "slug": "I.-Kaliman",
                        "structuredName": {
                            "firstName": "Ilya",
                            "lastName": "Kaliman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Kaliman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2286556"
                        ],
                        "name": "A. Dreuw",
                        "slug": "A.-Dreuw",
                        "structuredName": {
                            "firstName": "Andreas",
                            "lastName": "Dreuw",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Dreuw"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144848239"
                        ],
                        "name": "A. Krylov",
                        "slug": "A.-Krylov",
                        "structuredName": {
                            "firstName": "Anna",
                            "lastName": "Krylov",
                            "middleNames": [
                                "I."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Krylov"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 103,
                                "start": 78
                            }
                        ],
                        "text": "Two recent efforts are libtensor with extensive support for tensor symmetries [Epifanovsky et al. 2013]; and CTF with a focus on distributed computations [Solomonik et al."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 5737454,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4d2f5946e37d7f20d5ff5d2182008cef83639579",
            "isKey": false,
            "numCitedBy": 120,
            "numCiting": 74,
            "paperAbstract": {
                "fragments": [],
                "text": "This article presents an open\u2010source object\u2010oriented C++ library of classes and routines to perform tensor algebra. The primary purpose of the library is to enable post\u2010Hartree\u2013Fock electronic structure methods; however, the code is general enough to be applicable in other areas of physical and computational sciences. The library supports tensors of arbitrary order (dimensionality), size, and symmetry. Implemented data structures and algorithms operate on large tensors by splitting them into smaller blocks, storing them both in core memory and in files on disk, and applying divide\u2010and\u2010conquer\u2010type parallel algorithms to perform tensor algebra. The library offers a set of general tensor symmetry algorithms and a full implementation of tensor symmetries typically found in electronic structure theory: permutational, spin, and molecular point group symmetry. The Q\u2010Chem electronic structure software uses this library to drive coupled\u2010cluster, equation\u2010of\u2010motion, and algebraic\u2010diagrammatic construction methods. \u00a9 2013 Wiley Periodicals, Inc."
            },
            "slug": "New-implementation-of-high\u2010level-correlated-methods-Epifanovsky-Wormit",
            "title": {
                "fragments": [],
                "text": "New implementation of high\u2010level correlated methods using a general block tensor library for high\u2010performance electronic structure calculations"
            },
            "tldr": {
                "abstractSimilarityScore": 67,
                "text": "An open\u2010source object\u2010oriented C++ library of classes and routines to perform tensor algebra to enable post\u2010Hartree\u2013Fock electronic structure methods and offers a set of general tensor symmetry algorithms and a full implementation of tensor symmetries typically found in electronic structure theory."
            },
            "venue": {
                "fragments": [],
                "text": "J. Comput. Chem."
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2880213"
                        ],
                        "name": "Edgar Solomonik",
                        "slug": "Edgar-Solomonik",
                        "structuredName": {
                            "firstName": "Edgar",
                            "lastName": "Solomonik",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Edgar Solomonik"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1849855"
                        ],
                        "name": "D. Matthews",
                        "slug": "D.-Matthews",
                        "structuredName": {
                            "firstName": "Devin",
                            "lastName": "Matthews",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Matthews"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50534795"
                        ],
                        "name": "J. Hammond",
                        "slug": "J.-Hammond",
                        "structuredName": {
                            "firstName": "Jeff",
                            "lastName": "Hammond",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hammond"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144000027"
                        ],
                        "name": "J. Stanton",
                        "slug": "J.-Stanton",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Stanton",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Stanton"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1700326"
                        ],
                        "name": "J. Demmel",
                        "slug": "J.-Demmel",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Demmel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Demmel"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 15039006,
            "fieldsOfStudy": [
                "Computer Science",
                "Chemistry"
            ],
            "id": "f20340ebc8f466fc10b46015ccfc6dfaa61ea40f",
            "isKey": false,
            "numCitedBy": 138,
            "numCiting": 62,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "A-massively-parallel-tensor-contraction-framework-Solomonik-Matthews",
            "title": {
                "fragments": [],
                "text": "A massively parallel tensor contraction framework for coupled-cluster computations"
            },
            "venue": {
                "fragments": [],
                "text": "J. Parallel Distributed Comput."
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144211012"
                        ],
                        "name": "A. Bik",
                        "slug": "A.-Bik",
                        "structuredName": {
                            "firstName": "Aart",
                            "lastName": "Bik",
                            "middleNames": [
                                "J.",
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Bik"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1706624"
                        ],
                        "name": "H. Wijshoff",
                        "slug": "H.-Wijshoff",
                        "structuredName": {
                            "firstName": "Harry",
                            "lastName": "Wijshoff",
                            "middleNames": [
                                "A.",
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Wijshoff"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 10722640,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "178229df005f10e346465a06ca13d3396af50ab3",
            "isKey": false,
            "numCitedBy": 76,
            "numCiting": 17,
            "paperAbstract": {
                "fragments": [],
                "text": "The problem of compiler optimization of sparse codes is well known and no satisfactory solutions have been found yet. One of the major obstacles is formed by the fact that sparse programs deal explicitly with the particular data structures selected for storing sparse matrices. This explicit data structure handling obscures the functionality of a code to such a degree that the optimization of the code is prohibited, e.g. by the introduction of indirect addressing. The method presented in this paper postpones data structure selection until the compile phase, thereby allowing the compiler to combine code optimization with explicit data structure selection. Not only enables this method the compiler to generate efficient code for sparse computations, also the task of the programmer is greatly reduced in complexity."
            },
            "slug": "Compilation-techniques-for-sparse-matrix-Bik-Wijshoff",
            "title": {
                "fragments": [],
                "text": "Compilation techniques for sparse matrix computations"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "The method presented in this paper postpones data structure selection until the compile phase, thereby allowing the compiler to combine code optimization with explicitData structure selection, and the task of the programmer is greatly reduced in complexity."
            },
            "venue": {
                "fragments": [],
                "text": "ICS '93"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2781614"
                        ],
                        "name": "Anand Venkat",
                        "slug": "Anand-Venkat",
                        "structuredName": {
                            "firstName": "Anand",
                            "lastName": "Venkat",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Anand Venkat"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143896454"
                        ],
                        "name": "Mary W. Hall",
                        "slug": "Mary-W.-Hall",
                        "structuredName": {
                            "firstName": "Mary",
                            "lastName": "Hall",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mary W. Hall"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709408"
                        ],
                        "name": "M. Strout",
                        "slug": "M.-Strout",
                        "structuredName": {
                            "firstName": "Michelle",
                            "lastName": "Strout",
                            "middleNames": [
                                "Mills"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Strout"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 14138730,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3563be7789459d88bec67844f4dcdf22703eed7b",
            "isKey": false,
            "numCitedBy": 74,
            "numCiting": 51,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper introduces three new compiler transformations for representing and transforming sparse matrix computations and their data representations. In cooperation with run-time inspection, our compiler derives transformed matrix representations and associated transformed code to implement a variety of representations targeting different architecture platforms. This systematic approach to combining code and data transformations on sparse computations, which extends a polyhedral transformation and code generation framework, permits the compiler to compose these transformations with other transformations to generate code that is on average within 5% and often exceeds manually-tuned, high-performance sparse matrix libraries CUSP and OSKI. Additionally, the compiler-generated inspector codes are on average 1.5 faster than OSKI and perform comparably to CUSP, respectively."
            },
            "slug": "Loop-and-data-transformations-for-sparse-matrix-Venkat-Hall",
            "title": {
                "fragments": [],
                "text": "Loop and data transformations for sparse matrix code"
            },
            "tldr": {
                "abstractSimilarityScore": 65,
                "text": "Three new compiler transformations for representing and transforming sparse matrix computations and their data representations are introduced, which permits the compiler to compose these transformations with other transformations to generate code that is on average within 5% and often exceeds manually-tuned, high-performance sparse matrix libraries CUSP and OSKI."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI 2015"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3223763"
                        ],
                        "name": "P. Stodghill",
                        "slug": "P.-Stodghill",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Stodghill",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Stodghill"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 60856854,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "016c7ea7ae3a5904dcc70f3ae021b8515e43c869",
            "isKey": false,
            "numCitedBy": 30,
            "numCiting": 100,
            "paperAbstract": {
                "fragments": [],
                "text": "This thesis presents techniques for automatically generating sparse codes from dense matrix algorithms through a process called \\emph{sparse compilation}. We will start by recognizing that sparse computations are ubiquitous to scientific computation, that these codes are difficult to write by hand, and that they are difficult for conventional compilers to optimize. We will present the sparse compiler as an alternative to writing these codes by hand or using sparse libraries. We will show how many aspects of sparse compilation can be modeled in terms of relational database concepts, These include the following: queries to express sparse computations, relations to model sparse matrices, the join operation to model simultaneous efficient access of sparse matrices. Using this model, the problem of sparse compilation can be seen as an instance of the query optimization problem. We will discuss two basic strategies for sparse compilation based upon this relational approach. One strategy is targeted towards algorithms that can be described using inner join queries, which include matrix-vector multiplication and matrix-matrix multiplication. This approach is the one that we have currently implemented. The other can handle a larger class of dependence-free matrix algorithms. Although it is more general, the latter approach introduced does not generate as efficient code for some problems as the former approach. We will show that these two approaches are grounded in properties of the relational algebra and draw connections with previous work that has been described in the database literature. We also discuss how conventional dense optimizations and fill can be handled within the overall relational framework. We will discuss the Bernoulli Sparse Compiler and use experimental results to show that this system is able to generate sparse implementations from non-trivial dense matrix algorithms that are as efficient as hand-written codes. In addition, this compiler provides a novel mechanism that allows the user to extend its repertoire of sparse matrix storage formats. Thus, the user is not only able to choose the data structures for storing the sparse matrices, but to describe these data structures as well."
            },
            "slug": "A-Relational-Approach-to-the-Automatic-Generation-Stodghill",
            "title": {
                "fragments": [],
                "text": "A Relational Approach to the Automatic Generation of Sequential Sparse matrix Codes"
            },
            "tldr": {
                "abstractSimilarityScore": 69,
                "text": "This thesis presents techniques for automatically generating sparse codes from dense matrix algorithms through a process called sparse compilation, and discusses the Bernoulli Sparse Compiler, which provides a novel mechanism that allows the user to extend its repertoire of sparse matrix storage formats."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1997
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144542378"
                        ],
                        "name": "A. Auer",
                        "slug": "A.-Auer",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Auer",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Auer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40204034"
                        ],
                        "name": "Gerald Baumgartner",
                        "slug": "Gerald-Baumgartner",
                        "structuredName": {
                            "firstName": "Gerald",
                            "lastName": "Baumgartner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Gerald Baumgartner"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1785240"
                        ],
                        "name": "D. Bernholdt",
                        "slug": "D.-Bernholdt",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Bernholdt",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Bernholdt"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1932492"
                        ],
                        "name": "Alina Bibireata",
                        "slug": "Alina-Bibireata",
                        "structuredName": {
                            "firstName": "Alina",
                            "lastName": "Bibireata",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alina Bibireata"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1702919"
                        ],
                        "name": "Venkatesh Choppella",
                        "slug": "Venkatesh-Choppella",
                        "structuredName": {
                            "firstName": "Venkatesh",
                            "lastName": "Choppella",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Venkatesh Choppella"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1703022"
                        ],
                        "name": "D. Cociorva",
                        "slug": "D.-Cociorva",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Cociorva",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Cociorva"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1790689"
                        ],
                        "name": "X. Gao",
                        "slug": "X.-Gao",
                        "structuredName": {
                            "firstName": "Xiaoyang",
                            "lastName": "Gao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "X. Gao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145253928"
                        ],
                        "name": "R. Harrison",
                        "slug": "R.-Harrison",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Harrison",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Harrison"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144497869"
                        ],
                        "name": "S. Krishnamoorthy",
                        "slug": "S.-Krishnamoorthy",
                        "structuredName": {
                            "firstName": "Sriram",
                            "lastName": "Krishnamoorthy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Krishnamoorthy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144653209"
                        ],
                        "name": "S. Krishnan",
                        "slug": "S.-Krishnan",
                        "structuredName": {
                            "firstName": "Sandhya",
                            "lastName": "Krishnan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Krishnan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "7468179"
                        ],
                        "name": "Chi-Chung Lam",
                        "slug": "Chi-Chung-Lam",
                        "structuredName": {
                            "firstName": "Chi-Chung",
                            "lastName": "Lam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chi-Chung Lam"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2421750"
                        ],
                        "name": "Q. Lu",
                        "slug": "Q.-Lu",
                        "structuredName": {
                            "firstName": "Qingda",
                            "lastName": "Lu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Q. Lu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3182301"
                        ],
                        "name": "M. Nooijen",
                        "slug": "M.-Nooijen",
                        "structuredName": {
                            "firstName": "Marcel",
                            "lastName": "Nooijen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Nooijen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49508542"
                        ],
                        "name": "R. Pitzer",
                        "slug": "R.-Pitzer",
                        "structuredName": {
                            "firstName": "Russell",
                            "lastName": "Pitzer",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Pitzer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145981817"
                        ],
                        "name": "J. Ramanujam",
                        "slug": "J.-Ramanujam",
                        "structuredName": {
                            "firstName": "J.",
                            "lastName": "Ramanujam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Ramanujam"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145293384"
                        ],
                        "name": "P. Sadayappan",
                        "slug": "P.-Sadayappan",
                        "structuredName": {
                            "firstName": "P.",
                            "lastName": "Sadayappan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Sadayappan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2893551"
                        ],
                        "name": "A. Sibiryakov",
                        "slug": "A.-Sibiryakov",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Sibiryakov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Sibiryakov"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 90,
                                "start": 72
                            }
                        ],
                        "text": "In quantum chemistry, an early effort was the Tensor Contraction Engine [Auer et al. 2006], which is a compiler framework developed to automatically optimize dense tensor contractions (multiplications) in the NWChem software."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 29,
                                "start": 4
                            }
                        ],
                        "text": "The Tensor Contraction Engine [7] is a framework for automated optimization of dense tensor contractions developed for the quantum chemistry simulation software NWChem."
                    },
                    "intents": []
                }
            ],
            "corpusId": 6886805,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "70da6a5e4b90253cafa917b9824efe034717f47b",
            "isKey": false,
            "numCitedBy": 109,
            "numCiting": 199,
            "paperAbstract": {
                "fragments": [],
                "text": "As both electronic structure methods and the computers on which they are run become increasingly complex, the task of producing robust, reliable, high-performance implementations of methods at a rapid pace becomes increasingly daunting. In this paper we present an overview of the Tensor Contraction Engine (TCE), a unique effort to address issues of both productivity and performance through automatic code generation. The TCE is designed to take equations for many-body methods in a convenient high-level form and acts like an optimizing compiler, producing an implementation tuned to the target computer system and even to the specific chemical problem of interest. We provide examples to illustrate the TCE approach, including the ability to target different parallel programming models, and the effects of particular optimizations."
            },
            "slug": "Automatic-code-generation-for-many-body-electronic-Auer-Baumgartner",
            "title": {
                "fragments": [],
                "text": "Automatic code generation for many-body electronic structure methods: the tensor contraction engine"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "An overview of the Tensor Contraction Engine (TCE), a unique effort to address issues of both productivity and performance through automatic code generation that acts like an optimizing compiler."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2006
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2238795"
                        ],
                        "name": "A. Bulu\u00e7",
                        "slug": "A.-Bulu\u00e7",
                        "structuredName": {
                            "firstName": "Ayd\u0131n",
                            "lastName": "Bulu\u00e7",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Bulu\u00e7"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145428555"
                        ],
                        "name": "J. Gilbert",
                        "slug": "J.-Gilbert",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Gilbert",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Gilbert"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 397084,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3edef062698ab35fbe4cc5a5ffce633e09f8b6f2",
            "isKey": false,
            "numCitedBy": 169,
            "numCiting": 36,
            "paperAbstract": {
                "fragments": [],
                "text": "Multicore processors are marking the beginning of a new era of computing where massive parallelism is available and necessary. Slightly slower but easy to parallelize kernels are becoming more valuable than sequentially faster kernels that are unscalable when parallelized. In this paper, we focus on the multiplication of sparse matrices (SpGEMM). We first present the issues with existing sparse matrix representations and multiplication algorithms that make them unscalable to thousands of processors. Then, we develop and analyze two new algorithms that overcome these limitations. We consider our algorithms first as the sequential kernel of a scalable parallel sparse matrix multiplication algorithm and second as part of a polyalgorithm for SpGEMM that would execute different kernels depending on the sparsity of the input matrices. Such a sequential kernel requires a new data structure that exploits the hypersparsity of the individual submatrices owned by a single processor after the 2D partitioning. We experimentally evaluate the performance and characteristics of our algorithms and show that they scale significantly better than existing kernels."
            },
            "slug": "On-the-representation-and-multiplication-of-Bulu\u00e7-Gilbert",
            "title": {
                "fragments": [],
                "text": "On the representation and multiplication of hypersparse matrices"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "This paper develops and analyzes two new algorithms that scale significantly better than existing kernels on the multiplication of sparse matrices (SpGEMM) and considers their algorithms first as the sequential kernel of a scalable parallel sparse matrix multiplication algorithm and second as part of a polyalgorithm that would execute different kernels depending on the sparsity of the input matrices."
            },
            "venue": {
                "fragments": [],
                "text": "2008 IEEE International Symposium on Parallel and Distributed Processing"
            },
            "year": 2008
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144211012"
                        ],
                        "name": "A. Bik",
                        "slug": "A.-Bik",
                        "structuredName": {
                            "firstName": "Aart",
                            "lastName": "Bik",
                            "middleNames": [
                                "J.",
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Bik"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1706624"
                        ],
                        "name": "H. Wijshoff",
                        "slug": "H.-Wijshoff",
                        "structuredName": {
                            "firstName": "Harry",
                            "lastName": "Wijshoff",
                            "middleNames": [
                                "A.",
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Wijshoff"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 5939177,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a3b049e2bd96d92bdef3f262b16bcb77140132f5",
            "isKey": false,
            "numCitedBy": 38,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "Traditionally restructuring compilers were only able to apply program transformations in order to exploit certain characteristics of the target architecture. Adaptation of data structures was limited to e.g. linearization or transposing of arrays. However, as more complex data structures are required to exploit characteristics of the data operated on, current compiler support appears to be inappropriate. In this paper we present the implementation issues of a restructuring compiler that automatically converts programs operating on dense matrices into sparse code, i.e. after a suited data structure has been selected for every dense matrix that in fact is sparse, the original code is adapted to operate on these data structures. This simplifies the task of the programmer and, in general, enables the compiler to apply more optimizations."
            },
            "slug": "On-Automatic-Data-Structure-Selection-and-Code-for-Bik-Wijshoff",
            "title": {
                "fragments": [],
                "text": "On Automatic Data Structure Selection and Code Generation for Sparse Computations"
            },
            "tldr": {
                "abstractSimilarityScore": 47,
                "text": "This paper presents the implementation issues of a restructuring compiler that automatically converts programs operating on dense matrices into sparse code, i.e. after a suited data structure has been selected for every dense matrix that in fact is sparse, which simplifies the task of the programmer and enables the compiler to apply more optimizations."
            },
            "venue": {
                "fragments": [],
                "text": "LCPC"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145117071"
                        ],
                        "name": "Samuel Williams",
                        "slug": "Samuel-Williams",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Williams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Samuel Williams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1757847"
                        ],
                        "name": "L. Oliker",
                        "slug": "L.-Oliker",
                        "structuredName": {
                            "firstName": "Leonid",
                            "lastName": "Oliker",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Oliker"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1771649"
                        ],
                        "name": "R. Vuduc",
                        "slug": "R.-Vuduc",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Vuduc",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Vuduc"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1746446"
                        ],
                        "name": "J. Shalf",
                        "slug": "J.-Shalf",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Shalf",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Shalf"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1731111"
                        ],
                        "name": "K. Yelick",
                        "slug": "K.-Yelick",
                        "structuredName": {
                            "firstName": "Katherine",
                            "lastName": "Yelick",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Yelick"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1700326"
                        ],
                        "name": "J. Demmel",
                        "slug": "J.-Demmel",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Demmel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Demmel"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1845814,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8138ab11231447708f13d1a593389ded2b845b1b",
            "isKey": false,
            "numCitedBy": 530,
            "numCiting": 42,
            "paperAbstract": {
                "fragments": [],
                "text": "We are witnessing a dramatic change in computer architecture due to the multicore paradigm shift, as every electronic device from cell phones to supercomputers confronts parallelism of unprecedented scale. To fully unleash the potential of these systems, the HPC community must develop multicore specific optimization methodologies for important scientific computations. In this work, we examine sparse matrix-vector multiply (SpMV) - one of the most heavily used kernels in scientific computing - across a broad spectrum of multicore designs. Our experimental platform includes the homogeneous AMD dual-core and Intel quad-core designs, the heterogeneous STI Cell, as well as the first scientific study of the highly multithreaded Sun Niagara2. We present several optimization strategies especially effective for the multicore environment, and demonstrate significant performance improvements compared to existing state-of-the-art serial and parallel SpMV implementations. Additionally, we present key insights into the architectural tradeoffs of leading multicore design strategies, in the context of demanding memory-bound numerical algorithms."
            },
            "slug": "Optimization-of-sparse-matrix-vector-multiplication-Williams-Oliker",
            "title": {
                "fragments": [],
                "text": "Optimization of sparse matrix-vector multiplication on emerging multicore platforms"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This work examines sparse matrix-vector multiply (SpMV) - one of the most heavily used kernels in scientific computing - across a broad spectrum of multicore designs, and presents several optimization strategies especially effective for the multicore environment."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the 2007 ACM/IEEE Conference on Supercomputing (SC '07)"
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1708363"
                        ],
                        "name": "Jong-Ho Byun",
                        "slug": "Jong-Ho-Byun",
                        "structuredName": {
                            "firstName": "Jong-Ho",
                            "lastName": "Byun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jong-Ho Byun"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153596406"
                        ],
                        "name": "Richard Lin",
                        "slug": "Richard-Lin",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Lin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Richard Lin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1731111"
                        ],
                        "name": "K. Yelick",
                        "slug": "K.-Yelick",
                        "structuredName": {
                            "firstName": "Katherine",
                            "lastName": "Yelick",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Yelick"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1700326"
                        ],
                        "name": "J. Demmel",
                        "slug": "J.-Demmel",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Demmel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Demmel"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 24,
                                "start": 6
                            }
                        ],
                        "text": "pOSKI [Byun et al. 2012] is another library that is built on top of OSKI and implements a number of parallel optimizations from Williams [2007]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 138,
                                "start": 101
                            }
                        ],
                        "text": "OSKI and the parallel pOSKI are well-known libraries that support auto-tuning of some sparse kernels [Byun et al. 2012; Vuduc et al. 2005]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 7922658,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "122f5b27158718f7c94aa62342b1babb8b8af6f4",
            "isKey": false,
            "numCitedBy": 34,
            "numCiting": 43,
            "paperAbstract": {
                "fragments": [],
                "text": "Sparse matrix-vector multiplication (SpMV) is an important kernel in scientific and engineering computing. Straightforward parallel implementations of SpMV often perform poorly, and with the increasing variety of architectural features in multicore processors, it is getting more difficult to determine the sparse matrix data structure and corresponding SpMV implementation that optimize performance. In this paper we present pOSKI, an autotuning system for SpMV that automatically searches over a large set of possible data structures and implementations to optimize SpMV performance on multicore platforms. pOSKI explores a design space that depends on both the nonzero pattern of the sparse matrix, typically not known until run-time, and the architecture, which is explored off-line as much as possible, in order to reduce tuning time. We demonstrate significant performance improvements compared to previous serial and parallel implementations, and compare performance to upper bounds based on architectural models. General Terms: Design, Experimentation, Performance Additional"
            },
            "slug": "Autotuning-Sparse-Matrix-Vector-Multiplication-for-Byun-Lin",
            "title": {
                "fragments": [],
                "text": "Autotuning Sparse Matrix-Vector Multiplication for Multicore"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2290932"
                        ],
                        "name": "Fredrik Kjolstad",
                        "slug": "Fredrik-Kjolstad",
                        "structuredName": {
                            "firstName": "Fredrik",
                            "lastName": "Kjolstad",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Fredrik Kjolstad"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145683292"
                        ],
                        "name": "S. Kamil",
                        "slug": "S.-Kamil",
                        "structuredName": {
                            "firstName": "Shoaib",
                            "lastName": "Kamil",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kamil"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143774460"
                        ],
                        "name": "David I. W. Levin",
                        "slug": "David-I.-W.-Levin",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Levin",
                            "middleNames": [
                                "I.",
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David I. W. Levin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35315389"
                        ],
                        "name": "S. Sueda",
                        "slug": "S.-Sueda",
                        "structuredName": {
                            "firstName": "Shinjiro",
                            "lastName": "Sueda",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Sueda"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1701750"
                        ],
                        "name": "Desai Chen",
                        "slug": "Desai-Chen",
                        "structuredName": {
                            "firstName": "Desai",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Desai Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143614752"
                        ],
                        "name": "E. Vouga",
                        "slug": "E.-Vouga",
                        "structuredName": {
                            "firstName": "Etienne",
                            "lastName": "Vouga",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Vouga"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145794288"
                        ],
                        "name": "D. Kaufman",
                        "slug": "D.-Kaufman",
                        "structuredName": {
                            "firstName": "Danny",
                            "lastName": "Kaufman",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Kaufman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144751471"
                        ],
                        "name": "G. Kanwar",
                        "slug": "G.-Kanwar",
                        "structuredName": {
                            "firstName": "Gurtej",
                            "lastName": "Kanwar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Kanwar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1752521"
                        ],
                        "name": "W. Matusik",
                        "slug": "W.-Matusik",
                        "structuredName": {
                            "firstName": "Wojciech",
                            "lastName": "Matusik",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Matusik"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1902372,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b08494ed65f349de2b811db408d6f1420db2dc1e",
            "isKey": false,
            "numCitedBy": 45,
            "numCiting": 78,
            "paperAbstract": {
                "fragments": [],
                "text": "With existing programming tools, writing high-performance simulation code is labor intensive and requires sacrificing readability and portability. The alternative is to prototype simulations in a high-level language like Matlab, thereby sacrificing performance. The Matlab programming model naturally describes the behavior of an entire physical system using the language of linear algebra. However, simulations also manipulate individual geometric elements, which are best represented using linked data structures like meshes. Translating between the linked data structures and linear algebra comes at significant cost, both to the programmer and to the machine. High-performance implementations avoid the cost by rephrasing the computation in terms of linked or index data structures, leaving the code complicated and monolithic, often increasing its size by an order of magnitude. In this article, we present Simit, a new language for physical simulations that lets the programmer view the system both as a linked data structure in the form of a hypergraph and as a set of global vectors, matrices, and tensors depending on what is convenient at any given time. Simit provides a novel assembly construct that makes it conceptually easy and computationally efficient to move between the two abstractions. Using the information provided by the assembly construct, the compiler generates efficient in-place computation on the graph. We demonstrate that Simit is easy to use: a Simit program is typically shorter than a Matlab program; that it is high performance: a Simit program running sequentially on a CPU performs comparably to hand-optimized simulations; and that it is portable: Simit programs can be compiled for GPUs with no change to the program, delivering 4 to 20\u00d7 speedups over our optimized CPU code."
            },
            "slug": "Simit:-A-Language-for-Physical-Simulation-Kjolstad-Kamil",
            "title": {
                "fragments": [],
                "text": "Simit: A Language for Physical Simulation"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "Simit is a new language for physical simulations that lets the programmer view the system both as a linked data structure in the form of a hypergraph and as a set of global vectors, matrices, and tensors depending on what is convenient at any given time."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Trans. Graph."
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143607407"
                        ],
                        "name": "V. Kotlyar",
                        "slug": "V.-Kotlyar",
                        "structuredName": {
                            "firstName": "Vladimir",
                            "lastName": "Kotlyar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Kotlyar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1776186"
                        ],
                        "name": "K. Pingali",
                        "slug": "K.-Pingali",
                        "structuredName": {
                            "firstName": "Keshav",
                            "lastName": "Pingali",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Pingali"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3223763"
                        ],
                        "name": "P. Stodghill",
                        "slug": "P.-Stodghill",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Stodghill",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Stodghill"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1383943,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6866a757d2af504557f9dd31b349e662713e9482",
            "isKey": false,
            "numCitedBy": 64,
            "numCiting": 20,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a relational algebra based framework for compiling efficient sparse matrix code from dense DO-ANY loops and a specification of the representation of the sparse matrix. We present experimental data that demonstrates that the code generated by our compiler achieves performance competitive with that of hand-written codes for important computational kernels."
            },
            "slug": "A-Relational-Approach-to-the-Compilation-of-Sparse-Kotlyar-Pingali",
            "title": {
                "fragments": [],
                "text": "A Relational Approach to the Compilation of Sparse Matrix Programs"
            },
            "tldr": {
                "abstractSimilarityScore": 93,
                "text": "A relational algebra based framework for compiling efficient sparse matrix code from dense DO-ANY loops and a specification of the representation of the sparse matrix is presented."
            },
            "venue": {
                "fragments": [],
                "text": "Euro-Par"
            },
            "year": 1997
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2781614"
                        ],
                        "name": "Anand Venkat",
                        "slug": "Anand-Venkat",
                        "structuredName": {
                            "firstName": "Anand",
                            "lastName": "Venkat",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Anand Venkat"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143943323"
                        ],
                        "name": "M. Mohammadi",
                        "slug": "M.-Mohammadi",
                        "structuredName": {
                            "firstName": "Mahdi",
                            "lastName": "Mohammadi",
                            "middleNames": [
                                "Soltan"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Mohammadi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1686843"
                        ],
                        "name": "Jongsoo Park",
                        "slug": "Jongsoo-Park",
                        "structuredName": {
                            "firstName": "Jongsoo",
                            "lastName": "Park",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jongsoo Park"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3191917"
                        ],
                        "name": "Hongbo Rong",
                        "slug": "Hongbo-Rong",
                        "structuredName": {
                            "firstName": "Hongbo",
                            "lastName": "Rong",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hongbo Rong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1721712"
                        ],
                        "name": "R. Barik",
                        "slug": "R.-Barik",
                        "structuredName": {
                            "firstName": "Rajkishore",
                            "lastName": "Barik",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Barik"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709408"
                        ],
                        "name": "M. Strout",
                        "slug": "M.-Strout",
                        "structuredName": {
                            "firstName": "Michelle",
                            "lastName": "Strout",
                            "middleNames": [
                                "Mills"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Strout"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143896454"
                        ],
                        "name": "Mary W. Hall",
                        "slug": "Mary-W.-Hall",
                        "structuredName": {
                            "firstName": "Mary",
                            "lastName": "Hall",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mary W. Hall"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 31059518,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f98f6a265401d1305bd7a35ceb747b86b4bd9b89",
            "isKey": false,
            "numCitedBy": 45,
            "numCiting": 59,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper presents a compiler and runtime framework for parallelizing sparse matrix computations that have loop-carried dependences. Our approach automatically generates a runtime inspector to collect data dependence information and achieves wavefront parallelization of the computation, where iterations within a wavefront execute in parallel, and synchronization is required across wavefronts. A key contribution of this paper involves dependence simplification, which reduces the time and space overhead of the inspector. This is implemented within a polyhedral compiler framework, extended for sparse matrix codes. Results demonstrate the feasibility of using automatically-generated inspectors and executors to optimize ILU factorization and symmetric Gauss-Seidel relaxations, which are part of the Preconditioned Conjugate Gradient (PCG) computation. Our implementation achieves a median speedup of 2.97\u00d7 on 12 cores over the reference sequential PCG implementation, significantly outperforms PCG parallelized using Intel's Math Kernel Library (MKL), and is within 6% of the median performance of manually-parallelized PCG."
            },
            "slug": "Automating-Wavefront-Parallelization-for-Sparse-Venkat-Mohammadi",
            "title": {
                "fragments": [],
                "text": "Automating Wavefront Parallelization for Sparse Matrix Computations"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "Results demonstrate the feasibility of using automatically-generated inspectors and executors to optimize ILU factorization and symmetric Gauss-Seidel relaxations, which are part of the Preconditioned Conjugate Gradient (PCG) computation."
            },
            "venue": {
                "fragments": [],
                "text": "SC16: International Conference for High Performance Computing, Networking, Storage and Analysis"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1830581"
                        ],
                        "name": "Scott Thibault",
                        "slug": "Scott-Thibault",
                        "structuredName": {
                            "firstName": "Scott",
                            "lastName": "Thibault",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Scott Thibault"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35105210"
                        ],
                        "name": "L. Mullin",
                        "slug": "L.-Mullin",
                        "structuredName": {
                            "firstName": "Lenore",
                            "lastName": "Mullin",
                            "middleNames": [
                                "M.",
                                "Restifo"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Mullin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1933790"
                        ],
                        "name": "M. Insall",
                        "slug": "M.-Insall",
                        "structuredName": {
                            "firstName": "Matt",
                            "lastName": "Insall",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Insall"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 18738262,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d2b42fa556301b94ec2d906a1fcfb1f5978f868e",
            "isKey": false,
            "numCitedBy": 3,
            "numCiting": 4,
            "paperAbstract": {
                "fragments": [],
                "text": "There are many applications involving arrays that contain non-zero components in regular geometric partitions. These include triangular, diagonal, tridiagonal, banded, etc. When computing with this type of arrays, they are usually stored in a packed form and computations are performed with only the non-zero components. This packed form requires an indexing function that maps an index of the array to an index of the packed lexico-graphically stored array. This paper presents a method of describing regular partitions and of automatically generating an indexing function from that description. These methods enable an array compiler to compile array operations on these type of arrays in an eecient manner."
            },
            "slug": "Generating-Indexing-Functions-of-Regularly-Sparse-Thibault-Mullin",
            "title": {
                "fragments": [],
                "text": "Generating Indexing Functions of Regularly Sparse Arrays for Array Compilers"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "This paper presents a method of describing regular partitions and of automatically generating an indexing function from that description, which enable an array compiler to compile array operations on these type of arrays in an eecient manner."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49979232"
                        ],
                        "name": "S. Balay",
                        "slug": "S.-Balay",
                        "structuredName": {
                            "firstName": "Satish",
                            "lastName": "Balay",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Balay"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1703559"
                        ],
                        "name": "W. Gropp",
                        "slug": "W.-Gropp",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Gropp",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Gropp"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1763017"
                        ],
                        "name": "L. McInnes",
                        "slug": "L.-McInnes",
                        "structuredName": {
                            "firstName": "Lois",
                            "lastName": "McInnes",
                            "middleNames": [
                                "Curfman"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. McInnes"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40563778"
                        ],
                        "name": "Barry F. Smith",
                        "slug": "Barry-F.-Smith",
                        "structuredName": {
                            "firstName": "Barry",
                            "lastName": "Smith",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Barry F. Smith"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 36,
                                "start": 17
                            }
                        ],
                        "text": "2010], and PETSc [Balay et al. 1997] have become popular for computing with sparse matrices."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 82,
                                "start": 77
                            }
                        ],
                        "text": "However, their sparse matrix formats are limited to coordinate, CSR and CSC. PETSc targets distributed systems and scientific computing."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 59,
                                "start": 54
                            }
                        ],
                        "text": "More recently MATLAB [28], Julia [13], Eigen [20] and PETSc [11] have become popular for computing with sparse matrices."
                    },
                    "intents": []
                }
            ],
            "corpusId": 56520908,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5b54329e22a8c08fd0ee7d21c8dd89b592be8539",
            "isKey": false,
            "numCitedBy": 2042,
            "numCiting": 13,
            "paperAbstract": {
                "fragments": [],
                "text": "Parallel numerical software based on the message passing model is enormously complicated. This paper introduces a set of techniques to manage the complexity, while maintaining high efficiency and ease of use. The PETSc 2.0 package uses object-oriented programming to conceal the details of the message passing, without concealing the parallelism, in a high-quality set of numerical software libraries. In fact, the programming model used by PETSc is also the most appropriate for NUMA shared-memory machines, since they require the same careful attention to memory hierarchies as do distributed-memory machines. Thus, the concepts discussed are appropriate for all scalable computing systems. The PETSc libraries provide many of the data structures and numerical kernels required for the scalable solution of PDEs, offering performance portability."
            },
            "slug": "Efficient-Management-of-Parallelism-in-Numerical-Balay-Gropp",
            "title": {
                "fragments": [],
                "text": "Efficient Management of Parallelism in Object-Oriented Numerical Software Libraries"
            },
            "tldr": {
                "abstractSimilarityScore": 37,
                "text": "The concepts discussed are appropriate for all scalable computing systems and provide many of the data structures and numerical kernels required for the scalable solution of PDEs, offering performance portability."
            },
            "venue": {
                "fragments": [],
                "text": "SciTools"
            },
            "year": 1996
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144022269"
                        ],
                        "name": "W. Pugh",
                        "slug": "W.-Pugh",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Pugh",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Pugh"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1774432"
                        ],
                        "name": "T. Shpeisman",
                        "slug": "T.-Shpeisman",
                        "structuredName": {
                            "firstName": "Tatiana",
                            "lastName": "Shpeisman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Shpeisman"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 206632465,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "9689ba2d4673a39cb9bdfb9802660d6acf427704",
            "isKey": false,
            "numCitedBy": 39,
            "numCiting": 16,
            "paperAbstract": {
                "fragments": [],
                "text": "Developing computational codes that compute with sparse matrices is a difficult and error-prone process. Automatic generation of sparse code from the corresponding dense version would simplify the programmer's task, provided that a compiler-generated code is fast enough to be used instead of a hand-written code. We propose a new Sparse Intermediate Program Representation (SIPR) that separates the issue of maintaining complicated data structures from the actual matrix computations to be performed. Cost analysis of SIPR allows for the prediction of the program efficiency, and provides a solid basis for choosing efficient sparse implementations among many possible ones. The SIPR framework allows the use of techniques that are frequently used in the handwritten codes but previously were not considered for compiler-generated codes due to their complexity. We have developed tools that allow the automatic generation of efficient C++ implementations from SIPR, and describe experimental results on the performance of those implementations."
            },
            "slug": "SIPR:-A-New-Framework-for-Generating-Efficient-Code-Pugh-Shpeisman",
            "title": {
                "fragments": [],
                "text": "SIPR: A New Framework for Generating Efficient Code for Sparse Matrix Computations"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "A new Sparse Intermediate Program Representation (SIPR) is proposed that separates the issue of maintaining complicated data structures from the actual matrix computations to be performed, and provides a solid basis for choosing efficient sparse implementations among many possible ones."
            },
            "venue": {
                "fragments": [],
                "text": "LCPC"
            },
            "year": 1998
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "10214063"
                        ],
                        "name": "M. E. Wolf",
                        "slug": "M.-E.-Wolf",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Wolf",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. E. Wolf"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39682108"
                        ],
                        "name": "M. Lam",
                        "slug": "M.-Lam",
                        "structuredName": {
                            "firstName": "Monica",
                            "lastName": "Lam",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Lam"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 52798160,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f4dff66ba8f2338d118f379f2eff1410feb57ce6",
            "isKey": false,
            "numCitedBy": 1199,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper proposes an algorithm that improves the locality of a loop nest by transforming the code via interchange, reversal, skewing and tiling. The loop transformation algorithm is based on two concepts: a mathematical formulation of reuse and locality, and a loop transformation theory that unifies the various transforms as unimodular matrix transformations.The algorithm has been implemented in the SUIF (Stanford University Intermediate Format) compiler, and is successful in optimizing codes such as matrix multiplication, successive over-relaxation (SOR), LU decomposition without pivoting, and Givens QR factorization. Performance evaluation indicates that locality optimization is especially crucial for scaling up the performance of parallel code."
            },
            "slug": "A-data-locality-optimizing-algorithm-Wolf-Lam",
            "title": {
                "fragments": [],
                "text": "A data locality optimizing algorithm"
            },
            "tldr": {
                "abstractSimilarityScore": 63,
                "text": "An algorithm that improves the locality of a loop nest by transforming the code via interchange, reversal, skewing and tiling is proposed, and is successful in optimizing codes such as matrix multiplication, successive over-relaxation, LU decomposition without pivoting, and Givens QR factorization."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI '91"
            },
            "year": 1991
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144228552"
                        ],
                        "name": "C. Sanderson",
                        "slug": "C.-Sanderson",
                        "structuredName": {
                            "firstName": "Conrad",
                            "lastName": "Sanderson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Sanderson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 17189151,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4fd74b807b47a5975e9b0ab354bfd780e0d921d2",
            "isKey": false,
            "numCitedBy": 436,
            "numCiting": 28,
            "paperAbstract": {
                "fragments": [],
                "text": "In this report we provide an overview of the open source Armadillo C++ linear algebra library (matrix maths). The library aims to have a good balance between speed and ease of use, and is useful if C++ is the language of choice (due to speed and/or integration capabilities), rather than another language like Matlab or Octave. In particular, Armadillo can be used for fast prototyping and computationally intensive experiments, while at the same time allowing for relatively painless transition of research code into production environments. It is distributed under a license that is applicable in both open source and proprietary software development contexts. The library supports integer, floating point and complex numbers, as well as a subset of trigonometric and statistics functions. Various matrix decompositions are provided through optional integration with LAPACK, or one its high-performance drop-in replacements, such as MKL from Intel or ACML from AMD. A delayed evaluation approach is employed (during compile time) to combine several operations into one and reduce (or eliminate) the need for temporaries. This is accomplished through C++ template meta-programming. Performance comparisons suggest that the library is considerably faster than Matlab and Octave, as well as previous C++ libraries such as IT++ and Newmat. This report reflects a subset of the functionality present in Armadillo 0.9.92."
            },
            "slug": "Armadillo:-An-Open-Source-C++-Linear-Algebra-for-Sanderson",
            "title": {
                "fragments": [],
                "text": "Armadillo: An Open Source C++ Linear Algebra Library for Fast Prototyping and Computationally Intensive Experiments"
            },
            "tldr": {
                "abstractSimilarityScore": 52,
                "text": "An overview of the open source Armadillo C++ linear algebra library (matrix maths) is provided, which can be used for fast prototyping and computationally intensive experiments, while at the same time allowing for relatively painless transition of research code into production environments."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "27057439"
                        ],
                        "name": "J. McNamee",
                        "slug": "J.-McNamee",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "McNamee",
                            "middleNames": [
                                "Michael"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. McNamee"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 40232757,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "430fa1802c54cae3bed1b978fe1c645c35087286",
            "isKey": false,
            "numCitedBy": 31,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Description It is frequently necessary to manipulate large sparse matrices, for example in electrical network problems. In such cases much time and memory space can be saved if only the nonzero elements are stored. A set of Fortran subroutines has been written for performing various operations on sparse matrices stored in compact form in core. Core storage requirement is reduced for any square matrix less than 66 percent dense. These subroutines have been tested on an ZBM 360/50 using a \"WATFOR\" compiler."
            },
            "slug": "Algorithm-408:-a-sparse-matrix-package-(part-I)-McNamee",
            "title": {
                "fragments": [],
                "text": "Algorithm 408: a sparse matrix package (part I) [F4]"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "A set of Fortran subroutines has been written for performing various operations on sparse matrices stored in compact form in core so that core storage requirement is reduced for any square matrix less than 66 percent dense."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1971
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1766093"
                        ],
                        "name": "K. McKinley",
                        "slug": "K.-McKinley",
                        "structuredName": {
                            "firstName": "Kathryn",
                            "lastName": "McKinley",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. McKinley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1879660"
                        ],
                        "name": "S. Carr",
                        "slug": "S.-Carr",
                        "structuredName": {
                            "firstName": "Steve",
                            "lastName": "Carr",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Carr"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35146927"
                        ],
                        "name": "C. Tseng",
                        "slug": "C.-Tseng",
                        "structuredName": {
                            "firstName": "Chau-Wen",
                            "lastName": "Tseng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Tseng"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 409053,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "ca8e8df439d0ae7dd97444885b294bd481310023",
            "isKey": false,
            "numCitedBy": 577,
            "numCiting": 43,
            "paperAbstract": {
                "fragments": [],
                "text": "In the past decade, processor speed has become significantly faster than memory speed. Small, fast cache memories are designed to overcome this discrepancy, but they are only effective when programs exhibit data locality. In the this article, we present compiler optimizations to improve data locality based on a simple yet accurate cost model. The model computes both temporal and spatial reuse of cache lines to find desirable loop organizations. The cost model drives the application of compound transformations consisting of loop permutation, loop fusion, loop distribution, and loop reversal. To validate our optimization strategy, we implemented our algorithms and ran experiments on a large collection of scientific programs and kernels. Experiments illustrate that for kernels our model and algorithm can select and achieve the best loop structure for a nest. For over 30 complete applications, we executed the original and transformed versions and simulated cache hit rates. We collected statistics about the inherent characteristics of these programs and our ability to improve their data locality. To our knowledge, these studies are the first of such breadth and depth. We found performance improvements were difficult to achieve bacause benchmark programs typically have high hit rates even for small data caches; however, our optimizations significanty improved several programs."
            },
            "slug": "Improving-data-locality-with-loop-transformations-McKinley-Carr",
            "title": {
                "fragments": [],
                "text": "Improving data locality with loop transformations"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This article presents compiler optimizations to improve data locality based on a simple yet accurate cost model and finds performance improvements were difficult to achieve, but improved several programs."
            },
            "venue": {
                "fragments": [],
                "text": "TOPL"
            },
            "year": 1996
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "36530509"
                        ],
                        "name": "Huasha Zhao",
                        "slug": "Huasha-Zhao",
                        "structuredName": {
                            "firstName": "Huasha",
                            "lastName": "Zhao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Huasha Zhao"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 14498848,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "def18a40707e60339b7d15edcf879f2793a00e84",
            "isKey": false,
            "numCitedBy": 12,
            "numCiting": 99,
            "paperAbstract": {
                "fragments": [],
                "text": "Author(s): Zhao, Huasha | Advisor(s): Canny, John F | Abstract: Machine learning (ML) is a cornerstone of the new data revolution. Most attempts to scale machine learning to massive datasets focus on parallelization on computer clusters. The BIDMach project instead explores the untapped potential (especially from GPU and SIMD hardware) inside individual machines. Through careful codesign of algorithms and ``rooflining'', we have demonstrated multiple orders of magnitude speedup over other systems. In fact, BIDMach running on a single machine exceeds the performance of cluster systems on most common ML tasks, and has run computer-intensive tasks on 10-terabyte datasets. We can further show that BIDMach runs at close to the theoretical limits imposed by CPU/GPU, memory or network bandwidth. BIDMach includes several innovations to make the data modeling process more agile and effective: likelihood ``mixins'' and interactive modeling using Gibbs sampling.These results are very encouraging but the greatest potential for future hardware-leveraged machine learning appears to be on MCMC algorithms: We can bring the performance of sample-based Bayesian inference up close to symbolic methods. This opens the possibility for a general-purpose ``engine'' for machine learning whose performance matches specialized methods. We demonstrate this approach on a specific problem (Latent Dirichlet Allocation), and discuss the general case.Finally we explore scaling ML to clusters. In order to benefit from parallelization, rooflined nodes require very high network bandwidth. We show that the aggregators (reducers) on other systems do not scale, and are not adequate for this task. We describe two new approaches, butterfly mixing and ``Kylix'' which cover the requirements of machine learning and graph algorithms respectively. We give roofline bounds for both approaches."
            },
            "slug": "High-Performance-Machine-Learning-through-Codesign-Zhao",
            "title": {
                "fragments": [],
                "text": "High Performance Machine Learning through Codesign and Rooflining"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "Two new approaches, butterfly mixing and ``Kylix'' which cover the requirements of machine learning and graph algorithms respectively are described and roofline bounds for both approaches are given."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39490227"
                        ],
                        "name": "T. Davis",
                        "slug": "T.-Davis",
                        "structuredName": {
                            "firstName": "Timothy",
                            "lastName": "Davis",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Davis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50819900"
                        ],
                        "name": "Yifan Hu",
                        "slug": "Yifan-Hu",
                        "structuredName": {
                            "firstName": "Yifan",
                            "lastName": "Hu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yifan Hu"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 207191190,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e464550cdc5bfe80900afb8df94066c7ddb6b14d",
            "isKey": false,
            "numCitedBy": 3064,
            "numCiting": 141,
            "paperAbstract": {
                "fragments": [],
                "text": "We describe the University of Florida Sparse Matrix Collection, a large and actively growing set of sparse matrices that arise in real applications. The Collection is widely used by the numerical linear algebra community for the development and performance evaluation of sparse matrix algorithms. It allows for robust and repeatable experiments: robust because performance results with artificially generated matrices can be misleading, and repeatable because matrices are curated and made publicly available in many formats. Its matrices cover a wide spectrum of domains, include those arising from problems with underlying 2D or 3D geometry (as structural engineering, computational fluid dynamics, model reduction, electromagnetics, semiconductor devices, thermodynamics, materials, acoustics, computer graphics/vision, robotics/kinematics, and other discretizations) and those that typically do not have such geometry (optimization, circuit simulation, economic and financial modeling, theoretical and quantum chemistry, chemical process simulation, mathematics and statistics, power networks, and other networks and graphs). We provide software for accessing and managing the Collection, from MATLAB#8482;, Mathematica#8482;, Fortran, and C, as well as an online search capability. Graph visualization of the matrices is provided, and a new multilevel coarsening scheme is proposed to facilitate this task."
            },
            "slug": "The-university-of-Florida-sparse-matrix-collection-Davis-Hu",
            "title": {
                "fragments": [],
                "text": "The university of Florida sparse matrix collection"
            },
            "tldr": {
                "abstractSimilarityScore": 72,
                "text": "The University of Florida Sparse Matrix Collection, a large and actively growing set of sparse matrices that arise in real applications, is described and a new multilevel coarsening scheme is proposed to facilitate this task."
            },
            "venue": {
                "fragments": [],
                "text": "TOMS"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3025577"
                        ],
                        "name": "Jeff Bezanson",
                        "slug": "Jeff-Bezanson",
                        "structuredName": {
                            "firstName": "Jeff",
                            "lastName": "Bezanson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jeff Bezanson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1380892320"
                        ],
                        "name": "S. Karpinski",
                        "slug": "S.-Karpinski",
                        "structuredName": {
                            "firstName": "Stefan",
                            "lastName": "Karpinski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Karpinski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2543935"
                        ],
                        "name": "Viral B. Shah",
                        "slug": "Viral-B.-Shah",
                        "structuredName": {
                            "firstName": "Viral",
                            "lastName": "Shah",
                            "middleNames": [
                                "B."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Viral B. Shah"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144397527"
                        ],
                        "name": "A. Edelman",
                        "slug": "A.-Edelman",
                        "structuredName": {
                            "firstName": "Alan",
                            "lastName": "Edelman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Edelman"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 5,
                                "start": 0
                            }
                        ],
                        "text": "Julia: A fast dynamic language for technical computing."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 32,
                                "start": 27
                            }
                        ],
                        "text": "More recently MATLAB [28], Julia [13], Eigen [20] and PETSc [11] have become popular for computing with sparse matrices."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 136,
                                "start": 131
                            }
                        ],
                        "text": "First, we will open source taco so that it can be used directly or incorporated into full fledged linear algebra languages such as Julia and Simit."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 83,
                                "start": 61
                            }
                        ],
                        "text": "2010], or with languages such as MATLAB [MATLAB 2014], Julia [Bezanson et al. 2012] and Simit [Kjolstad et al."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 160,
                                "start": 111
                            }
                        ],
                        "text": "1 Dense Linear and Tensor Algebra Libraries, Languages and Compilers There has been a lot of work on languages [Bezanson et al. 2012; Iverson 1962; MATLAB 2014], libraries [Anderson et al."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 57,
                                "start": 35
                            }
                        ],
                        "text": "More recently MATLAB [2014], Julia [Bezanson et al. 2012], Eigen [Guennebaud et al."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 131,
                                "start": 126
                            }
                        ],
                        "text": "Our technique can be used in libraries such as TensorFlow [3], or Eigen [20] or integrated into the compilers of MATLAB [28], Julia [13] or Simit [23]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 7044532,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b808233eb1256d492af437a6c9fe99ffe141df47",
            "isKey": true,
            "numCitedBy": 598,
            "numCiting": 33,
            "paperAbstract": {
                "fragments": [],
                "text": "Dynamic languages have become popular for scientic computing. They are generally considered highly productive, but lacking in performance. This paper presents Julia, a new dynamic language for technical computing, designed for performance from the beginning by adapting and extending modern programming language techniques. A design based on generic functions and a rich type system simultaneously enables an expressive programming model and successful type inference, leading to good performance for a wide range of programs. This makes it possible for much of Julia\u2019s library to be written in Julia itself, while also incorporating best-of-breed C and Fortran libraries."
            },
            "slug": "Julia:-A-Fast-Dynamic-Language-for-Technical-Bezanson-Karpinski",
            "title": {
                "fragments": [],
                "text": "Julia: A Fast Dynamic Language for Technical Computing"
            },
            "tldr": {
                "abstractSimilarityScore": 52,
                "text": "Julia is presented, a new dynamic language for technical computing, designed for performance from the beginning by adapting and extending modern programming language techniques, which enables an expressive programming model and successful type inference, leading to good performance for a wide range of programs."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9352368"
                        ],
                        "name": "W. Tinney",
                        "slug": "W.-Tinney",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Tinney",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Tinney"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145511069"
                        ],
                        "name": "J. W. Walker",
                        "slug": "J.-W.-Walker",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Walker",
                            "middleNames": [
                                "Wayne"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. W. Walker"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 8481609,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3ac79c19099bebc11dfef2dea017d1e1a159fe7c",
            "isKey": false,
            "numCitedBy": 627,
            "numCiting": 11,
            "paperAbstract": {
                "fragments": [],
                "text": "Matrix inversion is very inefficient for computing direct solutions of the large sparse systems of linear equations that arise in many network problems. Optimally ordered triangular factorization of sparse matrices is more efficient and offers other important computational advantages in some applications. With this method, direct solutions are computed from sparse matrix factors instead of from a full inverse matrix, thereby gaining a significant advantage in speed, computer memory requirements, and reduced round-off error. Improvements of tea to one or more in speed and problem size over present applications of the inverse can be achieved in many cases. Details of the method, numerical examples, and the results of a large problem are given."
            },
            "slug": "Direct-solutions-of-sparse-network-equations-by-Tinney-Walker",
            "title": {
                "fragments": [],
                "text": "Direct solutions of sparse network equations by optimally ordered triangular factorization"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "With this method, direct solutions are computed from sparse matrix factors instead of from a full inverse matrix, thereby gaining a significant advantage in speed, computer memory requirements, and reduced round-off error."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1967
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2047844"
                        ],
                        "name": "Anima Anandkumar",
                        "slug": "Anima-Anandkumar",
                        "structuredName": {
                            "firstName": "Anima",
                            "lastName": "Anandkumar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Anima Anandkumar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144804200"
                        ],
                        "name": "Rong Ge",
                        "slug": "Rong-Ge",
                        "structuredName": {
                            "firstName": "Rong",
                            "lastName": "Ge",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Rong Ge"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143724861"
                        ],
                        "name": "Daniel J. Hsu",
                        "slug": "Daniel-J.-Hsu",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Hsu",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daniel J. Hsu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144695232"
                        ],
                        "name": "S. Kakade",
                        "slug": "S.-Kakade",
                        "structuredName": {
                            "firstName": "Sham",
                            "lastName": "Kakade",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kakade"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1750943"
                        ],
                        "name": "Matus Telgarsky",
                        "slug": "Matus-Telgarsky",
                        "structuredName": {
                            "firstName": "Matus",
                            "lastName": "Telgarsky",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matus Telgarsky"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 287,
                                "start": 175
                            }
                        ],
                        "text": "1 INTRODUCTION Tensor algebra is a powerful tool for computing onmultidimensional data and has many applications in machine learning, data analytics, engineering, and science [Abadi et al. 2016; Anandkumar et al. 2014; Bader et al. 2008; Einstein 1916; Feynman et al. 1963; Kolecki 2002]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 14587260,
            "fieldsOfStudy": [
                "Computer Science",
                "Mathematics"
            ],
            "id": "a6ce434896d238e1b200a617815ea3e5141dfeeb",
            "isKey": false,
            "numCitedBy": 965,
            "numCiting": 102,
            "paperAbstract": {
                "fragments": [],
                "text": "This work considers a computationally and statistically efficient parameter estimation method for a wide class of latent variable models--including Gaussian mixture models, hidden Markov models, and latent Dirichlet allocation--which exploits a certain tensor structure in their low-order observable moments (typically, of second- and third-order). Specifically, parameter estimation is reduced to the problem of extracting a certain (orthogonal) decomposition of a symmetric tensor derived from the moments; this decomposition can be viewed as a natural generalization of the singular value decomposition for matrices. Although tensor decompositions are generally intractable to compute, the decomposition of these specially structured tensors can be efficiently obtained by a variety of approaches, including power iterations and maximization approaches (similar to the case of matrices). A detailed analysis of a robust tensor power method is provided, establishing an analogue of Wedin's perturbation theorem for the singular vectors of matrices. This implies a robust and computationally tractable estimation approach for several popular latent variable models."
            },
            "slug": "Tensor-decompositions-for-learning-latent-variable-Anandkumar-Ge",
            "title": {
                "fragments": [],
                "text": "Tensor decompositions for learning latent variable models"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "A detailed analysis of a robust tensor power method is provided, establishing an analogue of Wedin's perturbation theorem for the singular vectors of matrices, and implies a robust and computationally tractable estimation approach for several popular latent variable models."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "66441580"
                        ],
                        "name": "J. Kolecki",
                        "slug": "J.-Kolecki",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Kolecki",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Kolecki"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 11467897,
            "fieldsOfStudy": [
                "Education"
            ],
            "id": "9bcb7ff601bb96f0de52e460007d1dfeaf0cb5c8",
            "isKey": false,
            "numCitedBy": 22,
            "numCiting": 2,
            "paperAbstract": {
                "fragments": [],
                "text": "Tensor analysis is the type of subject that can make even the best of students shudder. My own post-graduate instructor in the subject took away much of the fear by speaking of an implicit rhythm in the peculiar notation traditionally used, and helped us to see how this rhythm plays its way throughout the various formalisms. Prior to taking that class, I had spent many years \"playing\" on my own with tensors. I found the going to be tremendously difficult but was able, over time, to back out some physical and geometrical considerations that helped to make the subject a little more transparent. Today, it is sometimes hard not to think in terms of tensors and their associated concepts. This article, prompted and greatly enhanced by Marlos Jacob, whom I've met only by e-mail, is an attempt to record those early notions concerning tensors. It is intended to serve as a bridge from the point where most undergraduate students \"leave off\" in their studies of mathematics to the place where most texts on tensor analysis begin. A basic knowledge of vectors, matrices, and physics is assumed. A semi-intuitive approach to those notions underlying tensor analysis is given via scalars, vectors, dyads, triads, and higher vector products. The reader must be prepared to do some mathematics and to think. For those students who wish to go beyond this humble start, I can only recommend my professor's wisdom: find the rhythm in the mathematics and you will fare pretty well."
            },
            "slug": "An-Introduction-to-Tensors-for-Students-of-Physics-Kolecki",
            "title": {
                "fragments": [],
                "text": "An Introduction to Tensors for Students of Physics and Engineering"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2002
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1739800"
                        ],
                        "name": "F. Gustavson",
                        "slug": "F.-Gustavson",
                        "structuredName": {
                            "firstName": "Fred",
                            "lastName": "Gustavson",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Gustavson"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 7107184,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5f491a183c71b0322b16e4f5dc69538c50db79e0",
            "isKey": false,
            "numCitedBy": 295,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": "Let A and B be two sparse matrices whose orders are p by q and q by r. Their product C -A B requires N nontrlvial multiplications where 0 <_ N <_ pqr. The operation count of our algorithm is usually proportional to N; however, its worse case is O(p, r, NA, N) where N A is the number of elements in A This algorithm can be used to assemble the sparse matrix arising from a finite element problem from the basic elements, using ~-1 [order (g)]2 operations where m is the total number of basic elements and order(g) is the order of the ~th element matrix. The concept of an unordered merge plays a key role m obtaining our fast multiplication algorithm It forces us to accept an unordered sparse row-wise format as output for the product C The permuted transposition algorithm computes ( R A ) T i n O(p, q, NA) operations where R is a permutation matrix It also orders an unordered sparse row-wise representation. We can combine these algorithms to produce an O(M) algorithm to solve A x = b where M is the number of multiplications needed to factor A into L U"
            },
            "slug": "Two-Fast-Algorithms-for-Sparse-Matrices:-and-Gustavson",
            "title": {
                "fragments": [],
                "text": "Two Fast Algorithms for Sparse Matrices: Multiplication and Permuted Transposition"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "An O(M) algorithm is produced to solve A x = b where M is the number of multiplications needed to factor A into L U and the concept of an unordered merge plays a key role in obtaining this algorithm."
            },
            "venue": {
                "fragments": [],
                "text": "TOMS"
            },
            "year": 1978
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47786204"
                        ],
                        "name": "Jiajia Li",
                        "slug": "Jiajia-Li",
                        "structuredName": {
                            "firstName": "Jiajia",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jiajia Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2234852"
                        ],
                        "name": "Casey Battaglino",
                        "slug": "Casey-Battaglino",
                        "structuredName": {
                            "firstName": "Casey",
                            "lastName": "Battaglino",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Casey Battaglino"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2739832"
                        ],
                        "name": "Ioakeim Perros",
                        "slug": "Ioakeim-Perros",
                        "structuredName": {
                            "firstName": "Ioakeim",
                            "lastName": "Perros",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ioakeim Perros"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1738536"
                        ],
                        "name": "Jimeng Sun",
                        "slug": "Jimeng-Sun",
                        "structuredName": {
                            "firstName": "Jimeng",
                            "lastName": "Sun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jimeng Sun"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1771649"
                        ],
                        "name": "R. Vuduc",
                        "slug": "R.-Vuduc",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Vuduc",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Vuduc"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 12096533,
            "fieldsOfStudy": [
                "Business"
            ],
            "id": "44ccdebc83766fb6a2016fa58c3c3a337356b79b",
            "isKey": false,
            "numCitedBy": 60,
            "numCiting": 54,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper describes a novel framework, called I<scp>n</scp>T<scp>ens</scp>L<scp>i</scp> (\"intensely\"), for producing fast single-node implementations of dense tensor-times-matrix multiply (T<scp>tm</scp>) of arbitrary dimension. Whereas conventional implementations of T<scp>tm</scp> rely on explicitly converting the input tensor operand into a matrix---in order to be able to use any available and fast general matrix-matrix multiply (G<scp>emm</scp>) implementation---our framework's strategy is to carry out the T<scp>tm</scp> <i>in-place</i>, avoiding this copy. As the resulting implementations expose tuning parameters, this paper also describes a heuristic empirical model for selecting an optimal configuration based on the T<scp>tm</scp>'s inputs. When compared to widely used single-node T<scp>tm</scp> implementations that are available in the Tensor Toolbox and Cyclops Tensor Framework (C<scp>tf</scp>), In-TensLi's in-place and input-adaptive T<scp>tm</scp> implementations achieve 4\u00d7 and 13\u00d7 speedups, showing Gemm-like performance on a variety of input sizes."
            },
            "slug": "An-input-adaptive-and-in-place-approach-to-dense-Li-Battaglino",
            "title": {
                "fragments": [],
                "text": "An input-adaptive and in-place approach to dense tensor-times-matrix multiply"
            },
            "tldr": {
                "abstractSimilarityScore": 61,
                "text": "A novel framework for producing fast single-node implementations of dense tensor-times-matrix multiply of arbitrary dimension, called In-TensLi's in-place and input-adaptive T<scp-tm</scp> implementations achieve 4\u00d7 and 13\u00d7 speedups, showing Gemm-like performance on a variety of input sizes."
            },
            "venue": {
                "fragments": [],
                "text": "SC15: International Conference for High Performance Computing, Networking, Storage and Analysis"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39888153"
                        ],
                        "name": "S. Walt",
                        "slug": "S.-Walt",
                        "structuredName": {
                            "firstName": "St\u00e9fan",
                            "lastName": "Walt",
                            "middleNames": [
                                "van",
                                "der"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Walt"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32145799"
                        ],
                        "name": "S. Colbert",
                        "slug": "S.-Colbert",
                        "structuredName": {
                            "firstName": "S.",
                            "lastName": "Colbert",
                            "middleNames": [
                                "Chris"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Colbert"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3025780"
                        ],
                        "name": "G. Varoquaux",
                        "slug": "G.-Varoquaux",
                        "structuredName": {
                            "firstName": "Ga\u00ebl",
                            "lastName": "Varoquaux",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Varoquaux"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 16907816,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "cef52bea3f13b20d6a31391034b0fccec71c6781",
            "isKey": false,
            "numCitedBy": 6221,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": "In the Python world, NumPy arrays are the standard representation for numerical data and enable efficient implementation of numerical computations in a high-level language. As this effort shows, NumPy performance can be improved through three techniques: vectorizing calculations, avoiding copying data in memory, and minimizing operation counts."
            },
            "slug": "The-NumPy-Array:-A-Structure-for-Efficient-Walt-Colbert",
            "title": {
                "fragments": [],
                "text": "The NumPy Array: A Structure for Efficient Numerical Computation"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This effort shows, NumPy performance can be improved through three techniques: vectorizing calculations, avoiding copying data in memory, and minimizing operation counts."
            },
            "venue": {
                "fragments": [],
                "text": "Computing in Science & Engineering"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144814881"
                        ],
                        "name": "L. Hesselink",
                        "slug": "L.-Hesselink",
                        "structuredName": {
                            "firstName": "Lambertus",
                            "lastName": "Hesselink",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Hesselink"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48010665"
                        ],
                        "name": "Y. Levy",
                        "slug": "Y.-Levy",
                        "structuredName": {
                            "firstName": "Yuval",
                            "lastName": "Levy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Y. Levy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2025868"
                        ],
                        "name": "Yingmei Lavin",
                        "slug": "Yingmei-Lavin",
                        "structuredName": {
                            "firstName": "Yingmei",
                            "lastName": "Lavin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yingmei Lavin"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 122,
                                "start": 114
                            }
                        ],
                        "text": "Tensors generalize vectors and matrices to more dimensions and have applications in science [19, 42], engineering [18, 24] and data analytics [4, 10]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 7656324,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "c5e7a9ffd8d61c4c6c5cf54da8fbc38d63c76be2",
            "isKey": false,
            "numCitedBy": 164,
            "numCiting": 32,
            "paperAbstract": {
                "fragments": [],
                "text": "We study the topology of symmetric, second-order tensor fields. The goal is to represent their complex structure by a simple set of carefully chosen points and lines analogous to vector field topology. We extract topological skeletons of the eigenvector fields, and we track their evolution over time. We study tensor topological transitions and correlate tensor and vector data. The basic constituents of tensor topology are the degenerate points, or points where eigenvalues are equal to each other. Degenerate points play a similar role as critical points in vector fields. We identify two kinds of elementary degenerate points, which we call wedges and trisectors. They can combine to form more familiar singularities-such as saddles, nodes, centers, or foci. However, these are generally unstable structures in tensor fields. Finally, we show a topological rule that puts a constraint on the topology of tensor fields defined across surfaces, extending to tensor fields the Poincare-Hopf theorem for vector fields.<<ETX>>"
            },
            "slug": "The-topology-of-symmetric,-second-order-tensor-Hesselink-Levy",
            "title": {
                "fragments": [],
                "text": "The topology of symmetric, second-order tensor fields"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "A topological rule is shown that puts a constraint on the topology of Tensor fields defined across surfaces, extending to tensor fields the Pointcar\u00e9-Hopf theorem for vector fields."
            },
            "venue": {
                "fragments": [],
                "text": "VIS '94"
            },
            "year": 1994
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1697133"
                        ],
                        "name": "K. Iverson",
                        "slug": "K.-Iverson",
                        "structuredName": {
                            "firstName": "Kenneth",
                            "lastName": "Iverson",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Iverson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 11777029,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "cb67fe0cd45ad16001206773ffde93140f80a1a2",
            "isKey": false,
            "numCitedBy": 1060,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": "The paper describes a succinct problem-oriented programming language. The language is broad in scope, having been developed for, and applied effectively in, such diverse areas as microprogramming, switching theory, operations research, information retrieval, sorting theory, structure of compilers, search procedures, and language translation. The language permits a high degree of useful formalism. It relies heavily on a systematic extension of a small set of basic operations to vectors, matrices, and trees, and on a family of flexible selection operations controlled by logical vectors. Illustrations are drawn from a variety of applications."
            },
            "slug": "A-programming-language-Iverson",
            "title": {
                "fragments": [],
                "text": "A programming language"
            },
            "tldr": {
                "abstractSimilarityScore": 57,
                "text": "The paper describes a succinct problem-oriented programming language that relies heavily on a systematic extension of a small set of basic operations to vectors, matrices, and trees, and on a family of flexible selection operations controlled by logical vectors."
            },
            "venue": {
                "fragments": [],
                "text": "AIEE-IRE '62 (Spring)"
            },
            "year": 1962
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2238795"
                        ],
                        "name": "A. Bulu\u00e7",
                        "slug": "A.-Bulu\u00e7",
                        "structuredName": {
                            "firstName": "Ayd\u0131n",
                            "lastName": "Bulu\u00e7",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Bulu\u00e7"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "5619883"
                        ],
                        "name": "Jeremy T. Fineman",
                        "slug": "Jeremy-T.-Fineman",
                        "structuredName": {
                            "firstName": "Jeremy",
                            "lastName": "Fineman",
                            "middleNames": [
                                "T."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jeremy T. Fineman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48230516"
                        ],
                        "name": "Matteo Frigo",
                        "slug": "Matteo-Frigo",
                        "structuredName": {
                            "firstName": "Matteo",
                            "lastName": "Frigo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matteo Frigo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145428555"
                        ],
                        "name": "J. Gilbert",
                        "slug": "J.-Gilbert",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Gilbert",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Gilbert"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145372049"
                        ],
                        "name": "C. Leiserson",
                        "slug": "C.-Leiserson",
                        "structuredName": {
                            "firstName": "Charles",
                            "lastName": "Leiserson",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Leiserson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 2762299,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0c0800259bd40b1ac96cc437629c5ea0ad729f22",
            "isKey": false,
            "numCitedBy": 309,
            "numCiting": 56,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper introduces a storage format for sparse matrices, called <b><i>compressed sparse blocks (CSB)</i></b>, which allows both <i>Ax</i> and <i>A</i>,<i>x</i> to be computed efficiently in parallel, where <i>A</i> is an <i>n</i>\u00d7<i>n</i> sparse matrix with <i>nnz</i>e<i>n</i> nonzeros and <i>x</i> is a dense <i>n</i>-vector. Our algorithms use \u0398(<i>nnz</i>) work (serial running time) and \u0398(\u221a<i>n</i>lg<i>n</i>) span (critical-path length), yielding a parallelism of \u0398(<i>nnz</i>/\u221a<i>n</i>lg<i>n</i>), which is amply high for virtually any large matrix. The storage requirement for CSB is the same as that for the more-standard compressed-sparse-rows (CSR) format, for which computing <i>Ax</i> in parallel is easy but <i>A</i>,<i>x</i> is difficult. Benchmark results indicate that on one processor, the CSB algorithms for <i>Ax</i> and <i>A</i>,<i>x</i> run just as fast as the CSR algorithm for <i>Ax</i>, but the CSB algorithms also scale up linearly with processors until limited by off-chip memory bandwidth."
            },
            "slug": "Parallel-sparse-matrix-vector-and-multiplication-Bulu\u00e7-Fineman",
            "title": {
                "fragments": [],
                "text": "Parallel sparse matrix-vector and matrix-transpose-vector multiplication using compressed sparse blocks"
            },
            "venue": {
                "fragments": [],
                "text": "SPAA '09"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144206757"
                        ],
                        "name": "M. Valiev",
                        "slug": "M.-Valiev",
                        "structuredName": {
                            "firstName": "Marat",
                            "lastName": "Valiev",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Valiev"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2418932"
                        ],
                        "name": "E. Bylaska",
                        "slug": "E.-Bylaska",
                        "structuredName": {
                            "firstName": "Eric",
                            "lastName": "Bylaska",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Bylaska"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144367321"
                        ],
                        "name": "N. Govind",
                        "slug": "N.-Govind",
                        "structuredName": {
                            "firstName": "Niranjan",
                            "lastName": "Govind",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Govind"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143924199"
                        ],
                        "name": "K. Kowalski",
                        "slug": "K.-Kowalski",
                        "structuredName": {
                            "firstName": "Karol",
                            "lastName": "Kowalski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Kowalski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2977494"
                        ],
                        "name": "T. Straatsma",
                        "slug": "T.-Straatsma",
                        "structuredName": {
                            "firstName": "Tjerk",
                            "lastName": "Straatsma",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Straatsma"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1942636"
                        ],
                        "name": "H. V. Dam",
                        "slug": "H.-V.-Dam",
                        "structuredName": {
                            "firstName": "Hubertus",
                            "lastName": "Dam",
                            "middleNames": [
                                "Van"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. V. Dam"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "113144653"
                        ],
                        "name": "D. Wang",
                        "slug": "D.-Wang",
                        "structuredName": {
                            "firstName": "D.",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913011"
                        ],
                        "name": "J. Nieplocha",
                        "slug": "J.-Nieplocha",
                        "structuredName": {
                            "firstName": "Jarek",
                            "lastName": "Nieplocha",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Nieplocha"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2589296"
                        ],
                        "name": "E. Apr\u00e1",
                        "slug": "E.-Apr\u00e1",
                        "structuredName": {
                            "firstName": "Edoardo",
                            "lastName": "Apr\u00e1",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Apr\u00e1"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1776607"
                        ],
                        "name": "T. Windus",
                        "slug": "T.-Windus",
                        "structuredName": {
                            "firstName": "Theresa",
                            "lastName": "Windus",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Windus"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39220346"
                        ],
                        "name": "W. A. Jong",
                        "slug": "W.-A.-Jong",
                        "structuredName": {
                            "firstName": "Wibe",
                            "lastName": "Jong",
                            "middleNames": [
                                "A.",
                                "de"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. A. Jong"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 100,
                                "start": 92
                            }
                        ],
                        "text": "Tensors generalize vectors and matrices to more dimensions and have applications in science [19, 42], engineering [18, 24] and data analytics [4, 10]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 6263484,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "99a1520bc334c111ff84619a1ac376f009d0d3bf",
            "isKey": false,
            "numCitedBy": 3906,
            "numCiting": 302,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "NWChem:-A-comprehensive-and-scalable-open-source-Valiev-Bylaska",
            "title": {
                "fragments": [],
                "text": "NWChem: A comprehensive and scalable open-source solution for large scale molecular simulations"
            },
            "venue": {
                "fragments": [],
                "text": "Comput. Phys. Commun."
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2113543585"
                        ],
                        "name": "J. Bennett",
                        "slug": "J.-Bennett",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Bennett",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Bennett"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47511653"
                        ],
                        "name": "S. Lanning",
                        "slug": "S.-Lanning",
                        "structuredName": {
                            "firstName": "Stan",
                            "lastName": "Lanning",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Lanning"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 9528522,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "31af4b8793e93fd35e89569ccd663ae8777f0072",
            "isKey": false,
            "numCitedBy": 1965,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": "Netflix released a dataset containing 100 million anonymous movie ratings and challenged the data mining, machine learning and computer science communities to develop systems that could beat the accuracy of its recommendation system, Cinematch. We briefly describe the challenge itself, review related work and efforts, and summarize visible progress to date. Other potential uses of the data are outlined, including its application to the KDD Cup 2007."
            },
            "slug": "The-Netflix-Prize-Bennett-Lanning",
            "title": {
                "fragments": [],
                "text": "The Netflix Prize"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "Netflix released a dataset containing 100 million anonymous movie ratings and challenged the data mining, machine learning and computer science communities to develop systems that could beat the accuracy of its recommendation system, Cinematch."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2007
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1396324435"
                        ],
                        "name": "E. Anderson",
                        "slug": "E.-Anderson",
                        "structuredName": {
                            "firstName": "Edward",
                            "lastName": "Anderson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Anderson"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 120,
                                "start": 98
                            }
                        ],
                        "text": "Dense Linear and Tensor Algebra There has been a lot of work on languages [13, 22, 28], libraries [2, 5, 20, 36, 43, 48], and compilers [31, 39] for dense linear algebra and loop transformations that can optimize dense loop nests [29, 49, 50]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 68,
                                "start": 46
                            }
                        ],
                        "text": "A number of languages [13, 22, 28], libraries [2, 5, 20, 36, 43, 48], and compilers [31, 39] have been developed to support dense linear algebra."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 221942096,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "14dc304f9954930194a332fd759cfb255b12b6bb",
            "isKey": false,
            "numCitedBy": 2077,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Preface to the third edition Preface to the secondedition Part 1. Guide. 1. Essentials 2. Contents of LAPACK 3. Performance of LAPACK 4. Accuracy and Stability 5. Documentation and Software Conventions 6. Installing LAPACK Routines 7. Troubleshooting Appendix A. Index of Driver and Computational Routines Appendix B. Index of Auxiliary Routines Appendix C. Quick Reference Guide to the BLAS Appendix D. Converting from LINPACK or EISPACK Appendix E. LAPACK Working Notes Part 2. Specifications of Routines. Bibliography Index by Keyword Index by Routine Name."
            },
            "slug": "LAPACK-Users'-Guide-Anderson",
            "title": {
                "fragments": [],
                "text": "LAPACK Users' Guide"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "The third edition of LAPACK provided a guide to troubleshooting and installation of Routines, as well as providing examples of how to convert from LINPACK or EISPACK to BLAS."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1987
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717349"
                        ],
                        "name": "D. Knuth",
                        "slug": "D.-Knuth",
                        "structuredName": {
                            "firstName": "Donald",
                            "lastName": "Knuth",
                            "middleNames": [
                                "Ervin"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Knuth"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 60324038,
            "fieldsOfStudy": [
                "Physics"
            ],
            "id": "461c0d703fa19ea521f86bddc46c9c66e3c4b56b",
            "isKey": false,
            "numCitedBy": 2206,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Apparatus for supporting different nets for various sporting purposes including interengaging tubular rods which are arranged to interconnect and have ground engaging portions suitable to be useful for the several functions. The frame of the net support structure includes a pair of spaced apart, vertically extending posts; each of the posts is divided into a pair of telescoping sections. An upper horizontally extending multi-section member extends and connects the upper end of the vertical posts. A U-shaped clip is provided to engage the frame support with resilient holding pressure for supporting a net on the frame."
            },
            "slug": "The-art-of-computer-programming:-sorting-and-3)-Knuth",
            "title": {
                "fragments": [],
                "text": "The art of computer programming: sorting and searching (volume 3)"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "Apparatus for supporting different nets for various sporting purposes including interengaging tubular rods which are arranged to interconnect and have ground engaging portions suitable to be useful for the several functions."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1973
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35660011"
                        ],
                        "name": "Julian McAuley",
                        "slug": "Julian-McAuley",
                        "structuredName": {
                            "firstName": "Julian",
                            "lastName": "McAuley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Julian McAuley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1702139"
                        ],
                        "name": "J. Leskovec",
                        "slug": "J.-Leskovec",
                        "structuredName": {
                            "firstName": "Jure",
                            "lastName": "Leskovec",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Leskovec"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6440341,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "665f89a20b05472d82df0a12f2dd63e8fcc4f3ea",
            "isKey": false,
            "numCitedBy": 1378,
            "numCiting": 36,
            "paperAbstract": {
                "fragments": [],
                "text": "In order to recommend products to users we must ultimately predict how a user will respond to a new product. To do so we must uncover the implicit tastes of each user as well as the properties of each product. For example, in order to predict whether a user will enjoy Harry Potter, it helps to identify that the book is about wizards, as well as the user's level of interest in wizardry. User feedback is required to discover these latent product and user dimensions. Such feedback often comes in the form of a numeric rating accompanied by review text. However, traditional methods often discard review text, which makes user and product latent dimensions difficult to interpret, since they ignore the very text that justifies a user's rating. In this paper, we aim to combine latent rating dimensions (such as those of latent-factor recommender systems) with latent review topics (such as those learned by topic models like LDA). Our approach has several advantages. Firstly, we obtain highly interpretable textual labels for latent rating dimensions, which helps us to `justify' ratings with text. Secondly, our approach more accurately predicts product ratings by harnessing the information present in review text; this is especially true for new products and users, who may have too few ratings to model their latent factors, yet may still provide substantial information from the text of even a single review. Thirdly, our discovered topics can be used to facilitate other tasks such as automated genre discovery, and to identify useful and representative reviews."
            },
            "slug": "Hidden-factors-and-hidden-topics:-understanding-McAuley-Leskovec",
            "title": {
                "fragments": [],
                "text": "Hidden factors and hidden topics: understanding rating dimensions with review text"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "This paper aims to combine latent rating dimensions (such as those of latent-factor recommender systems) with latent review topics ( such as those learned by topic models like LDA), which more accurately predicts product ratings by harnessing the information present in review text."
            },
            "venue": {
                "fragments": [],
                "text": "RecSys"
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2056154710"
                        ],
                        "name": "M. M. G. Ricci",
                        "slug": "M.-M.-G.-Ricci",
                        "structuredName": {
                            "firstName": "Maria",
                            "lastName": "Ricci",
                            "middleNames": [
                                "Grazia",
                                "Dallerba"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. M. G. Ricci"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1411919391"
                        ],
                        "name": "T. Levi-Civita",
                        "slug": "T.-Levi-Civita",
                        "structuredName": {
                            "firstName": "Tullio",
                            "lastName": "Levi-Civita",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Levi-Civita"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 120009332,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "d3a0cdb09e08fe5452e4eb77b17653436113f2a2",
            "isKey": false,
            "numCitedBy": 310,
            "numCiting": 8,
            "paperAbstract": {
                "fragments": [],
                "text": "----------------------------------------------------Nutzungsbedingungen DigiZeitschriften e.V. gew\u00e4hrt ein nicht exklusives, nicht \u00fcbertragbares, pers\u00f6nliches und beschr\u00e4nktes Recht auf Nutzung dieses Dokuments. Dieses Dokument ist ausschlie\u00dflich f\u00fcr den pers\u00f6nlichen, nicht kommerziellen Gebrauch bestimmt. Das Copyright bleibt bei den Herausgebern oder sonstigen Rechteinhabern. Als Nutzer sind Sie sind nicht dazu berechtigt, eine Lizenz zu \u00fcbertragen, zu transferieren oder an Dritte weiter zu geben. Die Nutzung stellt keine \u00dcbertragung des Eigentumsrechts an diesem Dokument dar und gilt vorbehaltlich der folgenden Einschr\u00e4nkungen: Sie m\u00fcssen auf s\u00e4mtlichen Kopien dieses Dokuments alle Urheberrechtshinweise und sonstigen Hinweise auf gesetzlichen Schutz beibehalten; und Sie d\u00fcrfen dieses Dokument nicht in irgend einer Weise ab\u00e4ndern, noch d\u00fcrfen Sie dieses Dokument f\u00fcr \u00f6ffentliche oder kommerzielle Zwecke vervielf\u00e4ltigen, \u00f6ffentlich ausstellen, auff\u00fchren, vertreiben oder anderweitig nutzen; es sei denn, es liegt Ihnen eine schriftliche Genehmigung von DigiZeitschriften e.V. und vom Herausgeber oder sonstigen Rechteinhaber vor. Mit dem Gebrauch von DigiZeitschriften e.V. und der Verwendung dieses Dokuments erkennen Sie die Nutzungsbedingungen an."
            },
            "slug": "M\u00e9thodes-de-calcul-diff\u00e9rentiel-absolu-et-leurs-Ricci-Levi-Civita",
            "title": {
                "fragments": [],
                "text": "M\u00e9thodes de calcul diff\u00e9rentiel absolu et leurs applications"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1900
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34824488"
                        ],
                        "name": "Bimal Viswanath",
                        "slug": "Bimal-Viswanath",
                        "structuredName": {
                            "firstName": "Bimal",
                            "lastName": "Viswanath",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bimal Viswanath"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1729928"
                        ],
                        "name": "A. Mislove",
                        "slug": "A.-Mislove",
                        "structuredName": {
                            "firstName": "Alan",
                            "lastName": "Mislove",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Mislove"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1775511"
                        ],
                        "name": "M. Cha",
                        "slug": "M.-Cha",
                        "structuredName": {
                            "firstName": "M.",
                            "lastName": "Cha",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Cha"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1958921"
                        ],
                        "name": "K. Gummadi",
                        "slug": "K.-Gummadi",
                        "structuredName": {
                            "firstName": "Krishna",
                            "lastName": "Gummadi",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Gummadi"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 2745943,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6197cb634ffd9a6ce2d40ed31ad7f16556c794ff",
            "isKey": false,
            "numCitedBy": 1439,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "Online social networks have become extremely popular; numerous sites allow users to interact and share content using social links. Users of these networks often establish hundreds to even thousands of social links with other users. Recently, researchers have suggested examining the activity network - a network that is based on the actual interaction between users, rather than mere friendship - to distinguish between strong and weak links. While initial studies have led to insights on how an activity network is structurally different from the social network itself, a natural and important aspect of the activity network has been disregarded: the fact that over time social links can grow stronger or weaker. In this paper, we study the evolution of activity between users in the Facebook social network to capture this notion. We find that links in the activity network tend to come and go rapidly over time, and the strength of ties exhibits a general decreasing trend of activity as the social network link ages. For example, only 30% of Facebook user pairs interact consistently from one month to the next. Interestingly, we also find that even though the links of the activity network change rapidly over time, many graph-theoretic properties of the activity network remain unchanged."
            },
            "slug": "On-the-evolution-of-user-interaction-in-Facebook-Viswanath-Mislove",
            "title": {
                "fragments": [],
                "text": "On the evolution of user interaction in Facebook"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "It is found that links in the activity network tend to come and go rapidly over time, and the strength of ties exhibits a general decreasing trend of activity as the social network link ages."
            },
            "venue": {
                "fragments": [],
                "text": "WOSN '09"
            },
            "year": 2009
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 32,
                                "start": 29
                            }
                        ],
                        "text": "More recently, new libraries [3] and compilers [7] for dense tensors are emerging."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 168,
                                "start": 165
                            }
                        ],
                        "text": "Eigen in particular has proven popular due to its high performance and relative ease of use, and it is used in many large-scale projects such as Google\u2019s TensorFlow [3]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 163,
                                "start": 153
                            }
                        ],
                        "text": "Eigen in particular has proven popular due to its high performance and relative ease of use, and it is used in many large-scale projects such as Google\u2019s TensorFlow [3]. pOSKI is a C library that automatically\nA compiler for dense and sparse tensor algebra."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 10,
                                "start": 0
                            }
                        ],
                        "text": "TensorFlow: Large-scale machine learning on heterogeneous systems, 2015."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 136,
                                "start": 133
                            }
                        ],
                        "text": "TensorFlow is a recent interface for machine learning algorithms that passes dense tensors between kernels in a dataflow computation [3]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 61,
                                "start": 58
                            }
                        ],
                        "text": "Our technique can be used in libraries such as TensorFlow [3], or Eigen [20] or integrated into the compilers of MATLAB [28], Julia [13] or Simit [23]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 116,
                                "start": 113
                            }
                        ],
                        "text": "Finally, TensorFlow recently added some support for sparse tensor computations in the form of hand-coded kernels [3]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "TensorFlow: Large-scale machine learning on heterogeneous systems, 2015. URL http://tensorflow.org/. Software available from tensorflow.org"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50702974"
                        ],
                        "name": "A. Einstein",
                        "slug": "A.-Einstein",
                        "structuredName": {
                            "firstName": "Albert",
                            "lastName": "Einstein",
                            "middleNames": [
                                "B."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Einstein"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 125292869,
            "fieldsOfStudy": [
                "Philosophy"
            ],
            "id": "84c576caeddf05be2eb8891db2dc3e4e0ba61c8e",
            "isKey": false,
            "numCitedBy": 1953,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "The-Foundation-of-the-General-Theory-of-Relativity-Einstein",
            "title": {
                "fragments": [],
                "text": "The Foundation of the General Theory of Relativity"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1916
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35105210"
                        ],
                        "name": "L. Mullin",
                        "slug": "L.-Mullin",
                        "structuredName": {
                            "firstName": "Lenore",
                            "lastName": "Mullin",
                            "middleNames": [
                                "M.",
                                "Restifo"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Mullin"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 118835606,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "3b0d4adde49ad445a801317aa825a71e1c6c1c5c",
            "isKey": false,
            "numCitedBy": 64,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "A-mathematics-of-arrays-Mullin",
            "title": {
                "fragments": [],
                "text": "A mathematics of arrays"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1988
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "16806099"
                        ],
                        "name": "R. Feynman",
                        "slug": "R.-Feynman",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Feynman",
                            "middleNames": [
                                "Phillips"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Feynman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "102895261"
                        ],
                        "name": "R. Leighton",
                        "slug": "R.-Leighton",
                        "structuredName": {
                            "firstName": "Ralph",
                            "lastName": "Leighton",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Leighton"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "98397055"
                        ],
                        "name": "M. Sands",
                        "slug": "M.-Sands",
                        "structuredName": {
                            "firstName": "Matthew",
                            "lastName": "Sands",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Sands"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 118193031,
            "fieldsOfStudy": [
                "Physics"
            ],
            "id": "6999072c2b1067d2227873d3c7b0d09d2b304187",
            "isKey": false,
            "numCitedBy": 1279,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "The-Feynman-Lectures-on-Physics-Addison-Wesley-Feynman-Leighton",
            "title": {
                "fragments": [],
                "text": "The Feynman Lectures on Physics Addison-Wesley Reading"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1963
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "31431661"
                        ],
                        "name": "Brett W. Bader",
                        "slug": "Brett-W.-Bader",
                        "structuredName": {
                            "firstName": "Brett",
                            "lastName": "Bader",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Brett W. Bader"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2271549"
                        ],
                        "name": "M. Berry",
                        "slug": "M.-Berry",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Berry",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Berry"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39964279"
                        ],
                        "name": "M. Browne",
                        "slug": "M.-Browne",
                        "structuredName": {
                            "firstName": "Murray",
                            "lastName": "Browne",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Browne"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 287,
                                "start": 175
                            }
                        ],
                        "text": "1 INTRODUCTION Tensor algebra is a powerful tool for computing onmultidimensional data and has many applications in machine learning, data analytics, engineering, and science [Abadi et al. 2016; Anandkumar et al. 2014; Bader et al. 2008; Einstein 1916; Feynman et al. 1963; Kolecki 2002]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 108106047,
            "fieldsOfStudy": [
                "Engineering"
            ],
            "id": "a9cb4d751a45665b4f81b54b91a014eda46b7b47",
            "isKey": false,
            "numCitedBy": 119,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Discussion-Tracking-in-Enron-Email-using-PARAFAC.-Bader-Berry",
            "title": {
                "fragments": [],
                "text": "Discussion Tracking in Enron Email using PARAFAC."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2008
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717349"
                        ],
                        "name": "D. Knuth",
                        "slug": "D.-Knuth",
                        "structuredName": {
                            "firstName": "Donald",
                            "lastName": "Knuth",
                            "middleNames": [
                                "Ervin"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Knuth"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 5451516,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a3336e6f4d5cfe621dd616d9d9bac443ba4f8b6b",
            "isKey": false,
            "numCitedBy": 2460,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "The-Art-of-Computer-Programming,-Volume-III:-and-Knuth",
            "title": {
                "fragments": [],
                "text": "The Art of Computer Programming, Volume III: Sorting and Searching"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1973
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50170348"
                        ],
                        "name": "R. Leighton",
                        "slug": "R.-Leighton",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Leighton",
                            "middleNames": [
                                "B."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Leighton"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 287,
                                "start": 175
                            }
                        ],
                        "text": "1 INTRODUCTION Tensor algebra is a powerful tool for computing onmultidimensional data and has many applications in machine learning, data analytics, engineering, and science [Abadi et al. 2016; Anandkumar et al. 2014; Bader et al. 2008; Einstein 1916; Feynman et al. 1963; Kolecki 2002]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 117189388,
            "fieldsOfStudy": [
                "Physics"
            ],
            "id": "d1168dc15e456520d5a78d0c04fa2985654b39f4",
            "isKey": false,
            "numCitedBy": 3944,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Feynman-Lectures-on-Physics-Leighton",
            "title": {
                "fragments": [],
                "text": "Feynman Lectures on Physics"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1971
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39682108"
                        ],
                        "name": "M. Lam",
                        "slug": "M.-Lam",
                        "structuredName": {
                            "firstName": "Monica",
                            "lastName": "Lam",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Lam"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "10214063"
                        ],
                        "name": "M. E. Wolf",
                        "slug": "M.-E.-Wolf",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Wolf",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. E. Wolf"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 12283423,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c1e3938cc4110cd6cedf33452b925ba79e85573e",
            "isKey": false,
            "numCitedBy": 491,
            "numCiting": 15,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper proposes an algorithm that improves the locality of a loop nest by transforming the code via interchange, reversal, skewing and tiling. The loop transformation algorithm is based on two concepts: a mathematical formulation of reuse and locality, and a loop transformation theory that unifies the various transforms as unimodular matrix transformations.The algorithm has been implemented in the SUIF (Stanford University Intermediate Format) compiler, and is successful in optimizing codes such as matrix multiplication, successive over-relaxation (SOR), LU decomposition without pivoting, and Givens QR factorization. Performance evaluation indicates that locality optimization is especially crucial for scaling up the performance of parallel code."
            },
            "slug": "A-data-locality-optimizing-algorithm-Lam-Wolf",
            "title": {
                "fragments": [],
                "text": "A data locality optimizing algorithm"
            },
            "tldr": {
                "abstractSimilarityScore": 63,
                "text": "An algorithm that improves the locality of a loop nest by transforming the code via interchange, reversal, skewing and tiling is proposed, and is successful in optimizing codes such as matrix multiplication, successive over-relaxation, LU decomposition without pivoting, and Givens QR factorization."
            },
            "venue": {
                "fragments": [],
                "text": "SIGP"
            },
            "year": 2004
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A fast dynamic language for technical computing. CoRR, abs/1209"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 56,
                                "start": 53
                            }
                        ],
                        "text": "A number of languages [13, 22, 28], libraries [2, 5, 20, 36, 43, 48], and compilers [31, 39] have been developed to support dense linear algebra."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Intel math kernel library reference man- ual"
            },
            "venue": {
                "fragments": [],
                "text": "Intel math kernel library reference man- ual"
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Intel math kernel library reference manual"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 79,
                                "start": 56
                            }
                        ],
                        "text": "2013]; and CTF with a focus on distributed computations [Solomonik et al. 2014]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A massively parallel tensor"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2014
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A compiler for dense and sparse tensor algebra"
            },
            "venue": {
                "fragments": [],
                "text": "A compiler for dense and sparse tensor algebra"
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "\u008ce Foundation of the General \u008ceory of Relativity"
            },
            "venue": {
                "fragments": [],
                "text": "Annalen der Physik"
            },
            "year": 2011
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Tensor-Matrix Multiplication"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2015
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Ten-sorFlow: Large-scale machine learning on heterogeneous systems"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2015
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "\u008ae art of computer programming: sorting and searching"
            },
            "venue": {
                "fragments": [],
                "text": "Vol. 3. Pearson Education. Joseph C Kolecki"
            },
            "year": 1973
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 82,
                                "start": 77
                            }
                        ],
                        "text": "However, their sparse matrix formats are limited to coordinate, CSR and CSC. PETSc targets distributed systems and scientific computing."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 59,
                                "start": 54
                            }
                        ],
                        "text": "More recently MATLAB [28], Julia [13], Eigen [20] and PETSc [11] have become popular for computing with sparse matrices."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 35,
                                "start": 16
                            }
                        ],
                        "text": "2010) and PETSc (Balay et al. 1997) have become popular for computing with sparse matrices."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "E\u0081cient management of parallelism in object-oriented numerical so\u0089ware libraries"
            },
            "venue": {
                "fragments": [],
                "text": "Modern so\u0087ware tools for scienti\u0080c computing. Springer, Birkh\u00e4user Boston, 163\u2013202."
            },
            "year": 1997
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A.compile(); 20 A.assemble(); 21 A.compute(); References"
            },
            "venue": {
                "fragments": [],
                "text": "A.compile(); 20 A.assemble(); 21 A.compute(); References"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 75,
                                "start": 71
                            }
                        ],
                        "text": "Most sparse matrix applications use libraries [11, 20, 32, 46], though some compilers [14, 26, 44] do support sparse linear algebra."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Cusparse library. NVIDIA Corporation"
            },
            "venue": {
                "fragments": [],
                "text": "Cusparse library. NVIDIA Corporation"
            },
            "year": 2014
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 41,
                                "start": 37
                            }
                        ],
                        "text": "A number of languages [13, 22, 28], libraries [2, 5, 20, 36, 43, 48], and compilers [31, 39] have been developed to support dense linear algebra."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "MATLAB. version 8.3.0 (R2014a). The MathWorks Inc"
            },
            "venue": {
                "fragments": [],
                "text": "MATLAB. version 8.3.0 (R2014a). The MathWorks Inc"
            },
            "year": 2014
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An inputadaptive and in - place approach to dense tensortimesmatrix multiply"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2015
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "\u008ce NumPy array: a structure for e\u0081cient"
            },
            "venue": {
                "fragments": [],
                "text": "factorization. Proc. IEEE 55,"
            },
            "year": 1967
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "TensorFlow Sparse Tensors"
            },
            "venue": {
                "fragments": [],
                "text": "https://www.tensorflow.org/api_guides/python/sparse_ops. (2017)."
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "On the representation andmultiplication of hypersparse matrices"
            },
            "venue": {
                "fragments": [],
                "text": "IEEE International Symposium on Parallel and Distributed Processing, (IPDPS). 1\u201311."
            },
            "year": 2008
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Intel math kernel library reference manual"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Tensor<double> c({2048}, dv)"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Intel math kernel library reference manual"
            },
            "venue": {
                "fragments": [],
                "text": "Intel"
            },
            "year": 1978
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "FROSTT: The Formidable Repository of Open Sparse Tensors and Tools"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Autotuning sparse matrixvector multiplication for multicore"
            },
            "venue": {
                "fragments": [],
                "text": "EECS , UC Berkeley , Tech . Rep"
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Tensor<double> c({512}, svec)"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Sparso: Context-driven"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2016
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A(i,j) = B(i,j,k) * c(k)"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 52,
                                "start": 49
                            }
                        ],
                        "text": "More recently, new libraries [3] and compilers [7] for dense tensors are emerging."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "TensorFlow: Large-scale machine learning on heterogeneous systems"
            },
            "venue": {
                "fragments": [],
                "text": "TensorFlow: Large-scale machine learning on heterogeneous systems"
            },
            "year": 2015
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "TensorFlow Sparse Tensors"
            },
            "venue": {
                "fragments": [],
                "text": "\u008ae Feynman Lectures on Physics"
            },
            "year": 2013
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 24,
                                "start": 6
                            }
                        ],
                        "text": "pOSKI (Byun et al. 2012) is another library that is built on top of OSKI and implements a number of parallel optimizations from Williams (2007)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 138,
                                "start": 101
                            }
                        ],
                        "text": "OSKI and the parallel pOSKI are well-known libraries that support auto-tuning of some sparse kernels (Byun et al. 2012; Vuduc et al. 2005)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Autotuning sparse matrix-vector multiplication"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 62,
                                "start": 46
                            }
                        ],
                        "text": "Most sparse matrix applications use libraries [11, 20, 32, 46], though some compilers [14, 26, 44] do support sparse linear algebra."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Cusparse library"
            },
            "venue": {
                "fragments": [],
                "text": "NVIDIA Corporation, Santa Clara, California,"
            },
            "year": 2014
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Format svec({Sparse})"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Format dv({Dense}, {0})"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "J. Mach. Learn. Res"
            },
            "venue": {
                "fragments": [],
                "text": "J. Mach. Learn. Res"
            }
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 16,
            "methodology": 9
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 99,
        "totalPages": 10
    },
    "page_url": "https://www.semanticscholar.org/paper/The-tensor-algebra-compiler-Kjolstad-Kamil/c2e1139691c3a337831e36ee7afeab8817ab5d48?sort=total-citations"
}