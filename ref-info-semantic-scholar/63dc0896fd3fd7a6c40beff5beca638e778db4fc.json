{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1694512"
                        ],
                        "name": "H. Chafi",
                        "slug": "H.-Chafi",
                        "structuredName": {
                            "firstName": "Hassan",
                            "lastName": "Chafi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Chafi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1706327"
                        ],
                        "name": "Arvind K. Sujeeth",
                        "slug": "Arvind-K.-Sujeeth",
                        "structuredName": {
                            "firstName": "Arvind",
                            "lastName": "Sujeeth",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Arvind K. Sujeeth"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144806284"
                        ],
                        "name": "Kevin J. Brown",
                        "slug": "Kevin-J.-Brown",
                        "structuredName": {
                            "firstName": "Kevin",
                            "lastName": "Brown",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kevin J. Brown"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34946720"
                        ],
                        "name": "HyoukJoong Lee",
                        "slug": "HyoukJoong-Lee",
                        "structuredName": {
                            "firstName": "HyoukJoong",
                            "lastName": "Lee",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "HyoukJoong Lee"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2920004"
                        ],
                        "name": "Anand R. Atreya",
                        "slug": "Anand-R.-Atreya",
                        "structuredName": {
                            "firstName": "Anand",
                            "lastName": "Atreya",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Anand R. Atreya"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1746638"
                        ],
                        "name": "K. Olukotun",
                        "slug": "K.-Olukotun",
                        "structuredName": {
                            "firstName": "Kunle",
                            "lastName": "Olukotun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Olukotun"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 173,
                                "start": 155
                            }
                        ],
                        "text": "We have shown that the OptiML compiler can perform domain-specific optimizations and generate efficient parallel code for heterogeneous devices without exposing any parallelism or device details to OptiML users."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 245,
                                "start": 227
                            }
                        ],
                        "text": "In previous work we have shown that relaxing dependencies between the outer loop iterations, allowing iterations to sometimes run in parallel, can increase performance by 1.8x with less than 1% loss in classification accuracy (Chafi et al., 2011)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 6,
                                "start": 0
                            }
                        ],
                        "text": "Delite schedules the OptiML operations on the underlying hardware and provides synchronization and communication between kernels."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 294,
                                "start": 276
                            }
                        ],
                        "text": "\u2026have remained unchanged in the previous n iterations creates a unique tradeoff between accuracy and performance for different values of n. Specifically, we observed speedups of 1.8x with a 1.2% loss in accuracy, 4.9x with a 4.2% loss, and 12.7x with a 7.4% loss in accuracy (Chafi et al., 2011)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 48,
                                "start": 42
                            }
                        ],
                        "text": "An OptiML program is executed by invoking Delite with the execution graph and generated code."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 70,
                                "start": 52
                            }
                        ],
                        "text": "OptiML is built on top of a common runtime, Delite (Chafi et al., 2011), that is designed specifically for heterogeneous parallel DSLs."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 8342773,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "fdf5855c9ccffbcfb2b2380879fd743be47a1ccf",
            "isKey": false,
            "numCitedBy": 168,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "Exploiting heterogeneous parallel hardware currently requires mapping application code to multiple disparate programming models. Unfortunately, general-purpose programming models available today can yield high performance but are too low-level to be accessible to the average programmer. We propose leveraging domain-specific languages (DSLs) to map high-level application code to heterogeneous devices. To demonstrate the potential of this approach we present OptiML, a DSL for machine learning. OptiML programs are implicitly parallel and can achieve high performance on heterogeneous hardware with no modification required to the source code. For such a DSL-based approach to be tractable at large scales, better tools are required for DSL authors to simplify language creation and parallelization. To address this concern, we introduce Delite, a system designed specifically for DSLs that is both a framework for creating an implicitly parallel DSL as well as a dynamic runtime providing automated targeting to heterogeneous parallel hardware. We show that OptiML running on Delite achieves single-threaded, parallel, and GPU performance superior to explicitly parallelized MATLAB code in nearly all cases."
            },
            "slug": "A-domain-specific-approach-to-heterogeneous-Chafi-Sujeeth",
            "title": {
                "fragments": [],
                "text": "A domain-specific approach to heterogeneous parallelism"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "Delite is introduced, a system designed specifically for DSLs that is both a framework for creating an implicitly parallel DSL as well as a dynamic runtime providing automated targeting to heterogeneous parallel hardware."
            },
            "venue": {
                "fragments": [],
                "text": "PPoPP '11"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1680638"
                        ],
                        "name": "Y. Low",
                        "slug": "Y.-Low",
                        "structuredName": {
                            "firstName": "Yucheng",
                            "lastName": "Low",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Y. Low"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49988044"
                        ],
                        "name": "Joseph E. Gonzalez",
                        "slug": "Joseph-E.-Gonzalez",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Gonzalez",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Joseph E. Gonzalez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717990"
                        ],
                        "name": "Aapo Kyrola",
                        "slug": "Aapo-Kyrola",
                        "structuredName": {
                            "firstName": "Aapo",
                            "lastName": "Kyrola",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Aapo Kyrola"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1741745"
                        ],
                        "name": "D. Bickson",
                        "slug": "D.-Bickson",
                        "structuredName": {
                            "firstName": "Danny",
                            "lastName": "Bickson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Bickson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1730156"
                        ],
                        "name": "Carlos Guestrin",
                        "slug": "Carlos-Guestrin",
                        "structuredName": {
                            "firstName": "Carlos",
                            "lastName": "Guestrin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Carlos Guestrin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1695576"
                        ],
                        "name": "J. Hellerstein",
                        "slug": "J.-Hellerstein",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Hellerstein",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hellerstein"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 238,
                                "start": 222
                            }
                        ],
                        "text": "This section presents performance results for a set of machine learning applications written in OptiML and compares them to reference implementations written using existing alternative systems, including MATLAB, GraphLab (Low et al., 2010), and C++."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 61494,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4187caa4d0d329f47e18377a6cd31ef3f580cfcc",
            "isKey": false,
            "numCitedBy": 831,
            "numCiting": 23,
            "paperAbstract": {
                "fragments": [],
                "text": "Designing and implementing efficient, provably correct parallel machine learning (ML) algorithms is challenging. Existing high-level parallel abstractions like MapReduce are insufficiently expressive while low-level tools like MPI and Pthreads leave ML experts repeatedly solving the same design challenges. By targeting common patterns in ML, we developed GraphLab, which improves upon abstractions like MapReduce by compactly expressing asynchronous iterative algorithms with sparse computational dependencies while ensuring data consistency and achieving a high degree of parallel performance. We demonstrate the expressiveness of the GraphLab framework by designing and implementing parallel versions of belief propagation, Gibbs sampling, Co-EM, Lasso and Compressed Sensing. We show that using GraphLab we can achieve excellent parallel performance on large scale real-world problems."
            },
            "slug": "GraphLab:-A-New-Framework-For-Parallel-Machine-Low-Gonzalez",
            "title": {
                "fragments": [],
                "text": "GraphLab: A New Framework For Parallel Machine Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "The expressiveness of the GraphLab framework is demonstrated by designing and implementing parallel versions of belief propagation, Gibbs sampling, Co-EM, Lasso and Compressed Sensing and it is shown that using GraphLab the authors can achieve excellent parallel performance on large scale real-world problems."
            },
            "venue": {
                "fragments": [],
                "text": "UAI"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2551676"
                        ],
                        "name": "Cheng-Tao Chu",
                        "slug": "Cheng-Tao-Chu",
                        "structuredName": {
                            "firstName": "Cheng-Tao",
                            "lastName": "Chu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Cheng-Tao Chu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109828167"
                        ],
                        "name": "Sang Kyun Kim",
                        "slug": "Sang-Kyun-Kim",
                        "structuredName": {
                            "firstName": "Sang",
                            "lastName": "Kim",
                            "middleNames": [
                                "Kyun"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sang Kyun Kim"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47904256"
                        ],
                        "name": "Yi-An Lin",
                        "slug": "Yi-An-Lin",
                        "structuredName": {
                            "firstName": "Yi-An",
                            "lastName": "Lin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yi-An Lin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2117163611"
                        ],
                        "name": "YuanYuan Yu",
                        "slug": "YuanYuan-Yu",
                        "structuredName": {
                            "firstName": "YuanYuan",
                            "lastName": "Yu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "YuanYuan Yu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1720184"
                        ],
                        "name": "G. Bradski",
                        "slug": "G.-Bradski",
                        "structuredName": {
                            "firstName": "Gary",
                            "lastName": "Bradski",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Bradski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34699434"
                        ],
                        "name": "A. Ng",
                        "slug": "A.-Ng",
                        "structuredName": {
                            "firstName": "A.",
                            "lastName": "Ng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Ng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1746638"
                        ],
                        "name": "K. Olukotun",
                        "slug": "K.-Olukotun",
                        "structuredName": {
                            "firstName": "Kunle",
                            "lastName": "Olukotun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Olukotun"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 160,
                                "start": 144
                            }
                        ],
                        "text": "\u2026clustering algorithm is written in OptiML:\nuntilconverged(mu, tol){ mu =>\n// calculate distances to current centroids val c = (0::m){i =>\nval allDistances = mu mapRows { centroid => // distance from sample x(i) to centroid ((x(i)-centroid)*(x(i)-centroid)).sum } allDistances.minIndex\n}\n//\u2026"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 238,
                                "start": 222
                            }
                        ],
                        "text": "OptiML is designed to handle iterative statistical inference problems, in particular those that can be expressed by the Statistical Query Model (Kearns, 1998) which has been shown to cover a large subset of ML algorithms (Chu et al., 2007)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 183466,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "38aff6df1accc456f6cda7d16d4b9ecf418ef21e",
            "isKey": false,
            "numCitedBy": 1076,
            "numCiting": 30,
            "paperAbstract": {
                "fragments": [],
                "text": "We are at the beginning of the multicore era. Computers will have increasingly many cores (processors), but there is still no good programming framework for these architectures, and thus no simple and unified way for machine learning to take advantage of the potential speed up. In this paper, we develop a broadly applicable parallel programming method, one that is easily applied to many different learning algorithms. Our work is in distinct contrast to the tradition in machine learning of designing (often ingenious) ways to speed up a single algorithm at a time. Specifically, we show that algorithms that fit the Statistical Query model [15] can be written in a certain \"summation form,\" which allows them to be easily parallelized on multicore computers. We adapt Google's map-reduce [7] paradigm to demonstrate this parallel speed up technique on a variety of learning algorithms including locally weighted linear regression (LWLR), k-means, logistic regression (LR), naive Bayes (NB), SVM, ICA, PCA, gaussian discriminant analysis (GDA), EM, and backpropagation (NN). Our experimental results show basically linear speedup with an increasing number of processors."
            },
            "slug": "Map-Reduce-for-Machine-Learning-on-Multicore-Chu-Kim",
            "title": {
                "fragments": [],
                "text": "Map-Reduce for Machine Learning on Multicore"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "This work shows that algorithms that fit the Statistical Query model can be written in a certain \"summation form,\" which allows them to be easily parallelized on multicore computers and shows basically linear speedup with an increasing number of processors."
            },
            "venue": {
                "fragments": [],
                "text": "NIPS"
            },
            "year": 2006
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1694512"
                        ],
                        "name": "H. Chafi",
                        "slug": "H.-Chafi",
                        "structuredName": {
                            "firstName": "Hassan",
                            "lastName": "Chafi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Chafi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2375710"
                        ],
                        "name": "Zach DeVito",
                        "slug": "Zach-DeVito",
                        "structuredName": {
                            "firstName": "Zach",
                            "lastName": "DeVito",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zach DeVito"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "5703791"
                        ],
                        "name": "Adriaan Moors",
                        "slug": "Adriaan-Moors",
                        "structuredName": {
                            "firstName": "Adriaan",
                            "lastName": "Moors",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Adriaan Moors"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1712987"
                        ],
                        "name": "Tiark Rompf",
                        "slug": "Tiark-Rompf",
                        "structuredName": {
                            "firstName": "Tiark",
                            "lastName": "Rompf",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tiark Rompf"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1706327"
                        ],
                        "name": "Arvind K. Sujeeth",
                        "slug": "Arvind-K.-Sujeeth",
                        "structuredName": {
                            "firstName": "Arvind",
                            "lastName": "Sujeeth",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Arvind K. Sujeeth"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144872229"
                        ],
                        "name": "P. Hanrahan",
                        "slug": "P.-Hanrahan",
                        "structuredName": {
                            "firstName": "Pat",
                            "lastName": "Hanrahan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Hanrahan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1795826"
                        ],
                        "name": "Martin Odersky",
                        "slug": "Martin-Odersky",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Odersky",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Martin Odersky"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1746638"
                        ],
                        "name": "K. Olukotun",
                        "slug": "K.-Olukotun",
                        "structuredName": {
                            "firstName": "Kunle",
                            "lastName": "Olukotun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Olukotun"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 123,
                                "start": 105
                            }
                        ],
                        "text": "A way to achieve performance and productivity is to give up generality and focus on a particular domain (Chafi et al., 2010)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 3411521,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5a1fc5f866e908b815e22db79728dcd973f46d6b",
            "isKey": false,
            "numCitedBy": 120,
            "numCiting": 66,
            "paperAbstract": {
                "fragments": [],
                "text": "As heterogeneous parallel systems become dominant, application developers are being forced to turn to an incompatiblemix of low level programming models (e.g. OpenMP, MPI, CUDA, OpenCL). However, these models do little to shield developers from the difficult problems of parallelization, data decomposition and machine-specific details. Most programmersare having a difficult time using these programming models effectively. To provide a programming modelthat addresses the productivity and performance requirements for the average programmer, we explore a domainspecificapproach to heterogeneous parallel programming. We propose language virtualization as a new principle that enables the construction of highly efficient parallel domain specific languages that are embedded in a common host language. We define criteria for language virtualization and present techniques to achieve them.We present two concrete case studies of domain-specific languages that are implemented using our virtualization approach."
            },
            "slug": "Language-virtualization-for-heterogeneous-parallel-Chafi-DeVito",
            "title": {
                "fragments": [],
                "text": "Language virtualization for heterogeneous parallel computing"
            },
            "tldr": {
                "abstractSimilarityScore": 37,
                "text": "This work proposes language virtualization as a new principle that enables the construction of highly efficient parallel domain specific languages that are embedded in a common host language."
            },
            "venue": {
                "fragments": [],
                "text": "OOPSLA"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "36758880"
                        ],
                        "name": "Jiayuan Meng",
                        "slug": "Jiayuan-Meng",
                        "structuredName": {
                            "firstName": "Jiayuan",
                            "lastName": "Meng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jiayuan Meng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1752242"
                        ],
                        "name": "S. Chakradhar",
                        "slug": "S.-Chakradhar",
                        "structuredName": {
                            "firstName": "Srimat",
                            "lastName": "Chakradhar",
                            "middleNames": [
                                "T."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Chakradhar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145291370"
                        ],
                        "name": "A. Raghunathan",
                        "slug": "A.-Raghunathan",
                        "structuredName": {
                            "firstName": "Anand",
                            "lastName": "Raghunathan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Raghunathan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 158,
                                "start": 141
                            }
                        ],
                        "text": "Best-effort computing: because many ML algorithms are iterative and probabilistic, they are of-\nten robust to minor variations in computation (Meng et al., 2009)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 197,
                                "start": 178
                            }
                        ],
                        "text": "Dynamic domain-specific optimizations: Best-e ort computing: because many ML algorithms are iterative and probabilistic, they are often robust to minor variations in computation (Meng et al., 2009)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 932029,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f6b9860435111cfafce9be57455905464a75cf94",
            "isKey": false,
            "numCitedBy": 88,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "Recognition and mining (RM) applications are an emerging class of computing workloads that will be commonly executed on future multi-core and many-core computing platforms. The explosive growth of input data and the use of more sophisticated algorithms in RM applications will ensure, for the foreseeable future, a significant gap between the computational needs of RM applications and the capabilities of rapidly evolving multi- or many-core platforms. To address this gap, we propose a new parallel programming model that inherently embodies the notion of best-effort computing, wherein the underlying parallel computing environment is not expected to be perfect. The proposed best-effort programming model leverages three key characteristics of RM applications: (1) the input data is noisy and it often contains significant redundancy, (2) computations performed on the input data are statistical in nature, and (3) some degree of imprecision in the output is acceptable. As a specific instance of the best-effort parallel programming model, we describe an \u201citerative-convergence\u201d parallel template, which is used by a significant class of RM applications. We show how best-effort computing can be used to not only reduce computational workload, but to also eliminate dependencies between computations and further increase parallelism. Our experiments on an 8-core machine demonstrate a speed-up of 3.5X and 4.3X for the K-means and GLVQ algorithms, respectively, over a conventional parallel implementation. We also show that there is almost no material impact on the accuracy of results obtained from best-effort implementations in the application context of image segmentation using K-means and eye detection in images using GLVQ."
            },
            "slug": "Best-effort-parallel-execution-framework-for-and-Meng-Chakradhar",
            "title": {
                "fragments": [],
                "text": "Best-effort parallel execution framework for Recognition and mining applications"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "It is shown how best-effort computing can be used to not only reduce computational workload, but to also eliminate dependencies between computations and further increase parallelism."
            },
            "venue": {
                "fragments": [],
                "text": "2009 IEEE International Symposium on Parallel & Distributed Processing"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8218398"
                        ],
                        "name": "V. Lee",
                        "slug": "V.-Lee",
                        "structuredName": {
                            "firstName": "Victor",
                            "lastName": "Lee",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Lee"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "7297702"
                        ],
                        "name": "Changkyu Kim",
                        "slug": "Changkyu-Kim",
                        "structuredName": {
                            "firstName": "Changkyu",
                            "lastName": "Kim",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Changkyu Kim"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1727275"
                        ],
                        "name": "J. Chhugani",
                        "slug": "J.-Chhugani",
                        "structuredName": {
                            "firstName": "Jatin",
                            "lastName": "Chhugani",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Chhugani"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1907053"
                        ],
                        "name": "M. Deisher",
                        "slug": "M.-Deisher",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Deisher",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Deisher"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111926329"
                        ],
                        "name": "Daehyun Kim",
                        "slug": "Daehyun-Kim",
                        "structuredName": {
                            "firstName": "Daehyun",
                            "lastName": "Kim",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daehyun Kim"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32661398"
                        ],
                        "name": "A. Nguyen",
                        "slug": "A.-Nguyen",
                        "structuredName": {
                            "firstName": "Anthony",
                            "lastName": "Nguyen",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Nguyen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143758120"
                        ],
                        "name": "N. Satish",
                        "slug": "N.-Satish",
                        "structuredName": {
                            "firstName": "Nadathur",
                            "lastName": "Satish",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Satish"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1711231"
                        ],
                        "name": "M. Smelyanskiy",
                        "slug": "M.-Smelyanskiy",
                        "structuredName": {
                            "firstName": "Mikhail",
                            "lastName": "Smelyanskiy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Smelyanskiy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3066815"
                        ],
                        "name": "Srinivas Chennupaty",
                        "slug": "Srinivas-Chennupaty",
                        "structuredName": {
                            "firstName": "Srinivas",
                            "lastName": "Chennupaty",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Srinivas Chennupaty"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3258280"
                        ],
                        "name": "Per Hammarlund",
                        "slug": "Per-Hammarlund",
                        "structuredName": {
                            "firstName": "Per",
                            "lastName": "Hammarlund",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Per Hammarlund"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50101920"
                        ],
                        "name": "Ronak Singhal",
                        "slug": "Ronak-Singhal",
                        "structuredName": {
                            "firstName": "Ronak",
                            "lastName": "Singhal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ronak Singhal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145126868"
                        ],
                        "name": "P. Dubey",
                        "slug": "P.-Dubey",
                        "structuredName": {
                            "firstName": "Pradeep",
                            "lastName": "Dubey",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Dubey"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 220,
                                "start": 211
                            }
                        ],
                        "text": "Furthermore, a significant analysis effort is required to match the various parts of the application to the different programming models, and a mix of programming models is required to achieve peak performance (Lee, 2010)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 10039635,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "94fd94b7ebcdd80e47706376aa0540cbeb009262",
            "isKey": false,
            "numCitedBy": 821,
            "numCiting": 74,
            "paperAbstract": {
                "fragments": [],
                "text": "Recent advances in computing have led to an explosion in the amount of data being generated. Processing the ever-growing data in a timely manner has made throughput computing an important aspect for emerging applications. Our analysis of a set of important throughput computing kernels shows that there is an ample amount of parallelism in these kernels which makes them suitable for today's multi-core CPUs and GPUs. In the past few years there have been many studies claiming GPUs deliver substantial speedups (between 10X and 1000X) over multi-core CPUs on these kernels. To understand where such large performance difference comes from, we perform a rigorous performance analysis and find that after applying optimizations appropriate for both CPUs and GPUs the performance gap between an Nvidia GTX280 processor and the Intel Core i7-960 processor narrows to only 2.5x on average. In this paper, we discuss optimization techniques for both CPU and GPU, analyze what architecture features contributed to performance differences between the two architectures, and recommend a set of architectural features which provide significant improvement in architectural efficiency for throughput kernels."
            },
            "slug": "Debunking-the-100X-GPU-vs.-CPU-myth:-an-evaluation-Lee-Kim",
            "title": {
                "fragments": [],
                "text": "Debunking the 100X GPU vs. CPU myth: an evaluation of throughput computing on CPU and GPU"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This paper discusses optimization techniques for both CPU and GPU, analyzes what architecture features contributed to performance differences between the two architectures, and recommends a set of architectural features which provide significant improvement in architectural efficiency for throughput kernels."
            },
            "venue": {
                "fragments": [],
                "text": "ISCA"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1712987"
                        ],
                        "name": "Tiark Rompf",
                        "slug": "Tiark-Rompf",
                        "structuredName": {
                            "firstName": "Tiark",
                            "lastName": "Rompf",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tiark Rompf"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1795826"
                        ],
                        "name": "Martin Odersky",
                        "slug": "Martin-Odersky",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Odersky",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Martin Odersky"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 256,
                                "start": 236
                            }
                        ],
                        "text": "From a syntactic and semantic point of view, this illusion is maintained; OptiML programs require no knowledge of the underlying embedding implementation, no explicit parallelization, and no explicit code for the lower level programming models (e.g. CUDA)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 99,
                                "start": 78
                            }
                        ],
                        "text": "OptiML uses a metaprogramming technique known as lightweight modular staging (Rompf & Odersky, 2010) to build an intermediate representation of a program."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 11663179,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "74fd59dabab7b156702b148bb64f8e1ee54f6862",
            "isKey": false,
            "numCitedBy": 384,
            "numCiting": 116,
            "paperAbstract": {
                "fragments": [],
                "text": "Software engineering demands generality and abstraction, performance demands specialization and concretization. Generative programming can provide both, but the effort required to develop high-quality program generators likely offsets their benefits, even if a multi-stage programming language is used.\n We present lightweight modular staging, a library-based multi-stage programming approach that breaks with the tradition of syntactic quasi-quotation and instead uses only types to distinguish between binding times. Through extensive use of component technology, lightweight modular staging makes an optimizing compiler framework available at the library level, allowing programmers to tightly integrate domain-specific abstractions and optimizations into the generation process.\n We argue that lightweight modular staging enables a form of language virtualization, i.e. allows to go from a pure-library embedded language to one that is practically equivalent to a stand-alone implementation with only modest effort."
            },
            "slug": "Lightweight-modular-staging:-a-pragmatic-approach-Rompf-Odersky",
            "title": {
                "fragments": [],
                "text": "Lightweight modular staging: a pragmatic approach to runtime code generation and compiled DSLs"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "It is argued that lightweight modular staging enables a form of language virtualization, i.e. allows to go from a pure-library embedded language to one that is practically equivalent to a stand-alone implementation with only modest effort."
            },
            "venue": {
                "fragments": [],
                "text": "GPCE '10"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49949672"
                        ],
                        "name": "H. Sutter",
                        "slug": "H.-Sutter",
                        "structuredName": {
                            "firstName": "Herb",
                            "lastName": "Sutter",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Sutter"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 83,
                                "start": 71
                            }
                        ],
                        "text": "However, taking advantage of these heterogeneous systems is difficult (Sutter, 2005)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 82,
                                "start": 68
                            }
                        ],
                        "text": "However, taking advantage of these heterogeneous systems is di cult (Sutter, 2005)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 59674034,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "324d81807507a03b9e301def1887f686b18c13bc",
            "isKey": false,
            "numCitedBy": 734,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "The major processor manufacturers and architectures, from Intel and AMD to Sparc and PowerPC, have run out of room with most of their traditional approaches to boosting CPU performance. Instead of driving clock speeds and straight-line instruction throughput ever higher, they are instead turning en masse to hyperthreading and multicore architectures. Both of these features are already available on chips today; in particular, multicore is available on current PowerPC and Sparc IV processors, and is coming in 2005 from Intel and AMD. Indeed, the big theme of the 2004 InStat/MDR Fall Processor Forum was multicore devices, as many companies showed new or updated multicore processors. Looking back, it\u2019s not much of a stretch to call 2004 the year of multicore."
            },
            "slug": "The-Free-Lunch-Is-Over-A-Fundamental-Turn-Toward-in-Sutter",
            "title": {
                "fragments": [],
                "text": "The Free Lunch Is Over A Fundamental Turn Toward Concurrency in Software"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "Looking back, it\u2019s not much of a stretch to call 2004 the year of multicore, as many companies showed new or updated multicore processors."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8195063"
                        ],
                        "name": "Martin A. Zinkevich",
                        "slug": "Martin-A.-Zinkevich",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Zinkevich",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Martin A. Zinkevich"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2965406"
                        ],
                        "name": "Markus Weimer",
                        "slug": "Markus-Weimer",
                        "structuredName": {
                            "firstName": "Markus",
                            "lastName": "Weimer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Markus Weimer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46234526"
                        ],
                        "name": "Alex Smola",
                        "slug": "Alex-Smola",
                        "structuredName": {
                            "firstName": "Alex",
                            "lastName": "Smola",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alex Smola"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47681372"
                        ],
                        "name": "Lihong Li",
                        "slug": "Lihong-Li",
                        "structuredName": {
                            "firstName": "Lihong",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lihong Li"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 35,
                                "start": 13
                            }
                        ],
                        "text": "Recent work (Zinkevich et al., 2010) has shown the potential for this optimization."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 7885987,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "83e9565cede81b2b88a9fa241833135da142f4d3",
            "isKey": false,
            "numCitedBy": 1151,
            "numCiting": 12,
            "paperAbstract": {
                "fragments": [],
                "text": "With the increase in available data parallel machine learning has become an increasingly pressing problem. In this paper we present the first parallel stochastic gradient descent algorithm including a detailed analysis and experimental evidence. Unlike prior work on parallel optimization algorithms [5, 7] our variant comes with parallel acceleration guarantees and it poses no overly tight latency constraints, which might only be available in the multicore setting. Our analysis introduces a novel proof technique \u2014 contractive mappings to quantify the speed of convergence of parameter distributions to their asymptotic limits. As a side effect this answers the question of how quickly stochastic gradient descent algorithms reach the asymptotically normal regime [1, 8]."
            },
            "slug": "Parallelized-Stochastic-Gradient-Descent-Zinkevich-Weimer",
            "title": {
                "fragments": [],
                "text": "Parallelized Stochastic Gradient Descent"
            },
            "tldr": {
                "abstractSimilarityScore": 56,
                "text": "This paper presents the first parallel stochastic gradient descent algorithm including a detailed analysis and experimental evidence and introduces a novel proof technique \u2014 contractive mappings to quantify the speed of convergence of parameter distributions to their asymptotic limits."
            },
            "venue": {
                "fragments": [],
                "text": "NIPS"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145039030"
                        ],
                        "name": "J. Platt",
                        "slug": "J.-Platt",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Platt",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Platt"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 87,
                                "start": 76
                            }
                        ],
                        "text": "As a practical example, consider the following line from the SMO algorithm (Platt, 1998) for SVM ("
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 101
                            }
                        ],
                        "text": "Without optimization, the OptiML version is 3x slower than a hand-optimized, manually-parallelized C++ version, as shown in Figure 3."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 577580,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "53fcc056f79e04daf11eb798a7238e93699665aa",
            "isKey": false,
            "numCitedBy": 2871,
            "numCiting": 23,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper proposes a new algorithm for training support vector machines: Sequential Minimal Optimization, or SMO. Training a support vector machine requires the solution of a very large quadratic programming (QP) optimization problem. SMO breaks this large QP problem into a series of smallest possible QP problems. These small QP problems are solved analytically, which avoids using a time-consuming numerical QP optimization as an inner loop. The amount of memory required for SMO is linear in the training set size, which allows SMO to handle very large training sets. Because matrix computation is avoided, SMO scales somewhere between linear and quadratic in the training set size for various test problems, while the standard chunking SVM algorithm scales somewhere between linear and cubic in the training set size. SMO\u2019s computation time is dominated by SVM evaluation, hence SMO is fastest for linear SVMs and sparse data sets. On realworld sparse data sets, SMO can be more than 1000 times faster than the chunking algorithm."
            },
            "slug": "Sequential-Minimal-Optimization-:-A-Fast-Algorithm-Platt",
            "title": {
                "fragments": [],
                "text": "Sequential Minimal Optimization : A Fast Algorithm for Training Support Vector Machines"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1998
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2626428"
                        ],
                        "name": "Christian Hofer",
                        "slug": "Christian-Hofer",
                        "structuredName": {
                            "firstName": "Christian",
                            "lastName": "Hofer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christian Hofer"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1840431"
                        ],
                        "name": "K. Ostermann",
                        "slug": "K.-Ostermann",
                        "structuredName": {
                            "firstName": "Klaus",
                            "lastName": "Ostermann",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Ostermann"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1736496"
                        ],
                        "name": "Tillmann Rendel",
                        "slug": "Tillmann-Rendel",
                        "structuredName": {
                            "firstName": "Tillmann",
                            "lastName": "Rendel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tillmann Rendel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "5703791"
                        ],
                        "name": "Adriaan Moors",
                        "slug": "Adriaan-Moors",
                        "structuredName": {
                            "firstName": "Adriaan",
                            "lastName": "Moors",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Adriaan Moors"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 106,
                                "start": 88
                            }
                        ],
                        "text": "OptiML is a domain-specific language embedded in Scala (Odersky, 2011), (Hudak, 1996), (Hofer et al., 2008)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 11035272,
            "fieldsOfStudy": [
                "Computer Science",
                "Materials Science"
            ],
            "id": "9683e1fb460bcaec1235f1b7bdd23e39c6b18a8c",
            "isKey": false,
            "numCitedBy": 123,
            "numCiting": 36,
            "paperAbstract": {
                "fragments": [],
                "text": "The influential pure embedding methodology of embedding domain-specific languages (DSLs) as libraries into a general-purpose host language forces the DSL designer to commit to a single semantics. This precludes the subsequent addition of compilation, optimization or domain-specific analyses. We propose polymorphic embedding of DSLs, where many different interpretations of a DSL can be provided as reusable components, and show how polymorphic embedding can be realized in the programming language Scala. With polymorphic embedding, the static type-safety, modularity, composability and rapid prototyping of pure embedding are reconciled with the flexibility attainable by external toolchains."
            },
            "slug": "Polymorphic-embedding-of-dsls-Hofer-Ostermann",
            "title": {
                "fragments": [],
                "text": "Polymorphic embedding of dsls"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "With polymorphic embedding of DSLs, the static type-safety, modularity, composability and rapid prototyping of pure embedding are reconciled with the flexibility attainable by external toolchains."
            },
            "venue": {
                "fragments": [],
                "text": "GPCE '08"
            },
            "year": 2008
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2056642528"
                        ],
                        "name": "M. Kearns",
                        "slug": "M.-Kearns",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Kearns",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Kearns"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 157,
                                "start": 145
                            }
                        ],
                        "text": "OptiML is designed to handle iterative statistical inference problems, in particular those that can be expressed by the Statistical Query Model (Kearns, 1998) which has been shown to cover a large subset of ML algorithms (Chu et al., 2007)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 171,
                                "start": 157
                            }
                        ],
                        "text": "Domain Model OptiML is designed to handle iterative statistical inference problems, in particular those that can be expressed by the Statistical Query Model (Kearns, 1998) which has been shown to cover a large subset of ML algorithms (Chu et al."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 6392609,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "56d957ec64a7ab2ac63c1856af5db3f9beb0dab6",
            "isKey": false,
            "numCitedBy": 737,
            "numCiting": 59,
            "paperAbstract": {
                "fragments": [],
                "text": "In this paper, we study the problem of learning in the presence of classification noise in the probabilistic learning model of Valiant and its variants. In order to identify the class of \u201crobust\u201d learning algorithms in the most general way, we formalize a new but related model of learning from statistical queries. Intuitively, in this model, a learning algorithm is forbidden to examine individual examples of the unknown target function, but is given access to an oracle providing estimates of probabilities over the sample space of random examples. One of our main results shows that any class of functions learnable from statistical queries is in fact learnable with classification noise in Valiant\u2019s model, with a noise rate approaching the informationtheoretic barrier of 1/2. We then demonstrate the generality of the statistical query model, showing that practically every class learnable in Valiant\u2019s model and its variants can also be learned in the new model (and thus can be learned in the presence of noise). A notable exception to this statement is the class of parity functions, which we prove is not learnable from statistical queries, and for which no noise-tolerant algorithm is known."
            },
            "slug": "Efficient-noise-tolerant-learning-from-statistical-Kearns",
            "title": {
                "fragments": [],
                "text": "Efficient noise-tolerant learning from statistical queries"
            },
            "tldr": {
                "abstractSimilarityScore": 48,
                "text": "This paper formalizes a new but related model of learning from statistical queries, and demonstrates the generality of the statistical query model, showing that practically every class learnable in Valiant\u2019s model and its variants can also be learned in the new model (and thus can be learning in the presence of noise)."
            },
            "venue": {
                "fragments": [],
                "text": "STOC '93"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1680638"
                        ],
                        "name": "Y. Low",
                        "slug": "Y.-Low",
                        "structuredName": {
                            "firstName": "Yucheng",
                            "lastName": "Low",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Y. Low"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2119113835"
                        ],
                        "name": "Joseph Gonzalez",
                        "slug": "Joseph-Gonzalez",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Gonzalez",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Joseph Gonzalez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717990"
                        ],
                        "name": "Aapo Kyrola",
                        "slug": "Aapo-Kyrola",
                        "structuredName": {
                            "firstName": "Aapo",
                            "lastName": "Kyrola",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Aapo Kyrola"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1741745"
                        ],
                        "name": "D. Bickson",
                        "slug": "D.-Bickson",
                        "structuredName": {
                            "firstName": "Danny",
                            "lastName": "Bickson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Bickson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1730156"
                        ],
                        "name": "Carlos Guestrin",
                        "slug": "Carlos-Guestrin",
                        "structuredName": {
                            "firstName": "Carlos",
                            "lastName": "Guestrin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Carlos Guestrin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1695576"
                        ],
                        "name": "J. Hellerstein",
                        "slug": "J.-Hellerstein",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Hellerstein",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hellerstein"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 238,
                                "start": 222
                            }
                        ],
                        "text": "This section presents performance results for a set of machine learning applications written in OptiML and compares them to reference implementations written using existing alternative systems, including MATLAB, GraphLab (Low et al., 2010), and C++."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 59701021,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "475eb84d8e056aeec4b994e94df2be50fa38dfbc",
            "isKey": false,
            "numCitedBy": 465,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "GraphLab:-A-New-Parallel-Framework-for-Machine-Low-Gonzalez",
            "title": {
                "fragments": [],
                "text": "GraphLab: A New Parallel Framework for Machine Learning"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144989400"
                        ],
                        "name": "P. Hudak",
                        "slug": "P.-Hudak",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Hudak",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Hudak"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 84,
                                "start": 73
                            }
                        ],
                        "text": "The fact that OptiML is embedded in Scala and executed on heterogeneous systems is ideally completely transparent to the end user."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 84,
                                "start": 73
                            }
                        ],
                        "text": "OptiML is a domain-specific language embedded in Scala (Odersky, 2011), (Hudak, 1996), (Hofer et al., 2008)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 41120164,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f90749f1b6130cdfe0d2c1948dcf630cfeb48929",
            "isKey": false,
            "numCitedBy": 535,
            "numCiting": 5,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Building-domain-specific-embedded-languages-Hudak",
            "title": {
                "fragments": [],
                "text": "Building domain-specific embedded languages"
            },
            "venue": {
                "fragments": [],
                "text": "CSUR"
            },
            "year": 1996
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Poly - morphic embedding of DSLs"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2007
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The Industry-Changing Impact of Accelerated Computing"
            },
            "venue": {
                "fragments": [],
                "text": "The Industry-Changing Impact of Accelerated Computing"
            },
            "year": 2008
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 106,
                                "start": 88
                            }
                        ],
                        "text": "The fact that OptiML is embedded in Scala and executed on heterogeneous systems is ideally completely transparent to the end user."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 106,
                                "start": 88
                            }
                        ],
                        "text": "OptiML is a domain-specific language embedded in Scala (Odersky, 2011), (Hudak, 1996), (Hofer et al., 2008)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Polymorphic embedding of DSLs. GPCE"
            },
            "venue": {
                "fragments": [],
                "text": "Polymorphic embedding of DSLs. GPCE"
            },
            "year": 2008
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 12,
            "methodology": 7
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 17,
        "totalPages": 2
    },
    "page_url": "https://www.semanticscholar.org/paper/OptiML:-An-Implicitly-Parallel-Domain-Specific-for-Sujeeth-Lee/63dc0896fd3fd7a6c40beff5beca638e778db4fc?sort=total-citations"
}