{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "69446386"
                        ],
                        "name": "P. Swarztrauber",
                        "slug": "P.-Swarztrauber",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Swarztrauber",
                            "middleNames": [
                                "N."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Swarztrauber"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 206034835,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "55ffdcab5daf1b87b870c62bfe70929694f7e189",
            "isKey": false,
            "numCitedBy": 153,
            "numCiting": 18,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "FFT-algorithms-for-vector-computers-Swarztrauber",
            "title": {
                "fragments": [],
                "text": "FFT algorithms for vector computers"
            },
            "venue": {
                "fragments": [],
                "text": "Parallel Comput."
            },
            "year": 1984
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2082481941"
                        ],
                        "name": "D. Bailey",
                        "slug": "D.-Bailey",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Bailey",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Bailey"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 14271505,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dab0f4b43f745970477dbed854d20cfac777e4e2",
            "isKey": false,
            "numCitedBy": 72,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": "Many traditional algorithms for computing the fast Fourier transform (FFT) on conventional computers are unacceptable for advanced vector and parallel computers because they involve nonunit, power-of-two memory strides. This paper presents a practical technique for computing the FFT that avoids all such strides and ap pears to be near-optimal for a variety of current vector and parallel computers. Performance results of a pro gram based on this technique are presented. Notable among these results is that a Fortran implementation of this algorithm on the CRAY-2 runs up to 77% faster than Cray's assembly-coded library routine."
            },
            "slug": "A-High-Performance-FFT-Algorithm-for-Vector-Bailey",
            "title": {
                "fragments": [],
                "text": "A High-Performance FFT Algorithm for Vector Supercomputers"
            },
            "tldr": {
                "abstractSimilarityScore": 56,
                "text": "A practical technique for computing the FFT that avoids all nonunit, power-of-two memory strides and ap pears to be near-optimal for a variety of current vector and parallel computers is presented."
            },
            "venue": {
                "fragments": [],
                "text": "PPSC"
            },
            "year": 1987
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "69446386"
                        ],
                        "name": "P. Swarztrauber",
                        "slug": "P.-Swarztrauber",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Swarztrauber",
                            "middleNames": [
                                "N."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Swarztrauber"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "They include the Sun Performance Library version 1.2 (SUNPERF); public-domain code by T. Ooura (Fortran, 1996), J. Green (C, 1996), and R. H. Krukar (C, 1990); the Fortran FFT-PACK library [ 11 ]; a Fortran split-radix FFT by Sorensen [12]; a Fortran FFT by Singleton [13]; Temperton\u2019s Fortran GPFA code [14]; Bailey\u2019s \u201c4-step\u201d FFT implementation [15]; Sitton\u2019s QFT code [16]; and the four1 routine from [17] (NRF)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 60655972,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "493629cfb4cd87f1c6f54f1ca4f5ca98ad3a13b5",
            "isKey": true,
            "numCitedBy": 150,
            "numCiting": 13,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Vectorizing-the-FFTs-Swarztrauber",
            "title": {
                "fragments": [],
                "text": "Vectorizing the FFTs"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1982
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40078212"
                        ],
                        "name": "H. Sorensen",
                        "slug": "H.-Sorensen",
                        "structuredName": {
                            "firstName": "Henrik",
                            "lastName": "Sorensen",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Sorensen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35452164"
                        ],
                        "name": "M. Heideman",
                        "slug": "M.-Heideman",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Heideman",
                            "middleNames": [
                                "T."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Heideman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143833900"
                        ],
                        "name": "C. Burrus",
                        "slug": "C.-Burrus",
                        "structuredName": {
                            "firstName": "C.",
                            "lastName": "Burrus",
                            "middleNames": [
                                "Sidney"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Burrus"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 231,
                                "start": 223
                            }
                        ],
                        "text": "They include the Sun Performance Library version 1.2 (SUNPERF); public-domain code by T. Ooura (Fortran, 1996), J. Green (C, 1996), and R. H. Krukar (C, 1990); the Fortran FFTPACK library [11]; a Fortran split-radix FFT by Sorensen [12]; a Fortran FFT by Singleton [13]; Temperton\u2019s Fortran GPFA code [14]; Bailey\u2019s \u201c4-step\u201d FFT implementation [15]; Sitton\u2019s QFT code [16]; and thefour1 routine from [17] (NRF)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 410,
                                "start": 402
                            }
                        ],
                        "text": "B\nB\nB\nB\nB\nB\nB\nB B B B\nB\nB\nB B\nB B B\nJ\nJ\nJ\nJ\nJ\nJ\nJ\nJ\nJ\nJ J\nJ\nJ\nJ J J J J\nH\nH\nH\nH\nH\nH H\nH H H\nH H\nH H H\nH H H\nF F F\nF F\nF\nF F\nF F\nF F F\nF F F M M M M M\nM M\nM M M\nM M\nM M M M M M\n1 1 1 1\n1\n1\n1\n1 1 1 1\n1\n1 1 1 1 1 1\n2 4 8 16 32 64 12 8 25 6 51 2 10 24 20 48 40 96 81 92\n16 38\n4\n32 76\n8\n65 53\n6\n13 10\n72\n26 21\n44\n0\n50\n100\n150\n200\n250\nSp ee\nd in\n\u201c M\nFL O\nPS \u201d\nArray Size\nB FFTW\nJ SUNPERF\nH Ooura\nF Green\nFFTPACK\nSorensen\nKrukar\nSingleton\nM Temperton\n1 Bailey\nQFT\nNRF\nFigure 4 : Comparison of double precision 1D complex FFTs on a Sun HPC 5000 (167MHz UltraSPARC-I)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 19,
                                "start": 11
                            }
                        ],
                        "text": "[12] H. V. Sorensen, M. T. Heideman, and C. S. Burrus, \u201cOn computing the split-radix FFT,\u201dIEEE Transactions on Acoustics, Speech and Signal Processing, vol. 34, pp. 152\u2013156, Feb. 1986."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 94,
                                "start": 90
                            }
                        ],
                        "text": "Krukar (C, 1990); the Fortran FFTPACK library [11]; a Fortran split-radix FFT by Sorensen [12]; a Fortran FFT by Singleton [13]; Temperton\u2019s Fortran GPFA code [14]; Bailey\u2019s \u201c4-step\u201d FFT implementation [15]; Sitton\u2019s QFT code [16]; and thefour1 routine from [17] (NRF)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 43205773,
            "fieldsOfStudy": [
                "Engineering"
            ],
            "id": "78f88a81ecc0191531413f6484cc5db07eb842fe",
            "isKey": true,
            "numCitedBy": 228,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper presents an efficient Fortran program that computes the Duhamel-Hollmann split-radix FFT. An indexing scheme is used that gives a three-loop structure for the split-radix FFT that is very similar to the conventional Cooley-Tukey FFT. Both a decimation-in-frequency and a decimation-in-time program are presented. An arithmetic analysis is made to compare the operation count of the Cooley-Tukey FFT fo several different radixes to that of the split-radix FFT. The split-radix FFT seems to require the least total arithmetic of any power-of-two DFT algorithm."
            },
            "slug": "On-computing-the-split-radix-FFT-Sorensen-Heideman",
            "title": {
                "fragments": [],
                "text": "On computing the split-radix FFT"
            },
            "tldr": {
                "abstractSimilarityScore": 72,
                "text": "This paper presents an efficient Fortran program that computes the Duhamel-Hollmann split-radix FFT, which seems to require the least total arithmetic of any power-of-two DFT algorithm."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans. Acoust. Speech Signal Process."
            },
            "year": 1986
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9230131"
                        ],
                        "name": "I. Selesnick",
                        "slug": "I.-Selesnick",
                        "structuredName": {
                            "firstName": "Ivan",
                            "lastName": "Selesnick",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Selesnick"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143833900"
                        ],
                        "name": "C. Burrus",
                        "slug": "C.-Burrus",
                        "structuredName": {
                            "firstName": "C.",
                            "lastName": "Burrus",
                            "middleNames": [
                                "Sidney"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Burrus"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 71,
                                "start": 67
                            }
                        ],
                        "text": "Other automatic systems for the generation of FFT programs include [20], which describes the generation of FFT programs for prime sizes."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 17193670,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6aea9d7a9a6490aeac7b7334ef7716bd29309f89",
            "isKey": false,
            "numCitedBy": 41,
            "numCiting": 59,
            "paperAbstract": {
                "fragments": [],
                "text": "Describes a set of programs for circular convolution and prime length fast Fourier transforms (FFTs) that are relatively short, possess great structure, share many computational procedures, and cover a large variety of lengths. The programs make clear the structure of the algorithms and clearly enumerate independent computational branches that can be performed in parallel. Moreover, each of these independent operations is made up of a sequence of suboperations that can be implemented as vector/parallel operations. This is in contrast with previously existing programs for prime length FFTs: They consist of straight line code, no code is shared between them, and they cannot be easily adapted for vector/parallel implementations. The authors have also developed a program that automatically generates these programs for prime length FTTs. This code-generating program requires information only about a set of modules for computing cyclotomic convolutions."
            },
            "slug": "Automatic-generation-of-prime-length-FFT-programs-Selesnick-Burrus",
            "title": {
                "fragments": [],
                "text": "Automatic generation of prime length FFT programs"
            },
            "tldr": {
                "abstractSimilarityScore": 94,
                "text": "A set of programs for circular convolution and prime length fast Fourier transforms (FFTs) that are relatively short, possess great structure, share many computational procedures, and cover a large variety of lengths are described."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans. Signal Process."
            },
            "year": 1996
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1938115"
                        ],
                        "name": "C. Temperton",
                        "slug": "C.-Temperton",
                        "structuredName": {
                            "firstName": "Clive",
                            "lastName": "Temperton",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Temperton"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 14764894,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "18e967f8f17ef30e6ab8f77b0f6fe56b0af4abd4",
            "isKey": false,
            "numCitedBy": 50,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": "Prime factor fast Fourier transform (FFT) algorithms have two important advantages: they can be simultaneously self-sorting and in-place, and they have a lower operation count than conventional FFT algorithms. The major disadvantage of the prime factor FFT has been that it was only applicable to a limited set of values of the transform length N. This paper presents a generalized prime factor FFT, which is applicable for any $N = 2^p 3^q 5^r $, while maintaining both the self-sorting in-place capability and the lower operation count. Timing experiments on the Cray Y-MP demonstrate the advantages of the new algorithm."
            },
            "slug": "A-Generalized-Prime-Factor-FFT-Algorithm-for-any-N-Temperton",
            "title": {
                "fragments": [],
                "text": "A Generalized Prime Factor FFT Algorithm for any N = 2p 3q 5r"
            },
            "tldr": {
                "abstractSimilarityScore": 51,
                "text": "This paper presents a generalized prime factor FFT, which is applicable for any N = 2^p 3^q 5^r $, while maintaining both the self-sorting in-place capability and the lower operation count."
            },
            "venue": {
                "fragments": [],
                "text": "SIAM J. Sci. Comput."
            },
            "year": 1992
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47331615"
                        ],
                        "name": "Haitao Guo",
                        "slug": "Haitao-Guo",
                        "structuredName": {
                            "firstName": "Haitao",
                            "lastName": "Guo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Haitao Guo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3129004"
                        ],
                        "name": "G. Sitton",
                        "slug": "G.-Sitton",
                        "structuredName": {
                            "firstName": "Gary",
                            "lastName": "Sitton",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Sitton"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143833900"
                        ],
                        "name": "C. Burrus",
                        "slug": "C.-Burrus",
                        "structuredName": {
                            "firstName": "C.",
                            "lastName": "Burrus",
                            "middleNames": [
                                "Sidney"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Burrus"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 230,
                                "start": 226
                            }
                        ],
                        "text": "Krukar (C, 1990); the Fortran FFTPACK library [11]; a Fortran split-radix FFT by Sorensen [12]; a Fortran FFT by Singleton [13]; Temperton\u2019s Fortran GPFA code [14]; Bailey\u2019s \u201c4-step\u201d FFT implementation [15]; Sitton\u2019s QFT code [16]; and thefour1 routine from [17] (NRF)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 42639206,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "54466a6a3f9be8c85ee85e5f6eea01aa80603b40",
            "isKey": false,
            "numCitedBy": 28,
            "numCiting": 16,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper will look at an approach that uses symmetric properties of the basis function to remove redundancies in the calculation of discrete Fourier transform (DFT). We will develop an algorithm, called the quick Fourier transform (QFT), that will reduce the number of floating point operations necessary to compute the DFT by a factor of two or four over direct methods or Goertzel's method for prime lengths. Further by applying the idea to the calculation of a DFT of length-2/sup M/, we construct a new O(N log N) algorithm. The algorithm can be easily modified to compute the DFT with only a subset of input points, and it will significantly reduce the number of operations when the data are real. The simple structure of the algorithm and the fact that it is well suited for DFTs on real data should lead to efficient implementations and to a wide range of applications.<<ETX>>"
            },
            "slug": "The-quick-discrete-Fourier-transform-Guo-Sitton",
            "title": {
                "fragments": [],
                "text": "The quick discrete Fourier transform"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "An algorithm is developed, called the quick Fourier transform (QFT), that will reduce the number of floating point operations necessary to compute the DFT by a factor of two or four over direct methods or Goertzel's method for prime lengths."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of ICASSP '94. IEEE International Conference on Acoustics, Speech and Signal Processing"
            },
            "year": 1994
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32187152"
                        ],
                        "name": "S. Gupta",
                        "slug": "S.-Gupta",
                        "structuredName": {
                            "firstName": "S.",
                            "lastName": "Gupta",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Gupta"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1684827"
                        ],
                        "name": "Chua-Huang Huang",
                        "slug": "Chua-Huang-Huang",
                        "structuredName": {
                            "firstName": "Chua-Huang",
                            "lastName": "Huang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chua-Huang Huang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145293384"
                        ],
                        "name": "P. Sadayappan",
                        "slug": "P.-Sadayappan",
                        "structuredName": {
                            "firstName": "P.",
                            "lastName": "Sadayappan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Sadayappan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111257669"
                        ],
                        "name": "Rodney W. Johnson",
                        "slug": "Rodney-W.-Johnson",
                        "structuredName": {
                            "firstName": "Rodney",
                            "lastName": "Johnson",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Rodney W. Johnson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 62,
                                "start": 58
                            }
                        ],
                        "text": "Similar ideas have been incorporated by other researchers [18] into an interesting system called EXTENT which uses a tensor product framework to synthesize Fortran FFTs for multiprocessors."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 9247659,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "405a6b0d59b56c1a9a5b562b59e32faac2224718",
            "isKey": false,
            "numCitedBy": 23,
            "numCiting": 39,
            "paperAbstract": {
                "fragments": [],
                "text": "A framework for synthesizing communication-efficient distributed-memory parallel programs for block recursive algorithms such as the fast Fourier transform (FFT) and Strassen's matrix multiplication is presented. This framework is based on an algebraic representation of the algorithms, which involves the tensor (Kronecker) product and other matrix operations. This representation is useful in analyzing the communication implications of computation partitioning and data distributions. The programs are synthesized under two different target program models. These two models are based on different ways of managing the distribution of data for optimizing communication. The first model uses point-to-point interprocessor communication primitives, whereas the second model uses data redistribution primitives involving collective all-to-many communication. These two program models are shown to be suitable for different ranges of problem size. The methodology is illustrated by synthesizing communication-efficient programs for the FFT. This framework has been incorporated into the EXTENT system for automatic generation of parallel/vector programs for block recursive algorithms."
            },
            "slug": "A-Framework-for-Generating-Distributed-Memory-for-Gupta-Huang",
            "title": {
                "fragments": [],
                "text": "A Framework for Generating Distributed-Memory Parallel Programs for Block Recursive Algorithms"
            },
            "tldr": {
                "abstractSimilarityScore": 94,
                "text": "A framework for synthesizing communication-efficient distributed-memory parallel programs for block recursive algorithms such as the fast Fourier transform and Strassen's matrix multiplication is presented, based on an algebraic representation of the algorithms, which involves the tensor (Kronecker) product and other matrix operations."
            },
            "venue": {
                "fragments": [],
                "text": "J. Parallel Distributed Comput."
            },
            "year": 1996
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9638769"
                        ],
                        "name": "R. Singleton",
                        "slug": "R.-Singleton",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Singleton",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Singleton"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 264,
                                "start": 255
                            }
                        ],
                        "text": "They include the Sun Performance Library version 1.2 (SUNPERF); public-domain code by T. Ooura (Fortran, 1996), J. Green (C, 1996), and R. H. Krukar (C, 1990); the Fortran FFTPACK library [11]; a Fortran split-radix FFT by Sorensen [12]; a Fortran FFT by Singleton [13]; Temperton\u2019s Fortran GPFA code [14]; Bailey\u2019s \u201c4-step\u201d FFT implementation [15]; Sitton\u2019s QFT code [16]; and thefour1 routine from [17] (NRF)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 427,
                                "start": 418
                            }
                        ],
                        "text": "B\nB\nB\nB\nB\nB\nB\nB B B B\nB\nB\nB B\nB B B\nJ\nJ\nJ\nJ\nJ\nJ\nJ\nJ\nJ\nJ J\nJ\nJ\nJ J J J J\nH\nH\nH\nH\nH\nH H\nH H H\nH H\nH H H\nH H H\nF F F\nF F\nF\nF F\nF F\nF F F\nF F F M M M M M\nM M\nM M M\nM M\nM M M M M M\n1 1 1 1\n1\n1\n1\n1 1 1 1\n1\n1 1 1 1 1 1\n2 4 8 16 32 64 12 8 25 6 51 2 10 24 20 48 40 96 81 92\n16 38\n4\n32 76\n8\n65 53\n6\n13 10\n72\n26 21\n44\n0\n50\n100\n150\n200\n250\nSp ee\nd in\n\u201c M\nFL O\nPS \u201d\nArray Size\nB FFTW\nJ SUNPERF\nH Ooura\nF Green\nFFTPACK\nSorensen\nKrukar\nSingleton\nM Temperton\n1 Bailey\nQFT\nNRF\nFigure 4 : Comparison of double precision 1D complex FFTs on a Sun HPC 5000 (167MHz UltraSPARC-I)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 20,
                                "start": 11
                            }
                        ],
                        "text": "[13] R. C. Singleton, \u201cAn algorithm for computing the mixed radix fast Fourier transform,\u201dIEEE Transactions on Audio and Electroacoustics, vol. AU-17, pp. 93\u2013103, June 1969."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 127,
                                "start": 123
                            }
                        ],
                        "text": "Krukar (C, 1990); the Fortran FFTPACK library [11]; a Fortran split-radix FFT by Sorensen [12]; a Fortran FFT by Singleton [13]; Temperton\u2019s Fortran GPFA code [14]; Bailey\u2019s \u201c4-step\u201d FFT implementation [15]; Sitton\u2019s QFT code [16]; and thefour1 routine from [17] (NRF)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 122847717,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a603fa2bbee1912a58676ce243b4f3e615fa76d7",
            "isKey": true,
            "numCitedBy": 533,
            "numCiting": 7,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper presents an algorithm for computing the fast Fourier transform, based on a method proposed by Cooley and Tukey. As in their algorithm, the dimension n of the transform is factored (if possible), and n/p elementary transforms of dimension p are computed for each factor p of n . An improved method of computing a transform step corresponding to an odd factor of n is given; with this method, the number of complex multiplications for an elementary transform of dimension p is reduced from (p-1)^{2} to (p-1)^{2}/4 for odd p . The fast Fourier transform, when computed in place, requires a final permutation step to arrange the results in normal order. This algorithm includes an efficient method for permuting the results in place. The algorithm is described mathematically and illustrated by a FORTRAN subroutine."
            },
            "slug": "An-algorithm-for-computing-the-mixed-radix-fast-Singleton",
            "title": {
                "fragments": [],
                "text": "An algorithm for computing the mixed radix fast Fourier transform"
            },
            "tldr": {
                "abstractSimilarityScore": 78,
                "text": "This paper presents an algorithm for computing the fast Fourier transform, based on a method proposed by Cooley and Tukey, and includes an efficient method for permuting the results in place."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2077001"
                        ],
                        "name": "C. Loan",
                        "slug": "C.-Loan",
                        "structuredName": {
                            "firstName": "Charles",
                            "lastName": "Loan",
                            "middleNames": [
                                "Van"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Loan"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 122717728,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "603c13d83bdcab014f05901f669f1a8216f1db10",
            "isKey": false,
            "numCitedBy": 1274,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "1. The Radix-2 Frameworks. Matrix Notation and Algorithms The FFT Idea The Cooley-Tukey Factorization Weight and Butterfly Computations Bit Reversal and Transposition The Cooley-Tukey Framework The Stockham Autosort Frameworks The Pease Framework Decimation in Frequency and Inverse FFTs 2. General Radix Frameworks. The General Radix Ideas Index Reversal and Transposition Mixed-Radix Factorizations Radix-4 and Radix-8 Frameworks The Split-Radix Frameworks 3. High Performance Frameworks. The Multiple DFT Problem Matrix Transposition The Large Single-Vector FFT Problem Multi-Dimensional FFT Problem Distributed Memory FFTs Shared Memory FFTs 4. Selected Topics. Prime Factor FFTs Convolution FFTs of Real Data Cosine and Sine Transforms Fast Poisson Solvers Bibliography Index."
            },
            "slug": "Computational-Frameworks-for-the-Fast-Fourier-Loan",
            "title": {
                "fragments": [],
                "text": "Computational Frameworks for the Fast Fourier Transform"
            },
            "tldr": {
                "abstractSimilarityScore": 49,
                "text": "The Radix-2 Frameworks, a collection of general and high performance FFTs designed to solve the multi-Dimensional FFT problem of Prime Factor and Convolution, are presented."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1992
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40632203"
                        ],
                        "name": "H. Johnson",
                        "slug": "H.-Johnson",
                        "structuredName": {
                            "firstName": "Howard",
                            "lastName": "Johnson",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Johnson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143833900"
                        ],
                        "name": "C. Burrus",
                        "slug": "C.-Burrus",
                        "structuredName": {
                            "firstName": "C.",
                            "lastName": "Burrus",
                            "middleNames": [
                                "Sidney"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Burrus"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 26458797,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a89a0fec743227384406e3bc57dde4c81a7947ee",
            "isKey": false,
            "numCitedBy": 21,
            "numCiting": 2,
            "paperAbstract": {
                "fragments": [],
                "text": "A broad class of efficient, discrete Fourier transform algorithms is developed by partitioning short DFT algorithms into factors. The factored short DFT's are combined into longer DFT's using a prime factor algorithm (PFA). By exploiting a property which allows some of the factors to commute, a large set of possible DFT algorithms is generated which contains both the prime factor algorithm and the Winograd Fourier Transform Algorithm (WFTA) as special cases. The problem of finding an algorithm from this class which is optimal with respect to the specific add, multiply, and data transfer characteristics of a partlcular implementation is posed, and a highly effective dynamic programming algorithm is presented as a solution."
            },
            "slug": "The-design-of-optimal-DFT-algorithms-using-dynamic-Johnson-Burrus",
            "title": {
                "fragments": [],
                "text": "The design of optimal DFT algorithms using dynamic programming"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "A highly effective dynamic programming algorithm is presented as a solution to the problem of finding an algorithm from this class which is optimal with respect to the specific add, multiply, and data transfer characteristics of a partlcular implementation."
            },
            "venue": {
                "fragments": [],
                "text": "ICASSP"
            },
            "year": 1982
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2372800"
                        ],
                        "name": "J. Cooley",
                        "slug": "J.-Cooley",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Cooley",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Cooley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2016914"
                        ],
                        "name": "J. Tukey",
                        "slug": "J.-Tukey",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Tukey",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Tukey"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "The executor implements the Cooley-Tukey FFT algorithm [ 3 ], which centers around factoring the size of the transform into . The algorithm recursively computes transforms of size , multiplies the results by certain constants traditionally called twiddle factors, and finally computes transforms of size . The executor consists of a C function that implements the algorithm just outlined, and of a library of codelets that implement special ..."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "We developed FFTW, an adaptive, high performance implementation of the Cooley-Tukey fast Fourier transform (FFT) algorithm [ 3 ], written in C. We have compared many C and Fortran implementations of the DFT on several machines, and our experiments show that FFTW typically yields signific antly better performance than all other publicly available DFT software."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 121744946,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0e6beb95b5150ce99b108acdefabf70ccd3fee30",
            "isKey": false,
            "numCitedBy": 11273,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": "An efficient method for the calculation of the interactions of a 2' factorial ex- periment was introduced by Yates and is widely known by his name. The generaliza- tion to 3' was given by Box et al. (1). Good (2) generalized these methods and gave elegant algorithms for which one class of applications is the calculation of Fourier series. In their full generality, Good's methods are applicable to certain problems in which one must multiply an N-vector by an N X N matrix which can be factored into m sparse matrices, where m is proportional to log N. This results inma procedure requiring a number of operations proportional to N log N rather than N2. These methods are applied here to the calculation of complex Fourier series. They are useful in situations where the number of data points is, or can be chosen to be, a highly composite number. The algorithm is here derived and presented in a rather different form. Attention is given to the choice of N. It is also shown how special advantage can be obtained in the use of a binary computer with N = 2' and how the entire calculation can be performed within the array of N data storage locations used for the given Fourier coefficients. Consider the problem of calculating the complex Fourier series N-1 (1) X(j) = EA(k)-Wjk, j = 0 1, * ,N- 1, k=0"
            },
            "slug": "An-algorithm-for-the-machine-calculation-of-complex-Cooley-Tukey",
            "title": {
                "fragments": [],
                "text": "An algorithm for the machine calculation of complex Fourier series"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "Good generalized these methods and gave elegant algorithms for which one class of applications is the calculation of Fourier series, applicable to certain problems in which one must multiply an N-vector by an N X N matrix which can be factored into m sparse matrices."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2065352720"
                        ],
                        "name": "F. P\u00e9rez",
                        "slug": "F.-P\u00e9rez",
                        "structuredName": {
                            "firstName": "Fernando",
                            "lastName": "P\u00e9rez",
                            "middleNames": [
                                "Donado"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. P\u00e9rez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35188476"
                        ],
                        "name": "T. Takaoka",
                        "slug": "T.-Takaoka",
                        "structuredName": {
                            "firstName": "Tadao",
                            "lastName": "Takaoka",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Takaoka"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 206604672,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3bc252e2a159f3463acdeb63d4e2b383fba04946",
            "isKey": false,
            "numCitedBy": 11,
            "numCiting": 7,
            "paperAbstract": {
                "fragments": [],
                "text": "This correspondence presents details of a new implementation of the prime factor FFT algorithm (PFA) for computing the discrete Fourier transform (DFT). This implementation applies a program generation technique to the PFA algorithm and saves about 40 percent of the execution time of the conventional one."
            },
            "slug": "A-prime-factor-FFT-algorithm-implementation-using-a-P\u00e9rez-Takaoka",
            "title": {
                "fragments": [],
                "text": "A prime factor FFT algorithm implementation using a program generation technique"
            },
            "tldr": {
                "abstractSimilarityScore": 81,
                "text": "This correspondence presents details of a new implementation of the prime factor FFT algorithm (PFA) for computing the discrete Fourier transform (DFT) that saves about 40 percent of the execution time of the conventional one."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans. Acoust. Speech Signal Process."
            },
            "year": 1987
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2037518"
                        ],
                        "name": "R. Blumofe",
                        "slug": "R.-Blumofe",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Blumofe",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Blumofe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1947255"
                        ],
                        "name": "C. Joerg",
                        "slug": "C.-Joerg",
                        "structuredName": {
                            "firstName": "Christopher",
                            "lastName": "Joerg",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Joerg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1871661"
                        ],
                        "name": "Bradley C. Kuszmaul",
                        "slug": "Bradley-C.-Kuszmaul",
                        "structuredName": {
                            "firstName": "Bradley",
                            "lastName": "Kuszmaul",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bradley C. Kuszmaul"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145372049"
                        ],
                        "name": "C. Leiserson",
                        "slug": "C.-Leiserson",
                        "structuredName": {
                            "firstName": "Charles",
                            "lastName": "Leiserson",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Leiserson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3234133"
                        ],
                        "name": "K. H. Randall",
                        "slug": "K.-H.-Randall",
                        "structuredName": {
                            "firstName": "Keith",
                            "lastName": "Randall",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. H. Randall"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110320956"
                        ],
                        "name": "Yuli Zhou",
                        "slug": "Yuli-Zhou",
                        "structuredName": {
                            "firstName": "Yuli",
                            "lastName": "Zhou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuli Zhou"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 62541064,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "ebd472612efd872713ba2815ad10eeff453ea235",
            "isKey": false,
            "numCitedBy": 2043,
            "numCiting": 83,
            "paperAbstract": {
                "fragments": [],
                "text": "Cilk (pronounced \u201csilk\u201d) is a C-based runtime system for multi-threaded parallel programming. In this paper, we document the efficiency of the Cilk work-stealing scheduler, both empirically and analytically. We show that on real and synthetic applications, the \u201cwork\u201d and \u201ccritical path\u201d of a Cilk computation can be used to accurately model performance. Consequently, a Cilk programmer can focus on reducing the work and critical path of his computation, insulated from load balancing and other runtime scheduling issues. We also prove that for the class of \u201cfully strict\u201d (well-structured) programs, the Cilk scheduler achieves space, time and communication bounds all within a constant factor of optimal.\nThe Cilk runtime system currently runs on the Connection Machine CM5 MPP, the Intel Paragon MPP, the Silicon Graphics Power Challenge SMP, and the MIT Phish network of workstations. Applications written in Cilk include protein folding, graphic rendering, backtrack search, and the *Socrates chess program, which won third prize in the 1994 ACM International Computer Chess Championship."
            },
            "slug": "Cilk:-an-efficient-multithreaded-runtime-system-Blumofe-Joerg",
            "title": {
                "fragments": [],
                "text": "Cilk: an efficient multithreaded runtime system"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "This paper shows that on real and synthetic applications, the \u201cwork\u201d and \u201ccritical path\u201d of a Cilk computation can be used to accurately model performance, and proves that for the class of \u201cfully strict\u201d (well-structured) programs, the Cilk scheduler achieves space, time and communication bounds all within a constant factor of optimal."
            },
            "venue": {
                "fragments": [],
                "text": "PPOPP '95"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2256718"
                        ],
                        "name": "W. Press",
                        "slug": "W.-Press",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Press",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Press"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35046585"
                        ],
                        "name": "B. Flannery",
                        "slug": "B.-Flannery",
                        "structuredName": {
                            "firstName": "Brian",
                            "lastName": "Flannery",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Flannery"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48590121"
                        ],
                        "name": "S. Teukolsky",
                        "slug": "S.-Teukolsky",
                        "structuredName": {
                            "firstName": "Saul",
                            "lastName": "Teukolsky",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Teukolsky"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2608024"
                        ],
                        "name": "W. Vetterling",
                        "slug": "W.-Vetterling",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Vetterling",
                            "middleNames": [
                                "T."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Vetterling"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "They include the Sun Performance Library version 1.2 (SUNPERF); public-domain code by T. Ooura (Fortran, 1996), J. Green (C, 1996), and R. H. Krukar (C, 1990); the Fortran FFT-PACK library [11]; a Fortran split-radix FFT by Sorensen [12]; a Fortran FFT by Singleton [13]; Temperton\u2019s Fortran GPFA code [14]; Bailey\u2019s \u201c4-step\u201d FFT implementation [15]; Sitton\u2019s QFT code [16]; and the four1 routine from [ 17 ] (NRF)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 195707510,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "11b9a11e73ce3f648960e900c3f27bd98dda5ea2",
            "isKey": true,
            "numCitedBy": 10805,
            "numCiting": 2,
            "paperAbstract": {
                "fragments": [],
                "text": "From the Publisher: \nThis is the revised and greatly expanded Second Edition of the hugely popular Numerical Recipes: The Art of Scientific Computing. The product of a unique collaboration among four leading scientists in academic research and industry, Numerical Recipes is a complete text and reference book on scientific computing. In a self-contained manner it proceeds from mathematical and theoretical considerations to actual practical computer routines. With over 100 new routines (now well over 300 in all), plus upgraded versions of many of the original routines, this book is more than ever the most practical, comprehensive handbook of scientific computing available today. The book retains the informal, easy-to-read style that made the first edition so popular, with many new topics presented at the same accessible level. In addition, some sections of more advanced material have been introduced, set off in small type from the main body of the text. Numerical Recipes is an ideal textbook for scientists and engineers and an indispensable reference for anyone who works in scientific computing. Highlights of the new material include a new chapter on integral equations and inverse methods; multigrid methods for solving partial differential equations; improved random number routines; wavelet transforms; the statistical bootstrap method; a new chapter on \"less-numerical\" algorithms including compression coding and arbitrary precision arithmetic; band diagonal linear systems; linear algebra on sparse matrices; Cholesky and QR decomposition; calculation of numerical derivatives; Pade approximants, and rational Chebyshev approximation; new special functions; Monte Carlo integration in high-dimensional spaces; globally convergent methods for sets of nonlinear equations; an expanded chapter on fast Fourier methods; spectral analysis on unevenly sampled data; Savitzky-Golay smoothing filters; and two-dimensional Kolmogorov-Smirnoff tests. All this is in addition to material on such basic top"
            },
            "slug": "Numerical-Recipes-in-C:-The-Art-of-Sci-entific-Press-Flannery",
            "title": {
                "fragments": [],
                "text": "Numerical Recipes in C: The Art of Sci-entific Computing"
            },
            "tldr": {
                "abstractSimilarityScore": 64,
                "text": "This is the revised and greatly expanded Second Edition of the hugely popular Numerical Recipes, with over 100 new routines (now well over 300 in all), plus upgraded versions of many of the original routines."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1986
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2256718"
                        ],
                        "name": "W. Press",
                        "slug": "W.-Press",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Press",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Press"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48590121"
                        ],
                        "name": "S. Teukolsky",
                        "slug": "S.-Teukolsky",
                        "structuredName": {
                            "firstName": "Saul",
                            "lastName": "Teukolsky",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Teukolsky"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2608024"
                        ],
                        "name": "W. Vetterling",
                        "slug": "W.-Vetterling",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Vetterling",
                            "middleNames": [
                                "T."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Vetterling"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35046585"
                        ],
                        "name": "B. Flannery",
                        "slug": "B.-Flannery",
                        "structuredName": {
                            "firstName": "Brian",
                            "lastName": "Flannery",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Flannery"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "Krukar (C, 1990); the Fortran FFTPACK library [11]; a Fortran split-radix FFT by Sorensen [12]; a Fortran FFT by Singleton [13]; Temperton\u2019s Fortran GPFA code [14]; Bailey\u2019s \u201c4-step\u201d FFT implementation [15]; Sitton\u2019s QFT code [16]; and the four1 routine from [17] (NRF)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 124311898,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a293da7c146c41af648cfa65cddd2b434ff3e80b",
            "isKey": false,
            "numCitedBy": 2245,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Numerical-Recipes-in-Fortran:-The-Art-of-Scientific-Press-Teukolsky",
            "title": {
                "fragments": [],
                "text": "Numerical Recipes in Fortran: The Art of Scientific Computing.@@@Numerical Recipes in C: The Art of Scientific Computing."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1994
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2037518"
                        ],
                        "name": "R. Blumofe",
                        "slug": "R.-Blumofe",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Blumofe",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Blumofe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48230516"
                        ],
                        "name": "Matteo Frigo",
                        "slug": "Matteo-Frigo",
                        "structuredName": {
                            "firstName": "Matteo",
                            "lastName": "Frigo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matteo Frigo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1947255"
                        ],
                        "name": "C. Joerg",
                        "slug": "C.-Joerg",
                        "structuredName": {
                            "firstName": "Christopher",
                            "lastName": "Joerg",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Joerg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145372049"
                        ],
                        "name": "C. Leiserson",
                        "slug": "C.-Leiserson",
                        "structuredName": {
                            "firstName": "Charles",
                            "lastName": "Leiserson",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Leiserson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3234133"
                        ],
                        "name": "K. H. Randall",
                        "slug": "K.-H.-Randall",
                        "structuredName": {
                            "firstName": "Keith",
                            "lastName": "Randall",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. H. Randall"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 135,
                                "start": 132
                            }
                        ],
                        "text": "We chose an explicitly recursive implementation because of theoretical evidence that divide-and-conquer algorithms improve locality [8]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 5480091,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "fb9273a3112a22d76ad3f432370311f39c5f4b49",
            "isKey": false,
            "numCitedBy": 133,
            "numCiting": 50,
            "paperAbstract": {
                "fragments": [],
                "text": "In this paper, we analyze the performance of parallel multithreaded algorithms that use dag-consistent distributed shared memory. Specifically, we analyze execution time, page faults, and space requirements for multithreaded algorithms executed by a workstealing thread scheduler and the BACKER algorithm for maintaining dag consistency. We prove that if the accesses to the backing store are random and independent (the BACKER algorithm actually uses hashing), the expected execution time TP(C) of a \u201cfully strict\u201d multithreaded computation on P processors, each with a LRU cache of C pages, is O(T1(C)=P+mCT\u221e), where T1(C) is the total work of the computation including page faults, T\u221e is its critical-path length excluding page faults, and m is the minimum page transfer time. As a corollary to this theorem, we show that the expected number FP(C) of page faults incurred by a computation executed on P processors can be related to the number F1(C) of serial page faults by the formula FP(C) F1(C)+O(CPT\u221e). Finally, we give simple bounds on the number of page faults and the space requirements for \u201cregular\u201d divide-and-conquer algorithms. We use these bounds to analyze parallel multithreaded algorithms for matrix multiplication and LU-decomposition."
            },
            "slug": "An-analysis-of-dag-consistent-distributed-Blumofe-Frigo",
            "title": {
                "fragments": [],
                "text": "An analysis of dag-consistent distributed shared-memory algorithms"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "It is proved that if the accesses to the backing store are random and independent (the BACKER algorithm actually uses hashing), the expected execution time TP(C) of a \u201cfully strict\u201d multithreaded computation on P processors, each with a LRU cache of C pages, is O(T1(C)=P+mCT\u221e)."
            },
            "venue": {
                "fragments": [],
                "text": "SPAA '96"
            },
            "year": 1996
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34621653"
                        ],
                        "name": "C. Rader",
                        "slug": "C.-Rader",
                        "structuredName": {
                            "firstName": "Charles",
                            "lastName": "Rader",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Rader"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 292,
                                "start": 289
                            }
                        ],
                        "text": "The current version of the AST generator contains knowledge of many DFT algorithms, including Cooley-Tukey (in the form presented in [1, page 611]), a prime factor algorithm (as described in [1, page 619]), a split-radix algorithm [2], and Rader\u2019s algorithm for transforms of prime length [9]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 119872290,
            "fieldsOfStudy": [
                "Mathematics",
                "Computer Science"
            ],
            "id": "93c670c45373a746a44c8ff74939a31417ca9750",
            "isKey": false,
            "numCitedBy": 522,
            "numCiting": 1,
            "paperAbstract": {
                "fragments": [],
                "text": "The discrete Fourier transform of a sequence of N points, where N is a prime number, is shown to be essentially a circular correlation. This can be recognized by rearranging the members of the sequence and the transform according to a rule involving a primitive root of N. This observation permits the discrete Fourier transform to be computed by means of a fast Fourier transform algorithm, with the associated increase in speed, even though N is prime."
            },
            "slug": "Discrete-Fourier-transforms-when-the-number-of-data-Rader",
            "title": {
                "fragments": [],
                "text": "Discrete Fourier transforms when the number of data samples is prime"
            },
            "tldr": {
                "abstractSimilarityScore": 67,
                "text": "The discrete Fourier transform of a sequence of N points, where N is a prime number, is shown to be essentially a circular correlation, which permits the discrete Fouriers transform to be computed by means of a fast Fouriertransform algorithm, with the associated increase in speed, even though N is prime."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1777329"
                        ],
                        "name": "Samuel N. Kamin",
                        "slug": "Samuel-N.-Kamin",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Kamin",
                            "middleNames": [
                                "N."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Samuel N. Kamin"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 122,
                                "start": 118
                            }
                        ],
                        "text": "The idea of using ML as a metalanguage for generating C applications first appeared, to the best of our knowledge, in [19]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 2531851,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8edc48672097d4adbb0a86479aa24cd616d4f003",
            "isKey": false,
            "numCitedBy": 17,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "Abst ract Meta-programming languages, or program generators, are languages whose programs produce programs in other languages. We show how Standard ML makes an excellent meta-programming language, by adding appropriate program-valued | by which we mean string-valued | operations for each domain. We do so by giving four examples of meta-programming languages: a top-down parser generator; a \\geometric region server\" language modelled on one developed at Yale; a version of the \\Message Speciication Language,\" developed at Oregon Graduate Institute; and a pretty-printing speciication language. Embedding meta-programming languages in ML in this way is easy to do, and the result is a language that, unlike most meta-programming languages, is higher-order."
            },
            "slug": "Standard-ML-as-a-Meta-Programming-Language-Kamin",
            "title": {
                "fragments": [],
                "text": "Standard ML as a Meta-Programming Language"
            },
            "tldr": {
                "abstractSimilarityScore": 49,
                "text": "It is shown how Standard ML makes an excellent meta-programming language, by adding appropriate program-valued | operations for each domain, by giving four examples of meta- programs: a top-down parser generator; atop-down parsing language; ageometric region server; and a pretty-printing speciication language."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1996
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1694313"
                        ],
                        "name": "P. Duhamel",
                        "slug": "P.-Duhamel",
                        "structuredName": {
                            "firstName": "Pierre",
                            "lastName": "Duhamel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Duhamel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145876744"
                        ],
                        "name": "M. Vetterli",
                        "slug": "M.-Vetterli",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Vetterli",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Vetterli"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 62081471,
            "fieldsOfStudy": [
                "Biology"
            ],
            "id": "a14eced30f66e3794770084d38925fabcfcd49d9",
            "isKey": false,
            "numCitedBy": 915,
            "numCiting": 102,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Fast-Fourier-transforms:-a-tutorial-review-and-a-of-Duhamel-Vetterli",
            "title": {
                "fragments": [],
                "text": "Fast Fourier transforms: a tutorial review and a state of the art"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1990
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40963376"
                        ],
                        "name": "W. Ames",
                        "slug": "W.-Ames",
                        "structuredName": {
                            "firstName": "W.",
                            "lastName": "Ames",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Ames"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1801244"
                        ],
                        "name": "C. Brezinski",
                        "slug": "C.-Brezinski",
                        "structuredName": {
                            "firstName": "Claude",
                            "lastName": "Brezinski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Brezinski"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 262,
                                "start": 258
                            }
                        ],
                        "text": "Krukar (C, 1990); the Fortran FFTPACK library [11]; a Fortran split-radix FFT by Sorensen [12]; a Fortran FFT by Singleton [13]; Temperton\u2019s Fortran GPFA code [14]; Bailey\u2019s \u201c4-step\u201d FFT implementation [15]; Sitton\u2019s QFT code [16]; and thefour1 routine from [17] (NRF)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 67036357,
            "fieldsOfStudy": [
                "Computer Science",
                "Mathematics"
            ],
            "id": "9d51d5af77e45e3a57a5b6ffb245dc7f6efc9120",
            "isKey": false,
            "numCitedBy": 1156,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Numerical-recipes-in-Fortran-(The-art-of-scientific-Ames-Brezinski",
            "title": {
                "fragments": [],
                "text": "Numerical recipes in Fortran (The art of scientific computing) : W.H. Press, S.A. Teukolsky, W.T. Vetterling and B.P. Flannery, Cambridge Univ. Press, Cambridge, 2nd ed., 1992. 963 pp., US$49.95, ISBN 0-521-43064-X.\u2606"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1993
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 93,
                                "start": 90
                            }
                        ],
                        "text": "FFTW\u2019scodelet generator , written in the Caml Light dialect of the functional language ML [5], is a sophisticated program that first produces a representation of the codelet in the form of abstract C syntax tree, and then \u201coptimizes\u201d the codelet by applying well known transformations such as constant folding and algebraic identities."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 60,
                                "start": 57
                            }
                        ],
                        "text": "The generator is written in the Caml Light dialect of ML [5]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The Caml Light system release"
            },
            "venue": {
                "fragments": [],
                "text": "Institut National de Recherche en Informatique at Automatique (IN- RIA),"
            },
            "year": 1996
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "On computing the splitradix FFT"
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Acoustics , Speech and Signal Processing"
            },
            "year": 1986
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The Cam1 Light system release 0.71"
            },
            "venue": {
                "fragments": [],
                "text": "Institut National de Recherche en Informatique at Automatique (INRIA),"
            },
            "year": 1996
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Loan,Computational Frameworks for the Fast Fourier Transform"
            },
            "venue": {
                "fragments": [],
                "text": "Philadelphia: SIAM,"
            },
            "year": 1992
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The Caml Light system release 0"
            },
            "venue": {
                "fragments": [],
                "text": "Institut National de Recherche en Informatique at Automatique (IN- RIA)"
            },
            "year": 1996
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Bums, \u2018The quick discrete fourier transform,"
            },
            "venue": {
                "fragments": [],
                "text": "in Proc. IEEE Int. Con. Acoust.,"
            },
            "year": 1994
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Vectorizing the FFTs Parallel Computations"
            },
            "venue": {
                "fragments": [],
                "text": "Vectorizing the FFTs Parallel Computations"
            },
            "year": 1982
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Standard ML as a meta - progrdng language"
            },
            "venue": {
                "fragments": [],
                "text": "Journal of Parallel and Distributed Computing"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 93,
                                "start": 90
                            }
                        ],
                        "text": "FFTW\u2019s codelet generator, written in the Caml Light dialect of the functional language ML [5], is a sophisticated program that first produces a representation of the codelet in the form of abstract C syntax tree, and then \u201coptimizes\u201d the codelet by applying well known transformations such as constant folding and algebraic identities."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 60,
                                "start": 57
                            }
                        ],
                        "text": "The generator is written in the Caml Light dialect of ML [5]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The Caml Light system release 0.71"
            },
            "venue": {
                "fragments": [],
                "text": "Institut National de Recherche en Informatique at Automatique (IN- RIA),"
            },
            "year": 1996
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 71,
                                "start": 68
                            }
                        ],
                        "text": "In order to use dynamic-programming, we assumed optimal substructure[4]: if an optimal plan for a sizeN is known, this plan is still optimal when sizeN is used as a subproblem of a larger transform."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "In roduction to Algorithms"
            },
            "venue": {
                "fragments": [],
                "text": "Cambridge, Massachusetts: The MIT Press"
            },
            "year": 1990
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 163,
                                "start": 159
                            }
                        ],
                        "text": "Krukar (C, 1990); the Fortran FFTPACK library [11]; a Fortran split-radix FFT by Sorensen [12]; a Fortran FFT by Singleton [13]; Temperton\u2019s Fortran GPFA code [14]; Bailey\u2019s \u201c4-step\u201d FFT implementation [15]; Sitton\u2019s QFT code [16]; and thefour1 routine from [17] (NRF)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A generalized prime factor FFT algorithm for anyn = 235,"
            },
            "venue": {
                "fragments": [],
                "text": "SIAM Journal on Scientific and Statistical Computing,"
            },
            "year": 1992
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An algorithm for the machine computation of the complex Fourier series"
            },
            "venue": {
                "fragments": [],
                "text": "Mathematics of Computation"
            },
            "year": 1965
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 3,
            "methodology": 15
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 33,
        "totalPages": 4
    },
    "page_url": "https://www.semanticscholar.org/paper/FFTW:-an-adaptive-software-architecture-for-the-FFT-Frigo-Johnson/eeb2eb44102bf289db4a22635261d82ffa7dc7db?sort=total-citations"
}