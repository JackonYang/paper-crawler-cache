{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2418537"
                        ],
                        "name": "E. Georganas",
                        "slug": "E.-Georganas",
                        "structuredName": {
                            "firstName": "Evangelos",
                            "lastName": "Georganas",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Georganas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1777558"
                        ],
                        "name": "Sasikanth Avancha",
                        "slug": "Sasikanth-Avancha",
                        "structuredName": {
                            "firstName": "Sasikanth",
                            "lastName": "Avancha",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sasikanth Avancha"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2053653599"
                        ],
                        "name": "K. Banerjee",
                        "slug": "K.-Banerjee",
                        "structuredName": {
                            "firstName": "Kunal",
                            "lastName": "Banerjee",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Banerjee"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1886279"
                        ],
                        "name": "Dhiraj D. Kalamkar",
                        "slug": "Dhiraj-D.-Kalamkar",
                        "structuredName": {
                            "firstName": "Dhiraj",
                            "lastName": "Kalamkar",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dhiraj D. Kalamkar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145131827"
                        ],
                        "name": "G. Henry",
                        "slug": "G.-Henry",
                        "structuredName": {
                            "firstName": "Greg",
                            "lastName": "Henry",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Henry"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1820941511"
                        ],
                        "name": "Hans Pabst",
                        "slug": "Hans-Pabst",
                        "structuredName": {
                            "firstName": "Hans",
                            "lastName": "Pabst",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hans Pabst"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1722735"
                        ],
                        "name": "A. Heinecke",
                        "slug": "A.-Heinecke",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Heinecke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Heinecke"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 27,
                                "start": 15
                            }
                        ],
                        "text": "Previous works [19, 24, 27] which focus on individual operation optimization normally do not consider about the data layout transformation overhead between highly optimized operations."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 148,
                                "start": 140
                            }
                        ],
                        "text": "In addition to the libraries, there are also highly customized optimization works for convolutions and matrix multiplications on Intel CPUs [19, 24]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 61,
                                "start": 51
                            }
                        ],
                        "text": "We\nadopted the pipeline of TVM, and extended it to Intel CPUs via a series of optimizations reported in the paper."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 47,
                                "start": 37
                            }
                        ],
                        "text": "Our solution outperforms OpenVINO on Intel CPUs due to more advanced optimization on both the model-level and operation-level."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 61,
                                "start": 51
                            }
                        ],
                        "text": "In this paper we focus on optimizing CNN models on Intel CPUs but the techniques are easily generalizable to other model architectures and hardware targets."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 60,
                                "start": 50
                            }
                        ],
                        "text": "For example, the current mainstream generation of Intel CPUs (Skylake) typically incorporates from 2 (PCs and workstations) to 28 (high-end servers) physical cores."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 27,
                                "start": 15
                            }
                        ],
                        "text": "Existing works [19, 24, 27] have demonstrated that it is possible to achieve high performance of convolution operations on CPUs by arranging the data layout and consequently, the computation, in an architecture-friendly way."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 52018796,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "96b45f52832aec44326a0b944df411f7b2d67926",
            "isKey": true,
            "numCitedBy": 58,
            "numCiting": 25,
            "paperAbstract": {
                "fragments": [],
                "text": "Convolution layers are prevalent in many classes of deep neural networks, including Convolutional Neural Networks (CNNs) which provide state-of-the-art results for tasks like image recognition, neural machine translation and speech recognition. The computationally expensive nature of a convolution operation has led to the proliferation of implementations including matrix-matrix multiplication formulation, and direct convolution primarily targeting GPUs. In this paper, we introduce direct convolution kernels for x86 architectures, in particular for Xeon and Xeon Phi systems, which are implemented via a dynamic compilation approach. Our JIT-based implementation shows close to theoretical peak performance, depending on the setting and the CPU architecture at hand. We additionally demonstrate how these JIT-optimized kernels can be integrated into a light-weight multi-node graph execution model. This illustrates that single- and multi-node runs yield high efficiencies and high image-throughputs when executing state-of-the-art image recognition tasks on CPUs."
            },
            "slug": "Anatomy-of-High-Performance-Deep-Learning-on-SIMD-Georganas-Avancha",
            "title": {
                "fragments": [],
                "text": "Anatomy of High-Performance Deep Learning Convolutions on SIMD Architectures"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This paper introduces direct convolution kernels for x86 architectures, in particular for Xeon and Xeon Phi systems, which are implemented via a dynamic compilation approach, and demonstrates how these JIT-optimized kernels can be integrated into a light-weight multi-node graph execution model."
            },
            "venue": {
                "fragments": [],
                "text": "SC18: International Conference for High Performance Computing, Networking, Storage and Analysis"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2508525"
                        ],
                        "name": "D. Budden",
                        "slug": "D.-Budden",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Budden",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Budden"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145846361"
                        ],
                        "name": "A. Matveev",
                        "slug": "A.-Matveev",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Matveev",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Matveev"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2852106"
                        ],
                        "name": "Shibani Santurkar",
                        "slug": "Shibani-Santurkar",
                        "structuredName": {
                            "firstName": "Shibani",
                            "lastName": "Santurkar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shibani Santurkar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32506952"
                        ],
                        "name": "S. Chaudhuri",
                        "slug": "S.-Chaudhuri",
                        "structuredName": {
                            "firstName": "Shraman",
                            "lastName": "Chaudhuri",
                            "middleNames": [
                                "Ray"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Chaudhuri"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2613669"
                        ],
                        "name": "N. Shavit",
                        "slug": "N.-Shavit",
                        "structuredName": {
                            "firstName": "Nir",
                            "lastName": "Shavit",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Shavit"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6213512,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8ff3103f90dbd32d428b3f018af2204f1b8380fd",
            "isKey": false,
            "numCitedBy": 30,
            "numCiting": 81,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep convolutional neural networks (ConvNets) of 3-dimensional kernels allow joint modeling of spatiotemporal features. These networks have improved performance of video and volumetric image analysis, but have been limited in size due to the low memory ceiling of GPU hardware. Existing CPU implementations overcome this constraint but are impractically slow. Here we extend and optimize the faster Winograd-class of convolutional algorithms to the N-dimensional case and specifically for CPU hardware. First, we remove the need to manually hand-craft algorithms by exploiting the relaxed constraints and cheap sparse access of CPU memory. Second, we maximize CPU utilization and multi-core scalability by transforming data matrices to be cache-aware, integer multiples of AVX vector widths. Treating 2D ConvNets as a special case, we demonstrate a 5 to 25-fold improvement in throughput compared to previous state-of-the-art."
            },
            "slug": "Deep-Tensor-Convolution-on-Multicores-Budden-Matveev",
            "title": {
                "fragments": [],
                "text": "Deep Tensor Convolution on Multicores"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This work extends and optimize the faster Winograd-class of convolutional algorithms to the N-dimensional case and specifically for CPU hardware, and removes the need to manually hand-craft algorithms by exploiting the relaxed constraints and cheap sparse access of CPU memory."
            },
            "venue": {
                "fragments": [],
                "text": "ICML"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1732910"
                        ],
                        "name": "Ziheng Jiang",
                        "slug": "Ziheng-Jiang",
                        "structuredName": {
                            "firstName": "Ziheng",
                            "lastName": "Jiang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ziheng Jiang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913774"
                        ],
                        "name": "Tianqi Chen",
                        "slug": "Tianqi-Chen",
                        "structuredName": {
                            "firstName": "Tianqi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianqi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2112144126"
                        ],
                        "name": "Mu Li",
                        "slug": "Mu-Li",
                        "structuredName": {
                            "firstName": "Mu",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mu Li"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "loop computation (line 8 of Algorithm 1). The local search uses a template to find the best combination of these values to minimize the CONV execution time, similar to the kernel optimization step in [25]. Specifically, the local search works as follows: 1. Define the candidate lists ofic_bn and oc_bn. To exhaust the searching space, we include all factors of the number of channels. For example, if th"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 52241381,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d2f07fd189a1b3c37e42aff9d0345f8ee4f87135",
            "isKey": false,
            "numCitedBy": 17,
            "numCiting": 10,
            "paperAbstract": {
                "fragments": [],
                "text": "Deploying deep learning (DL) models on edge devices is getting popular nowadays. The huge diversity of edge devices, with both computation and memory constraints, however, make efficient deployment challenging. In this paper, we propose a two-stage pipeline that optimizes DL models on target devices. The first stage optimizes the inference workloads, and the second stage searches optimal kernel implementations on the target device. We implemented this pipeline with the TVM stack. Our contributions include new algorithmic optimization that is crucial to edge devices, such as quantization and joint kernel turning. On Raspberry Pi, compared to manually optimized frameworks, we will demonstrate our pipeline improves inference latency by 3x for ResNet-18 and by 10x for MobileNet, and generates compact runtime library with size less than 1MB. ACM Reference Format: Ziheng Jiang, Tianqi Chen, and Mu Li. 2018. Efficient Deep Learning Inference on Edge Devices. In Proceedings of ACM Conference on Systems and Machine Learning (SysML\u201918). ACM, New York, NY, USA, 3 pages. https://doi.org/10.1145/nnnnnnn.nnnnnnn"
            },
            "slug": "Efficient-Deep-Learning-Inference-on-Edge-Devices-Jiang-Chen",
            "title": {
                "fragments": [],
                "text": "Efficient Deep Learning Inference on Edge Devices"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "This paper proposes a two-stage pipeline that optimizes DL models on target devices, and implemented this pipeline with the TVM stack, which improves inference latency by 3x for ResNet-18 and by 10x for MobileNet, and generates compact runtime library with size less than 1MB."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1950072"
                        ],
                        "name": "Linpeng Tang",
                        "slug": "Linpeng-Tang",
                        "structuredName": {
                            "firstName": "Linpeng",
                            "lastName": "Tang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Linpeng Tang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [],
                        "name": "Yida Wang",
                        "slug": "Yida-Wang",
                        "structuredName": {
                            "firstName": "Yida",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yida Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2999876"
                        ],
                        "name": "Theodore L. Willke",
                        "slug": "Theodore-L.-Willke",
                        "structuredName": {
                            "firstName": "Theodore",
                            "lastName": "Willke",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Theodore L. Willke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2158257968"
                        ],
                        "name": "Kai Li",
                        "slug": "Kai-Li",
                        "structuredName": {
                            "firstName": "Kai",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kai Li"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "As deep learning demonstrates more and more power in the real-world applications, there is a significant amount of effort being made to accelerate the deep learning workloads on all kinds of hardware ranging from CPUs [24, 27, 44, 53], GPUs [11, 13], FPGAs [18, 22, 49], to special-purpose accelerators [12, 32]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 50786018,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "7841801ba475af28e708017d29b82e8f5855f235",
            "isKey": false,
            "numCitedBy": 14,
            "numCiting": 70,
            "paperAbstract": {
                "fragments": [],
                "text": "For a deep learning model, efficient execution of its computation graph is key to achieving high performance. Previous work has focused on improving the performance for individual nodes of the computation graph, while ignoring the parallelization of the graph as a whole. However, we observe that running multiple operations simultaneously without interference is critical to efficiently perform parallelizable small operations. The attempt of executing the computation graph in parallel in deep learning frameworks usually involves much resource contention among concurrent operations, leading to inferior performance on manycore CPUs. To address these issues, in this paper, we propose Graphi, a generic and high-performance execution engine to efficiently execute a computation graph in parallel on manycore CPUs. Specifically, Graphi minimizes the interference on both software/hardware resources, discovers the best parallel setting with a profiler, and further optimizes graph execution with the critical-path first scheduling. Our experiments show that the parallel execution consistently outperforms the sequential one. The training times on four different neural networks with Graphi are 2.1x to 9.5x faster than those with TensorFlow on a 68-core Intel Xeon Phi processor."
            },
            "slug": "Scheduling-Computation-Graphs-of-Deep-Learning-on-Tang-Wang",
            "title": {
                "fragments": [],
                "text": "Scheduling Computation Graphs of Deep Learning Models on Manycore CPUs"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "This paper proposes Graphi, a generic and high-performance execution engine to efficiently execute a computation graph in parallel on manycore CPUs that minimizes the interference on both software/hardware resources, discovers the best parallel setting with a profiler, and further optimizes graph execution with the critical-path first scheduling."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913774"
                        ],
                        "name": "Tianqi Chen",
                        "slug": "Tianqi-Chen",
                        "structuredName": {
                            "firstName": "Tianqi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianqi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47108160"
                        ],
                        "name": "T. Moreau",
                        "slug": "T.-Moreau",
                        "structuredName": {
                            "firstName": "Thierry",
                            "lastName": "Moreau",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Moreau"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1732910"
                        ],
                        "name": "Ziheng Jiang",
                        "slug": "Ziheng-Jiang",
                        "structuredName": {
                            "firstName": "Ziheng",
                            "lastName": "Jiang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ziheng Jiang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3050154"
                        ],
                        "name": "Haichen Shen",
                        "slug": "Haichen-Shen",
                        "structuredName": {
                            "firstName": "Haichen",
                            "lastName": "Shen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Haichen Shen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2621619"
                        ],
                        "name": "Eddie Q. Yan",
                        "slug": "Eddie-Q.-Yan",
                        "structuredName": {
                            "firstName": "Eddie",
                            "lastName": "Yan",
                            "middleNames": [
                                "Q."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eddie Q. Yan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2185540"
                        ],
                        "name": "Leyuan Wang",
                        "slug": "Leyuan-Wang",
                        "structuredName": {
                            "firstName": "Leyuan",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Leyuan Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49994783"
                        ],
                        "name": "Yuwei Hu",
                        "slug": "Yuwei-Hu",
                        "structuredName": {
                            "firstName": "Yuwei",
                            "lastName": "Hu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuwei Hu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717411"
                        ],
                        "name": "L. Ceze",
                        "slug": "L.-Ceze",
                        "structuredName": {
                            "firstName": "Luis",
                            "lastName": "Ceze",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Ceze"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1730156"
                        ],
                        "name": "Carlos Guestrin",
                        "slug": "Carlos-Guestrin",
                        "structuredName": {
                            "firstName": "Carlos",
                            "lastName": "Guestrin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Carlos Guestrin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144695691"
                        ],
                        "name": "A. Krishnamurthy",
                        "slug": "A.-Krishnamurthy",
                        "structuredName": {
                            "firstName": "Arvind",
                            "lastName": "Krishnamurthy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Krishnamurthy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 86,
                                "start": 83
                            }
                        ],
                        "text": "D C\n] 7\nS ep\n2 01\n8\nOur approach includes a number of enhancements that build upon TVM [7]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 65,
                                "start": 62
                            }
                        ],
                        "text": "NeoCPU is built upon a deep learning compiler stack named TVM [9] with a number of enhancements."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 136,
                                "start": 133
                            }
                        ],
                        "text": "This part of optimization was done by most of the existing high-performance deep learning implementations, we replicate it using the TVM scheduling schemes without touching the assembly code or intrinsics."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 32,
                                "start": 29
                            }
                        ],
                        "text": "Our solution is based on the TVM stack [7], an end-toend framework inspired by Halide [32], which expresses a deep learning model into intermediate representations (IRs) and lowers the IRs eventually to the machine code."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 16,
                                "start": 13
                            }
                        ],
                        "text": "The original TVM stack has done a couple of general graph-level optimizations including operator fusion, pre-computing, simplifying inference for batch-norm and dropout [7], which\nare also inherited to our solution but will not be covered in this paper."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 48,
                                "start": 45
                            }
                        ],
                        "text": "We implemented the optimization based on the TVM stack [7] by adding a number of new features to the compiling pass, operator scheduling and runtime components."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 172,
                                "start": 169
                            }
                        ],
                        "text": "The original TVM stack has done a couple of generic graphlevel optimizations including operation fusion, pre-computing, simplifying inference for batch-norm and dropout [9], which are also inherited to this work but will not be covered in this paper."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 57,
                                "start": 54
                            }
                        ],
                        "text": "Our solution was built on top of the code base of the TVM stack 0.4.0."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 30,
                                "start": 27
                            }
                        ],
                        "text": "We\nadopted the pipeline of TVM, and extended it to Intel CPUs via a series of optimizations reported in the paper."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 52,
                                "start": 49
                            }
                        ],
                        "text": "All the optimizations can be implemented via the TVM stack scheduling schemes without writing a single line of assembly code (see supplementary material)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 23,
                                "start": 20
                            }
                        ],
                        "text": "The common practice [9] is fusing them to CONVs so as to increase the overall arithmetic intensity of the workload and consequently boost the performance."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 56,
                                "start": 53
                            }
                        ],
                        "text": "All source code has been released to the open source TVM project1."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 99,
                                "start": 96
                            }
                        ],
                        "text": "MXNet [8]/TensorFlow [5] 3rd party limited 7 3 OpenVINO [16] 3rd party limited ? 7 Original TVM [9] incomplete 3 7 3"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 36,
                                "start": 33
                            }
                        ],
                        "text": "NeoCPU is based on the TVM stack [9], an end-to-end framework inspired by Halide [39], which expresses a deep learning model into intermediate representations (IRs) and compiles to the machine code."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 90,
                                "start": 87
                            }
                        ],
                        "text": "We implemented the ideas by introducing multiple graphlevel optimization passes to the TVM stack."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 58,
                                "start": 55
                            }
                        ],
                        "text": "We implemented the optimization based on the TVM stack [9] by adding a number of new features to the compiling pass, operation scheduling and runtime components."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 3296374,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "ec3071fb918ad69ec80df1ca9cf1fdeb386a9603",
            "isKey": true,
            "numCitedBy": 140,
            "numCiting": 50,
            "paperAbstract": {
                "fragments": [],
                "text": "Scalable frameworks, such as TensorFlow, MXNet, Caffe, and PyTorch drive the current popularity and utility of deep learning. However, these frameworks are optimized for a narrow range of server-class GPUs and deploying workloads to other platforms such as mobile phones, embedded devices, and specialized accelerators (e.g., FPGAs, ASICs) requires laborious manual effort. We propose TVM, an end-to-end optimization stack that exposes graph-level and operator-level optimizations to provide performance portability to deep learning workloads across diverse hardware back-ends. We discuss the optimization challenges specific to deep learning that TVM solves: high-level operator fusion, low-level memory reuse across threads, mapping to arbitrary hardware primitives, and memory latency hiding. Experimental results demonstrate that TVM delivers performance across hardware back-ends that are competitive with state-of-the-art libraries for low-power CPU and server-class GPUs. We also demonstrate TVM's ability to target new hardware accelerator back-ends by targeting an FPGA-based generic deep learning accelerator. The compiler infrastructure is open sourced."
            },
            "slug": "TVM:-End-to-End-Optimization-Stack-for-Deep-Chen-Moreau",
            "title": {
                "fragments": [],
                "text": "TVM: End-to-End Optimization Stack for Deep Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "TVM is proposed, an end-to-end optimization stack that exposes graph-level and operator-level optimizations to provide performance portability to deep learning workloads across diverse hardware back-ends and discusses the optimization challenges specific toDeep learning that TVM solves."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2059083875"
                        ],
                        "name": "Connor Holmes",
                        "slug": "Connor-Holmes",
                        "structuredName": {
                            "firstName": "Connor",
                            "lastName": "Holmes",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Connor Holmes"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "27998850"
                        ],
                        "name": "Daniel Mawhirter",
                        "slug": "Daniel-Mawhirter",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Mawhirter",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daniel Mawhirter"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2145020341"
                        ],
                        "name": "Yuxiong He",
                        "slug": "Yuxiong-He",
                        "structuredName": {
                            "firstName": "Yuxiong",
                            "lastName": "He",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuxiong He"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145552742"
                        ],
                        "name": "Feng Yan",
                        "slug": "Feng-Yan",
                        "structuredName": {
                            "firstName": "Feng",
                            "lastName": "Yan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Feng Yan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144397979"
                        ],
                        "name": "Bo Wu",
                        "slug": "Bo-Wu",
                        "structuredName": {
                            "firstName": "Bo",
                            "lastName": "Wu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bo Wu"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "RNNs [25, 50]) is another interesting direction to explore."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 85518643,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c2672933d76061e5a0e4a40f57217b504e4c241d",
            "isKey": false,
            "numCitedBy": 30,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "Recurrent neural networks (RNNs) have gained significant attention due to their effectiveness in modeling sequential data, such as text and voice signal. However, due to the complex data dependencies and limited parallelism, current inference libraries for RNNs on GPUs produce either high latency or poor scalability, leading to inefficient resource utilization. Consequently, companies like Microsoft and Facebook use CPUs to serve RNN models. This work demonstrates the root causes of the unsatisfactory performance of existing implementations for RNN inference on GPUs from several aspects, including poor data reuse, low on-chip resource utilization, and high synchronization overhead. We systematically address these issues and develop a GPU-based RNN inference library, called GRNN, that provides low latency, high throughput, and efficient resource utilization. GRNN minimizes global memory accesses and synchronization overhead, as well as balancing on-chip resource usage through novel data reorganization, thread mapping, and performance modeling techniques. Evaluated on extensive benchmarking and real-world applications, we show that GRNN outperforms the state-of-the-art CPU inference library by up to 17.5X and state-of-the-art GPU inference libraries by up to 9X in terms of latency reduction."
            },
            "slug": "GRNN:-Low-Latency-and-Scalable-RNN-Inference-on-Holmes-Mawhirter",
            "title": {
                "fragments": [],
                "text": "GRNN: Low-Latency and Scalable RNN Inference on GPUs"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This work systematically addresses the root causes of the unsatisfactory performance of existing implementations for RNN inference on GPUs from several aspects, including poor data reuse, low on-chip resource utilization, and high synchronization overhead, and develops a GPU-based Rnn inference library, called GRNN, that provides low latency, high throughput, and efficient resource utilization."
            },
            "venue": {
                "fragments": [],
                "text": "EuroSys"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "67016465"
                        ],
                        "name": "Minjia Zhang",
                        "slug": "Minjia-Zhang",
                        "structuredName": {
                            "firstName": "Minjia",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Minjia Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32817044"
                        ],
                        "name": "Samyam Rajbhandari",
                        "slug": "Samyam-Rajbhandari",
                        "structuredName": {
                            "firstName": "Samyam",
                            "lastName": "Rajbhandari",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Samyam Rajbhandari"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47824833"
                        ],
                        "name": "Wenhan Wang",
                        "slug": "Wenhan-Wang",
                        "structuredName": {
                            "firstName": "Wenhan",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Wenhan Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2145020341"
                        ],
                        "name": "Yuxiong He",
                        "slug": "Yuxiong-He",
                        "structuredName": {
                            "firstName": "Yuxiong",
                            "lastName": "He",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuxiong He"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "RNNs [25, 50]) is another interesting direction to explore."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 51870307,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "ede30dce5a98a8a83a93ec3a717382db193a947c",
            "isKey": false,
            "numCitedBy": 71,
            "numCiting": 55,
            "paperAbstract": {
                "fragments": [],
                "text": "Recurrent neural networks (RNNs) are an important class of deep learning (DL) models. Existing DL frameworks have unsatisfying performance for online serving: many RNN models suffer from long serving latency and high cost, preventing their deployment in production. \n \nThis work characterizes RNN performance and identifies low data reuse as a root cause. We develop novel techniques and an efficient search strategy to squeeze more data reuse out of this intrinsically challenging workload. We build DeepCPU, a fast serving library on CPUs, to integrate these optimizations for efficient RNN computation. Our evaluation on various RNN models shows that DeepCPU improves latency and efficiency by an order of magnitude on CPUs compared with existing DL frameworks such as TensorFlow. It also empowers CPUs to beat GPUs on RNN serving. In production services of Microsoft, DeepCPU transforms many models from non-shippable (due to latency SLA violation) to shippable (well-fitting latency requirements) and saves millions of dollars of infrastructure costs."
            },
            "slug": "DeepCPU:-Serving-RNN-based-Deep-Learning-Models-10x-Zhang-Rajbhandari",
            "title": {
                "fragments": [],
                "text": "DeepCPU: Serving RNN-based Deep Learning Models 10x Faster"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "This work characterizes RNN performance and identifies low data reuse as a root cause, and develops novel techniques and an efficient search strategy to squeeze more data reuse out of this intrinsically challenging workload."
            },
            "venue": {
                "fragments": [],
                "text": "USENIX Annual Technical Conference"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913774"
                        ],
                        "name": "Tianqi Chen",
                        "slug": "Tianqi-Chen",
                        "structuredName": {
                            "firstName": "Tianqi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianqi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2149970173"
                        ],
                        "name": "Lianmin Zheng",
                        "slug": "Lianmin-Zheng",
                        "structuredName": {
                            "firstName": "Lianmin",
                            "lastName": "Zheng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lianmin Zheng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2621619"
                        ],
                        "name": "Eddie Q. Yan",
                        "slug": "Eddie-Q.-Yan",
                        "structuredName": {
                            "firstName": "Eddie",
                            "lastName": "Yan",
                            "middleNames": [
                                "Q."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eddie Q. Yan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1732910"
                        ],
                        "name": "Ziheng Jiang",
                        "slug": "Ziheng-Jiang",
                        "structuredName": {
                            "firstName": "Ziheng",
                            "lastName": "Jiang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ziheng Jiang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47108160"
                        ],
                        "name": "T. Moreau",
                        "slug": "T.-Moreau",
                        "structuredName": {
                            "firstName": "Thierry",
                            "lastName": "Moreau",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Moreau"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717411"
                        ],
                        "name": "L. Ceze",
                        "slug": "L.-Ceze",
                        "structuredName": {
                            "firstName": "Luis",
                            "lastName": "Ceze",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Ceze"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1730156"
                        ],
                        "name": "Carlos Guestrin",
                        "slug": "Carlos-Guestrin",
                        "structuredName": {
                            "firstName": "Carlos",
                            "lastName": "Guestrin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Carlos Guestrin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144695691"
                        ],
                        "name": "A. Krishnamurthy",
                        "slug": "A.-Krishnamurthy",
                        "structuredName": {
                            "firstName": "Arvind",
                            "lastName": "Krishnamurthy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Krishnamurthy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 71,
                                "start": 59
                            }
                        ],
                        "text": "Similar auto-tuning ideas were used in other works as well [10, 43, 45]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 29160233,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "cb91c2f8d3cac0b655a39be318b603334eb18987",
            "isKey": false,
            "numCitedBy": 181,
            "numCiting": 46,
            "paperAbstract": {
                "fragments": [],
                "text": "We introduce a learning-based framework to optimize tensor programs for deep learning workloads. Efficient implementations of tensor operators, such as matrix multiplication and high dimensional convolution, are key enablers of effective deep learning systems. However, existing systems rely on manually optimized libraries such as cuDNN where only a narrow range of server class GPUs are well-supported. The reliance on hardware-specific operator libraries limits the applicability of high-level graph optimizations and incurs significant engineering costs when deploying to new hardware targets. We use learning to remove this engineering burden. We learn domain-specific statistical cost models to guide the search of tensor operator implementations over billions of possible program variants. We further accelerate the search by effective model transfer across workloads. Experimental results show that our framework delivers performance competitive with state-of-the-art hand-tuned libraries for low-power CPU, mobile GPU, and server-class GPU."
            },
            "slug": "Learning-to-Optimize-Tensor-Programs-Chen-Zheng",
            "title": {
                "fragments": [],
                "text": "Learning to Optimize Tensor Programs"
            },
            "tldr": {
                "abstractSimilarityScore": 57,
                "text": "A learning-based framework to optimize tensor programs for deep learning workloads that learns domain-specific statistical cost models to guide the search of tensor operator implementations over billions of possible program variants and accelerates the search by effective model transfer across workloads."
            },
            "venue": {
                "fragments": [],
                "text": "NeurIPS"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49959210"
                        ],
                        "name": "J. Dean",
                        "slug": "J.-Dean",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Dean",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dean"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145139947"
                        ],
                        "name": "Matthieu Devin",
                        "slug": "Matthieu-Devin",
                        "structuredName": {
                            "firstName": "Matthieu",
                            "lastName": "Devin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matthieu Devin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1780892"
                        ],
                        "name": "S. Ghemawat",
                        "slug": "S.-Ghemawat",
                        "structuredName": {
                            "firstName": "Sanjay",
                            "lastName": "Ghemawat",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Ghemawat"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153440022"
                        ],
                        "name": "Ian J. Goodfellow",
                        "slug": "Ian-J.-Goodfellow",
                        "structuredName": {
                            "firstName": "Ian",
                            "lastName": "Goodfellow",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ian J. Goodfellow"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064102917"
                        ],
                        "name": "A. Harp",
                        "slug": "A.-Harp",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Harp",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Harp"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060655766"
                        ],
                        "name": "Geoffrey Irving",
                        "slug": "Geoffrey-Irving",
                        "structuredName": {
                            "firstName": "Geoffrey",
                            "lastName": "Irving",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Geoffrey Irving"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2090818"
                        ],
                        "name": "M. Isard",
                        "slug": "M.-Isard",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Isard",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Isard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39978391"
                        ],
                        "name": "Yangqing Jia",
                        "slug": "Yangqing-Jia",
                        "structuredName": {
                            "firstName": "Yangqing",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yangqing Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1944541"
                        ],
                        "name": "R. J\u00f3zefowicz",
                        "slug": "R.-J\u00f3zefowicz",
                        "structuredName": {
                            "firstName": "Rafal",
                            "lastName": "J\u00f3zefowicz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. J\u00f3zefowicz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "10433955"
                        ],
                        "name": "A. Jaffey",
                        "slug": "A.-Jaffey",
                        "structuredName": {
                            "firstName": "Aaron",
                            "lastName": "Jaffey",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Jaffey"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 26965518,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "222e5a12b9cfd041c9b97650b629ee34f938c99a",
            "isKey": false,
            "numCitedBy": 8,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": "Many current approaches to deep learning make use of high-level toolkits such as TensorFlow, Torch, or Caffe. Toolkits such as Caffe have a layer-based programming framework with hard-coded gradients specified for each layer type, making research using novel layer types problematic. Toolkits such as Torch and TensorFlow define a computation graph in a host language such as Python, where each node represents a linear algebra operation parallelized as a compute kernel on GPU and stores the result of evaluation; some of these toolkits subsequently perform runtime interpretation over that graph, storing the results of forward calculations and reverse-accumulated gradients at each node. This approach is more flexible, but these toolkits take a very limited and ad-hoc approach to performing optimization. Also problematic are the facts that most toolkits lack type safety, and target only a single (usually GPU) architecture, limiting users\u2019 abilities to make use of heterogeneous and emerging hardware architectures. We introduce a novel framework for high-level programming that addresses all of the above shortcomings."
            },
            "slug": "DLVM:-A-MODERN-COMPILER-FRAMEWORK-FOR-NEURAL-DSLS-Dean-Devin",
            "title": {
                "fragments": [],
                "text": "DLVM: A MODERN COMPILER FRAMEWORK FOR NEURAL NETWORK DSLS"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "This work introduces a novel framework for high-level programming that addresses all of the above shortcomings of toolkits and allows users\u2019 abilities to make use of heterogeneous and emerging hardware architectures."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1800919"
                        ],
                        "name": "Nicolas Vasilache",
                        "slug": "Nicolas-Vasilache",
                        "structuredName": {
                            "firstName": "Nicolas",
                            "lastName": "Vasilache",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nicolas Vasilache"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2054833547"
                        ],
                        "name": "O. Zinenko",
                        "slug": "O.-Zinenko",
                        "structuredName": {
                            "firstName": "Oleksandr",
                            "lastName": "Zinenko",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Zinenko"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2097631216"
                        ],
                        "name": "Theodoros Theodoridis",
                        "slug": "Theodoros-Theodoridis",
                        "structuredName": {
                            "firstName": "Theodoros",
                            "lastName": "Theodoridis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Theodoros Theodoridis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47316088"
                        ],
                        "name": "Priya Goyal",
                        "slug": "Priya-Goyal",
                        "structuredName": {
                            "firstName": "Priya",
                            "lastName": "Goyal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Priya Goyal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2375710"
                        ],
                        "name": "Zach DeVito",
                        "slug": "Zach-DeVito",
                        "structuredName": {
                            "firstName": "Zach",
                            "lastName": "DeVito",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zach DeVito"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "16521420"
                        ],
                        "name": "William S. Moses",
                        "slug": "William-S.-Moses",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Moses",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "William S. Moses"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1772079"
                        ],
                        "name": "Sven Verdoolaege",
                        "slug": "Sven-Verdoolaege",
                        "structuredName": {
                            "firstName": "Sven",
                            "lastName": "Verdoolaege",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sven Verdoolaege"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145509576"
                        ],
                        "name": "Albert Cohen",
                        "slug": "Albert-Cohen",
                        "structuredName": {
                            "firstName": "Albert",
                            "lastName": "Cohen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Albert Cohen"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 86,
                                "start": 82
                            }
                        ],
                        "text": "There are several other similar IR-style frameworks such as Tensor Comprehensions [42], Glow [33] and DLVM [43]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 44014988,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "cae9d90524cccac5081666985d5d055b71697cee",
            "isKey": false,
            "numCitedBy": 284,
            "numCiting": 102,
            "paperAbstract": {
                "fragments": [],
                "text": "Deep learning models with convolutional and recurrent networks are now ubiquitous and analyze massive amounts of audio, image, video, text and graph data, with applications in automatic translation, speech-to-text, scene understanding, ranking user preferences, ad placement, etc. Competing frameworks for building these networks such as TensorFlow, Chainer, CNTK, Torch/PyTorch, Caffe1/2, MXNet and Theano, explore different tradeoffs between usability and expressiveness, research or production orientation and supported hardware. They operate on a DAG of computational operators, wrapping high-performance libraries such as CUDNN (for NVIDIA GPUs) or NNPACK (for various CPUs), and automate memory allocation, synchronization, distribution. Custom operators are needed where the computation does not fit existing high-performance library calls, usually at a high engineering cost. This is frequently required when new operators are invented by researchers: such operators suffer a severe performance penalty, which limits the pace of innovation. Furthermore, even if there is an existing runtime call these frameworks can use, it often doesn't offer optimal performance for a user's particular network architecture and dataset, missing optimizations between operators as well as optimizations that can be done knowing the size and shape of data. Our contributions include (1) a language close to the mathematics of deep learning called Tensor Comprehensions offering both imperative and declarative styles, (2) a polyhedral Just-In-Time compiler to convert a mathematical description of a deep learning DAG into a CUDA kernel with delegated memory management and synchronization, also providing optimizations such as operator fusion and specialization for specific sizes, (3) a compilation cache populated by an autotuner. [Abstract cutoff]"
            },
            "slug": "Tensor-Comprehensions:-Framework-Agnostic-Machine-Vasilache-Zinenko",
            "title": {
                "fragments": [],
                "text": "Tensor Comprehensions: Framework-Agnostic High-Performance Machine Learning Abstractions"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "A language close to the mathematics of deep learning called Tensor Comprehensions offering both imperative and declarative styles, a polyhedral Just-In-Time compiler to convert a mathematical description of a deep learning DAG into a CUDA kernel with delegated memory management and synchronization, and a compilation cache populated by an autotuner are contributed."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2574060"
                        ],
                        "name": "Christian Szegedy",
                        "slug": "Christian-Szegedy",
                        "structuredName": {
                            "firstName": "Christian",
                            "lastName": "Szegedy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christian Szegedy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2657155"
                        ],
                        "name": "Vincent Vanhoucke",
                        "slug": "Vincent-Vanhoucke",
                        "structuredName": {
                            "firstName": "Vincent",
                            "lastName": "Vanhoucke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vincent Vanhoucke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2054165706"
                        ],
                        "name": "S. Ioffe",
                        "slug": "S.-Ioffe",
                        "structuredName": {
                            "firstName": "Sergey",
                            "lastName": "Ioffe",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Ioffe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1789737"
                        ],
                        "name": "Jonathon Shlens",
                        "slug": "Jonathon-Shlens",
                        "structuredName": {
                            "firstName": "Jonathon",
                            "lastName": "Shlens",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathon Shlens"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3282833"
                        ],
                        "name": "Z. Wojna",
                        "slug": "Z.-Wojna",
                        "structuredName": {
                            "firstName": "Zbigniew",
                            "lastName": "Wojna",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Z. Wojna"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 137,
                                "start": 133
                            }
                        ],
                        "text": "We ran the model inference on a number of popularly used CNNmodels, including ResNet [19], VGG [34], DenseNet [22], and Inception-v3 [39]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 103,
                                "start": 91
                            }
                        ],
                        "text": "ResNet-50 (and its variants) gains more\nTop-1/Top-5 accuracy ResNet-50 VGG-19 DenseNet-201 Inception-v3\nspeedup from global search because the network structure is more complicated, hence leaving more optimization room."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 198,
                                "start": 186
                            }
                        ],
                        "text": "From the figure we can tell our solution is substantially faster than MXNet on all models (1.15 \u2212 2.81\u00d7) as well as outperforms OpenVINO in most cases (1.04\u221211.48\u00d7), except for ResNet-34 and Inception-v3 (2% slower)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 84
                            }
                        ],
                        "text": "Convolutional neural networks (CNNs) are commonly used in computer vision workloads [19, 21, 22, 28, 34, 38, 39]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 206593880,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "23ffaa0fe06eae05817f527a47ac3291077f9e58",
            "isKey": true,
            "numCitedBy": 15857,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "Convolutional networks are at the core of most state of-the-art computer vision solutions for a wide variety of tasks. Since 2014 very deep convolutional networks started to become mainstream, yielding substantial gains in various benchmarks. Although increased model size and computational cost tend to translate to immediate quality gains for most tasks (as long as enough labeled data is provided for training), computational efficiency and low parameter count are still enabling factors for various use cases such as mobile vision and big-data scenarios. Here we are exploring ways to scale up networks in ways that aim at utilizing the added computation as efficiently as possible by suitably factorized convolutions and aggressive regularization. We benchmark our methods on the ILSVRC 2012 classification challenge validation set demonstrate substantial gains over the state of the art: 21:2% top-1 and 5:6% top-5 error for single frame evaluation using a network with a computational cost of 5 billion multiply-adds per inference and with using less than 25 million parameters. With an ensemble of 4 models and multi-crop evaluation, we report 3:5% top-5 error and 17:3% top-1 error on the validation set and 3:6% top-5 error on the official test set."
            },
            "slug": "Rethinking-the-Inception-Architecture-for-Computer-Szegedy-Vanhoucke",
            "title": {
                "fragments": [],
                "text": "Rethinking the Inception Architecture for Computer Vision"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This work is exploring ways to scale up networks in ways that aim at utilizing the added computation as efficiently as possible by suitably factorized convolutions and aggressive regularization."
            },
            "venue": {
                "fragments": [],
                "text": "2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3134596"
                        ],
                        "name": "A. Zlateski",
                        "slug": "A.-Zlateski",
                        "structuredName": {
                            "firstName": "Aleksandar",
                            "lastName": "Zlateski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Zlateski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2785521"
                        ],
                        "name": "Kisuk Lee",
                        "slug": "Kisuk-Lee",
                        "structuredName": {
                            "firstName": "Kisuk",
                            "lastName": "Lee",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kisuk Lee"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144924970"
                        ],
                        "name": "H. Seung",
                        "slug": "H.-Seung",
                        "structuredName": {
                            "firstName": "H.",
                            "lastName": "Seung",
                            "middleNames": [
                                "Sebastian"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Seung"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 234,
                                "start": 218
                            }
                        ],
                        "text": "As deep learning demonstrates more and more power in the real-world applications, there is a significant amount of effort being made to accelerate the deep learning workloads on all kinds of hardware ranging from CPUs [24, 27, 44, 53], GPUs [11, 13], FPGAs [18, 22, 49], to special-purpose accelerators [12, 32]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 441681,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "1974f6b376b9d5d4d98db6c194059f56b3ec6073",
            "isKey": false,
            "numCitedBy": 40,
            "numCiting": 28,
            "paperAbstract": {
                "fragments": [],
                "text": "Convolutional networks (ConvNets) have become a popular approach to computer vision. It is important to accelerate ConvNet training, which is computationally costly. We propose a novel parallel algorithm based on decomposition into a set of tasks, most of which are convolutions or FFTs. Applying Brent's theorem to the task dependency graph implies that linear speedup with the number of processors is attainable within the PRAM model of parallel computation, for wide network architectures. To attain such performance on real shared-memory machines, our algorithm computes convolutions converging on the same node of the network with temporal locality to reduce cache misses, and sums the convergent convolution outputs via an almost wait-free concurrent method to reduce time spent in critical sections. We implement the algorithm with a publicly available software package called ZNN. Benchmarking with multi-core CPUs shows that ZNN can attain speedup roughly equal to the number of physical cores. We also show that ZNN can attain over 90\u00d7 speedup on a many-core CPU (Xeon Phi\u2122 Knights Corner). These speedups are achieved for network architectures with widths that are in common use. The task parallelism of the ZNN algorithm is suited to CPUs, while the SIMD parallelism of previous algorithms is compatible with GPUs. Through examples, we show that ZNN can be either faster or slower than certain GPU implementations depending on specifics of the network architecture, kernel sizes, and density and size of the output patch. ZNN may be less costly to develop and maintain, due to the relative ease of general-purpose CPU programming."
            },
            "slug": "ZNN-A-Fast-and-Scalable-Algorithm-for-Training-3D-Zlateski-Lee",
            "title": {
                "fragments": [],
                "text": "ZNN -- A Fast and Scalable Algorithm for Training 3D Convolutional Networks on Multi-core and Many-Core Shared Memory Machines"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This work proposes a novel parallel algorithm based on decomposition into a set of tasks, most of which are convolutions or FFTs, which can attain speedup roughly equal to the number of physical cores within the PRAM model of parallel computation."
            },
            "venue": {
                "fragments": [],
                "text": "2016 IEEE International Parallel and Distributed Processing Symposium (IPDPS)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1715454"
                        ],
                        "name": "N. Jouppi",
                        "slug": "N.-Jouppi",
                        "structuredName": {
                            "firstName": "Norman",
                            "lastName": "Jouppi",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Jouppi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39660914"
                        ],
                        "name": "C. Young",
                        "slug": "C.-Young",
                        "structuredName": {
                            "firstName": "Cliff",
                            "lastName": "Young",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Young"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2056800684"
                        ],
                        "name": "Nishant Patil",
                        "slug": "Nishant-Patil",
                        "structuredName": {
                            "firstName": "Nishant",
                            "lastName": "Patil",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nishant Patil"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2052996328"
                        ],
                        "name": "David A. Patterson",
                        "slug": "David-A.-Patterson",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Patterson",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David A. Patterson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1839673849"
                        ],
                        "name": "Gaurav Agrawal",
                        "slug": "Gaurav-Agrawal",
                        "structuredName": {
                            "firstName": "Gaurav",
                            "lastName": "Agrawal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Gaurav Agrawal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39892484"
                        ],
                        "name": "R. Bajwa",
                        "slug": "R.-Bajwa",
                        "structuredName": {
                            "firstName": "Raminder",
                            "lastName": "Bajwa",
                            "middleNames": [
                                "Singh"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Bajwa"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2057224801"
                        ],
                        "name": "Sarah Bates",
                        "slug": "Sarah-Bates",
                        "structuredName": {
                            "firstName": "Sarah",
                            "lastName": "Bates",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sarah Bates"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2125285255"
                        ],
                        "name": "Suresh Bhatia",
                        "slug": "Suresh-Bhatia",
                        "structuredName": {
                            "firstName": "Suresh",
                            "lastName": "Bhatia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Suresh Bhatia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35750774"
                        ],
                        "name": "N. Boden",
                        "slug": "N.-Boden",
                        "structuredName": {
                            "firstName": "Nanette",
                            "lastName": "Boden",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Boden"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1394297183"
                        ],
                        "name": "Al Borchers",
                        "slug": "Al-Borchers",
                        "structuredName": {
                            "firstName": "Al",
                            "lastName": "Borchers",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Al Borchers"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060002570"
                        ],
                        "name": "Rick Boyle",
                        "slug": "Rick-Boyle",
                        "structuredName": {
                            "firstName": "Rick",
                            "lastName": "Boyle",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Rick Boyle"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2065727960"
                        ],
                        "name": "Pierre-luc Cantin",
                        "slug": "Pierre-luc-Cantin",
                        "structuredName": {
                            "firstName": "Pierre-luc",
                            "lastName": "Cantin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Pierre-luc Cantin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1629772869"
                        ],
                        "name": "Clifford Chao",
                        "slug": "Clifford-Chao",
                        "structuredName": {
                            "firstName": "Clifford",
                            "lastName": "Chao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Clifford Chao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2113263549"
                        ],
                        "name": "Chris Clark",
                        "slug": "Chris-Clark",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Clark",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chris Clark"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213025"
                        ],
                        "name": "Jeremy Coriell",
                        "slug": "Jeremy-Coriell",
                        "structuredName": {
                            "firstName": "Jeremy",
                            "lastName": "Coriell",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jeremy Coriell"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2061461417"
                        ],
                        "name": "Mike Daley",
                        "slug": "Mike-Daley",
                        "structuredName": {
                            "firstName": "Mike",
                            "lastName": "Daley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mike Daley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153358157"
                        ],
                        "name": "Matt Dau",
                        "slug": "Matt-Dau",
                        "structuredName": {
                            "firstName": "Matt",
                            "lastName": "Dau",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matt Dau"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49959210"
                        ],
                        "name": "J. Dean",
                        "slug": "J.-Dean",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Dean",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dean"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1394723585"
                        ],
                        "name": "Ben Gelb",
                        "slug": "Ben-Gelb",
                        "structuredName": {
                            "firstName": "Ben",
                            "lastName": "Gelb",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ben Gelb"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213038"
                        ],
                        "name": "T. Ghaemmaghami",
                        "slug": "T.-Ghaemmaghami",
                        "structuredName": {
                            "firstName": "Tara",
                            "lastName": "Ghaemmaghami",
                            "middleNames": [
                                "Vazir"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Ghaemmaghami"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40301682"
                        ],
                        "name": "R. Gottipati",
                        "slug": "R.-Gottipati",
                        "structuredName": {
                            "firstName": "Rajendra",
                            "lastName": "Gottipati",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Gottipati"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213045"
                        ],
                        "name": "William Gulland",
                        "slug": "William-Gulland",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Gulland",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "William Gulland"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2330986"
                        ],
                        "name": "R. Hagmann",
                        "slug": "R.-Hagmann",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Hagmann",
                            "middleNames": [
                                "B."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Hagmann"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2148846139"
                        ],
                        "name": "C. R. Ho",
                        "slug": "C.-R.-Ho",
                        "structuredName": {
                            "firstName": "C.",
                            "lastName": "Ho",
                            "middleNames": [
                                "Richard"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. R. Ho"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1629763752"
                        ],
                        "name": "Doug Hogberg",
                        "slug": "Doug-Hogberg",
                        "structuredName": {
                            "firstName": "Doug",
                            "lastName": "Hogberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Doug Hogberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49268145"
                        ],
                        "name": "John Hu",
                        "slug": "John-Hu",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Hu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "John Hu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1701671"
                        ],
                        "name": "R. Hundt",
                        "slug": "R.-Hundt",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Hundt",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Hundt"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38786988"
                        ],
                        "name": "D. Hurt",
                        "slug": "D.-Hurt",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Hurt",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Hurt"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46920727"
                        ],
                        "name": "Julian Ibarz",
                        "slug": "Julian-Ibarz",
                        "structuredName": {
                            "firstName": "Julian",
                            "lastName": "Ibarz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Julian Ibarz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "10433955"
                        ],
                        "name": "A. Jaffey",
                        "slug": "A.-Jaffey",
                        "structuredName": {
                            "firstName": "Aaron",
                            "lastName": "Jaffey",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Jaffey"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064306865"
                        ],
                        "name": "Alek Jaworski",
                        "slug": "Alek-Jaworski",
                        "structuredName": {
                            "firstName": "Alek",
                            "lastName": "Jaworski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alek Jaworski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064354536"
                        ],
                        "name": "Alexander Kaplan",
                        "slug": "Alexander-Kaplan",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Kaplan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alexander Kaplan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398212995"
                        ],
                        "name": "Harshit Khaitan",
                        "slug": "Harshit-Khaitan",
                        "structuredName": {
                            "firstName": "Harshit",
                            "lastName": "Khaitan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Harshit Khaitan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35002044"
                        ],
                        "name": "Daniel Killebrew",
                        "slug": "Daniel-Killebrew",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Killebrew",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daniel Killebrew"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1406011741"
                        ],
                        "name": "A. Koch",
                        "slug": "A.-Koch",
                        "structuredName": {
                            "firstName": "Andy",
                            "lastName": "Koch",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Koch"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2116960562"
                        ],
                        "name": "Naveen Kumar",
                        "slug": "Naveen-Kumar",
                        "structuredName": {
                            "firstName": "Naveen",
                            "lastName": "Kumar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Naveen Kumar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40476752"
                        ],
                        "name": "Steve Lacy",
                        "slug": "Steve-Lacy",
                        "structuredName": {
                            "firstName": "Steve",
                            "lastName": "Lacy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Steve Lacy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2926266"
                        ],
                        "name": "J. Laudon",
                        "slug": "J.-Laudon",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Laudon",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Laudon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2057766961"
                        ],
                        "name": "James Law",
                        "slug": "James-Law",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Law",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "James Law"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1397916881"
                        ],
                        "name": "Diemthu Le",
                        "slug": "Diemthu-Le",
                        "structuredName": {
                            "firstName": "Diemthu",
                            "lastName": "Le",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Diemthu Le"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3362246"
                        ],
                        "name": "Chris Leary",
                        "slug": "Chris-Leary",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Leary",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chris Leary"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2144265117"
                        ],
                        "name": "Zhuyuan Liu",
                        "slug": "Zhuyuan-Liu",
                        "structuredName": {
                            "firstName": "Zhuyuan",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhuyuan Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49432518"
                        ],
                        "name": "Kyle A. Lucke",
                        "slug": "Kyle-A.-Lucke",
                        "structuredName": {
                            "firstName": "Kyle",
                            "lastName": "Lucke",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kyle A. Lucke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1397991868"
                        ],
                        "name": "Alan Lundin",
                        "slug": "Alan-Lundin",
                        "structuredName": {
                            "firstName": "Alan",
                            "lastName": "Lundin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alan Lundin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213046"
                        ],
                        "name": "G. MacKean",
                        "slug": "G.-MacKean",
                        "structuredName": {
                            "firstName": "Gordon",
                            "lastName": "MacKean",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. MacKean"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1973715"
                        ],
                        "name": "A. Maggiore",
                        "slug": "A.-Maggiore",
                        "structuredName": {
                            "firstName": "Adriana",
                            "lastName": "Maggiore",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Maggiore"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2105943261"
                        ],
                        "name": "Maire Mahony",
                        "slug": "Maire-Mahony",
                        "structuredName": {
                            "firstName": "Maire",
                            "lastName": "Mahony",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Maire Mahony"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50092571"
                        ],
                        "name": "K. Miller",
                        "slug": "K.-Miller",
                        "structuredName": {
                            "firstName": "Kieran",
                            "lastName": "Miller",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Miller"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1395811464"
                        ],
                        "name": "R. Nagarajan",
                        "slug": "R.-Nagarajan",
                        "structuredName": {
                            "firstName": "Rahul",
                            "lastName": "Nagarajan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Nagarajan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213032"
                        ],
                        "name": "Ravi Narayanaswami",
                        "slug": "Ravi-Narayanaswami",
                        "structuredName": {
                            "firstName": "Ravi",
                            "lastName": "Narayanaswami",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ravi Narayanaswami"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1393195759"
                        ],
                        "name": "Ray Ni",
                        "slug": "Ray-Ni",
                        "structuredName": {
                            "firstName": "Ray",
                            "lastName": "Ni",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ray Ni"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398213062"
                        ],
                        "name": "K. Nix",
                        "slug": "K.-Nix",
                        "structuredName": {
                            "firstName": "Kathy",
                            "lastName": "Nix",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Nix"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3222376"
                        ],
                        "name": "Thomas Norrie",
                        "slug": "Thomas-Norrie",
                        "structuredName": {
                            "firstName": "Thomas",
                            "lastName": "Norrie",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Thomas Norrie"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3175815"
                        ],
                        "name": "Mark Omernick",
                        "slug": "Mark-Omernick",
                        "structuredName": {
                            "firstName": "Mark",
                            "lastName": "Omernick",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mark Omernick"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398212990"
                        ],
                        "name": "Narayana Penukonda",
                        "slug": "Narayana-Penukonda",
                        "structuredName": {
                            "firstName": "Narayana",
                            "lastName": "Penukonda",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Narayana Penukonda"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064991162"
                        ],
                        "name": "Andy Phelps",
                        "slug": "Andy-Phelps",
                        "structuredName": {
                            "firstName": "Andy",
                            "lastName": "Phelps",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andy Phelps"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2116470453"
                        ],
                        "name": "Jonathan Ross",
                        "slug": "Jonathan-Ross",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ross",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ross"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2068076326"
                        ],
                        "name": "Matt Ross",
                        "slug": "Matt-Ross",
                        "structuredName": {
                            "firstName": "Matt",
                            "lastName": "Ross",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matt Ross"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144717532"
                        ],
                        "name": "Amir Salek",
                        "slug": "Amir-Salek",
                        "structuredName": {
                            "firstName": "Amir",
                            "lastName": "Salek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Amir Salek"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9364218"
                        ],
                        "name": "E. Samadiani",
                        "slug": "E.-Samadiani",
                        "structuredName": {
                            "firstName": "Emad",
                            "lastName": "Samadiani",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Samadiani"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1395804389"
                        ],
                        "name": "C. Severn",
                        "slug": "C.-Severn",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Severn",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Severn"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2473816"
                        ],
                        "name": "G. Sizikov",
                        "slug": "G.-Sizikov",
                        "structuredName": {
                            "firstName": "Gregory",
                            "lastName": "Sizikov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Sizikov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1398212969"
                        ],
                        "name": "Matthew Snelham",
                        "slug": "Matthew-Snelham",
                        "structuredName": {
                            "firstName": "Matthew",
                            "lastName": "Snelham",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matthew Snelham"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2144885096"
                        ],
                        "name": "Jed Souter",
                        "slug": "Jed-Souter",
                        "structuredName": {
                            "firstName": "Jed",
                            "lastName": "Souter",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jed Souter"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39566019"
                        ],
                        "name": "D. Steinberg",
                        "slug": "D.-Steinberg",
                        "structuredName": {
                            "firstName": "Dan",
                            "lastName": "Steinberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Steinberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1394189636"
                        ],
                        "name": "Andy Swing",
                        "slug": "Andy-Swing",
                        "structuredName": {
                            "firstName": "Andy",
                            "lastName": "Swing",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andy Swing"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1393173244"
                        ],
                        "name": "Mercedes Tan",
                        "slug": "Mercedes-Tan",
                        "structuredName": {
                            "firstName": "Mercedes",
                            "lastName": "Tan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mercedes Tan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48930610"
                        ],
                        "name": "G. Thorson",
                        "slug": "G.-Thorson",
                        "structuredName": {
                            "firstName": "Gregory",
                            "lastName": "Thorson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Thorson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064522407"
                        ],
                        "name": "Bo Tian",
                        "slug": "Bo-Tian",
                        "structuredName": {
                            "firstName": "Bo",
                            "lastName": "Tian",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bo Tian"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50042144"
                        ],
                        "name": "H. Toma",
                        "slug": "H.-Toma",
                        "structuredName": {
                            "firstName": "Horia",
                            "lastName": "Toma",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Toma"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1397585416"
                        ],
                        "name": "Erick Tuttle",
                        "slug": "Erick-Tuttle",
                        "structuredName": {
                            "firstName": "Erick",
                            "lastName": "Tuttle",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Erick Tuttle"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2053781980"
                        ],
                        "name": "Vijay Vasudevan",
                        "slug": "Vijay-Vasudevan",
                        "structuredName": {
                            "firstName": "Vijay",
                            "lastName": "Vasudevan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vijay Vasudevan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060269562"
                        ],
                        "name": "Richard Walter",
                        "slug": "Richard-Walter",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Walter",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Richard Walter"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2108459300"
                        ],
                        "name": "Walter Wang",
                        "slug": "Walter-Wang",
                        "structuredName": {
                            "firstName": "Walter",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Walter Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064779797"
                        ],
                        "name": "Eric Wilcox",
                        "slug": "Eric-Wilcox",
                        "structuredName": {
                            "firstName": "Eric",
                            "lastName": "Wilcox",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eric Wilcox"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1712426"
                        ],
                        "name": "D. Yoon",
                        "slug": "D.-Yoon",
                        "structuredName": {
                            "firstName": "Doe",
                            "lastName": "Yoon",
                            "middleNames": [
                                "Hyun"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Yoon"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 134,
                                "start": 127
                            }
                        ],
                        "text": "on all kinds of hardware ranging from CPUs [20, 23, 40, 46], GPUs [8, 10], FPGAs [15, 17, 45], to special-purpose accelerators [9, 26]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 4202768,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2dfeb5a90abc49ab2a80a492a01a4e2c8e92ec22",
            "isKey": false,
            "numCitedBy": 2951,
            "numCiting": 119,
            "paperAbstract": {
                "fragments": [],
                "text": "Many architects believe that major improvements in cost-energy-performance must now come from domain-specific hardware. This paper evaluates a custom ASIC-called a Tensor Processing Unit (TPU)-deployed in datacenters since 2015 that accelerates the inference phase of neural networks (NN). The heart of the TPU is a 65,536 8-bit MAC matrix multiply unit that offers a peak throughput of 92 TeraOps/second (TOPS) and a large (28 MiB) software-managed on-chip memory. The TPU's deterministic execution model is a better match to the 99th-percentile response-time requirement of our NN applications than are the time-varying optimizations of CPUs and GPUs that help average throughput more than guaranteed latency. The lack of such features helps explain why, despite having myriad MACs and a big memory, the TPU is relatively small and low power. We compare the TPU to a server-class Intel Haswell CPU and an Nvidia K80 GPU, which are contemporaries deployed in the same datacenters. Our workload, written in the high-level TensorFlow framework, uses production NN applications (MLPs, CNNs, and LSTMs) that represent 95% of our datacenters' NN inference demand. Despite low utilization for some applications, the TPU is on average about 15X\u201330X faster than its contemporary GPU or CPU, with TOPS/Watt about 30X\u201380X higher. Moreover, using the GPU's GDDR5 memory in the TPU would triple achieved TOPS and raise TOPS/Watt to nearly 70X the GPU and 200X the CPU."
            },
            "slug": "In-datacenter-performance-analysis-of-a-tensor-unit-Jouppi-Young",
            "title": {
                "fragments": [],
                "text": "In-datacenter performance analysis of a tensor processing unit"
            },
            "tldr": {
                "abstractSimilarityScore": 59,
                "text": "This paper evaluates a custom ASIC-called a Tensor Processing Unit (TPU)-deployed in datacenters since 2015 that accelerates the inference phase of neural networks (NN) and compares it to a server-class Intel Haswell CPU and an Nvidia K80 GPU, which are contemporaries deployed in the samedatacenters."
            },
            "venue": {
                "fragments": [],
                "text": "2017 ACM/IEEE 44th Annual International Symposium on Computer Architecture (ISCA)"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913774"
                        ],
                        "name": "Tianqi Chen",
                        "slug": "Tianqi-Chen",
                        "structuredName": {
                            "firstName": "Tianqi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianqi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47108160"
                        ],
                        "name": "T. Moreau",
                        "slug": "T.-Moreau",
                        "structuredName": {
                            "firstName": "Thierry",
                            "lastName": "Moreau",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Moreau"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1732910"
                        ],
                        "name": "Ziheng Jiang",
                        "slug": "Ziheng-Jiang",
                        "structuredName": {
                            "firstName": "Ziheng",
                            "lastName": "Jiang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ziheng Jiang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2149970173"
                        ],
                        "name": "Lianmin Zheng",
                        "slug": "Lianmin-Zheng",
                        "structuredName": {
                            "firstName": "Lianmin",
                            "lastName": "Zheng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lianmin Zheng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2621619"
                        ],
                        "name": "Eddie Q. Yan",
                        "slug": "Eddie-Q.-Yan",
                        "structuredName": {
                            "firstName": "Eddie",
                            "lastName": "Yan",
                            "middleNames": [
                                "Q."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eddie Q. Yan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3050154"
                        ],
                        "name": "Haichen Shen",
                        "slug": "Haichen-Shen",
                        "structuredName": {
                            "firstName": "Haichen",
                            "lastName": "Shen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Haichen Shen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37270394"
                        ],
                        "name": "M. Cowan",
                        "slug": "M.-Cowan",
                        "structuredName": {
                            "firstName": "Meghan",
                            "lastName": "Cowan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Cowan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2185540"
                        ],
                        "name": "Leyuan Wang",
                        "slug": "Leyuan-Wang",
                        "structuredName": {
                            "firstName": "Leyuan",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Leyuan Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49994783"
                        ],
                        "name": "Yuwei Hu",
                        "slug": "Yuwei-Hu",
                        "structuredName": {
                            "firstName": "Yuwei",
                            "lastName": "Hu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuwei Hu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717411"
                        ],
                        "name": "L. Ceze",
                        "slug": "L.-Ceze",
                        "structuredName": {
                            "firstName": "Luis",
                            "lastName": "Ceze",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Ceze"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1730156"
                        ],
                        "name": "Carlos Guestrin",
                        "slug": "Carlos-Guestrin",
                        "structuredName": {
                            "firstName": "Carlos",
                            "lastName": "Guestrin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Carlos Guestrin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144695691"
                        ],
                        "name": "A. Krishnamurthy",
                        "slug": "A.-Krishnamurthy",
                        "structuredName": {
                            "firstName": "Arvind",
                            "lastName": "Krishnamurthy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Krishnamurthy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 52939079,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "df013a17ab84d5403361da4538a04d574f58be83",
            "isKey": false,
            "numCitedBy": 713,
            "numCiting": 51,
            "paperAbstract": {
                "fragments": [],
                "text": "There is an increasing need to bring machine learning to a wide diversity of hardware devices. Current frameworks rely on vendor-specific operator libraries and optimize for a narrow range of server-class GPUs. Deploying workloads to new platforms -- such as mobile phones, embedded devices, and accelerators (e.g., FPGAs, ASICs) -- requires significant manual effort. We propose TVM, a compiler that exposes graph-level and operator-level optimizations to provide performance portability to deep learning workloads across diverse hardware back-ends. TVM solves optimization challenges specific to deep learning, such as high-level operator fusion, mapping to arbitrary hardware primitives, and memory latency hiding. It also automates optimization of low-level programs to hardware characteristics by employing a novel, learning-based cost modeling method for rapid exploration of code optimizations. Experimental results show that TVM delivers performance across hardware back-ends that are competitive with state-of-the-art, hand-tuned libraries for low-power CPU, mobile GPU, and server-class GPUs. We also demonstrate TVM's ability to target new accelerator back-ends, such as the FPGA-based generic deep learning accelerator. The system is open sourced and in production use inside several major companies."
            },
            "slug": "TVM:-An-Automated-End-to-End-Optimizing-Compiler-Chen-Moreau",
            "title": {
                "fragments": [],
                "text": "TVM: An Automated End-to-End Optimizing Compiler for Deep Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "TVM is a compiler that exposes graph-level and operator-level optimizations to provide performance portability to deep learning workloads across diverse hardware back-ends and automates optimization of low-level programs to hardware characteristics by employing a novel, learning-based cost modeling method for rapid exploration of code optimizations."
            },
            "venue": {
                "fragments": [],
                "text": "OSDI"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111573067"
                        ],
                        "name": "Chen Zhang",
                        "slug": "Chen-Zhang",
                        "structuredName": {
                            "firstName": "Chen",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chen Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50492686"
                        ],
                        "name": "Peng Li",
                        "slug": "Peng-Li",
                        "structuredName": {
                            "firstName": "Peng",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Peng Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1695860"
                        ],
                        "name": "Guangyu Sun",
                        "slug": "Guangyu-Sun",
                        "structuredName": {
                            "firstName": "Guangyu",
                            "lastName": "Sun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Guangyu Sun"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2238828"
                        ],
                        "name": "Yijin Guan",
                        "slug": "Yijin-Guan",
                        "structuredName": {
                            "firstName": "Yijin",
                            "lastName": "Guan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yijin Guan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37525788"
                        ],
                        "name": "Bingjun Xiao",
                        "slug": "Bingjun-Xiao",
                        "structuredName": {
                            "firstName": "Bingjun",
                            "lastName": "Xiao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bingjun Xiao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2259796"
                        ],
                        "name": "J. Cong",
                        "slug": "J.-Cong",
                        "structuredName": {
                            "firstName": "Jason",
                            "lastName": "Cong",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Cong"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 207220904,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "7c91eb0f9bbae8e2d3d007db73b8422b61ed1d68",
            "isKey": false,
            "numCitedBy": 1482,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": "Convolutional neural network (CNN) has been widely employed for image recognition because it can achieve high accuracy by emulating behavior of optic nerves in living creatures. Recently, rapid growth of modern applications based on deep learning algorithms has further improved research and implementations. Especially, various accelerators for deep CNN have been proposed based on FPGA platform because it has advantages of high performance, reconfigurability, and fast development round, etc. Although current FPGA accelerators have demonstrated better performance over generic processors, the accelerator design space has not been well exploited. One critical problem is that the computation throughput may not well match the memory bandwidth provided an FPGA platform. Consequently, existing approaches cannot achieve best performance due to under-utilization of either logic resource or memory bandwidth. At the same time, the increasing complexity and scalability of deep learning applications aggravate this problem. In order to overcome this problem, we propose an analytical design scheme using the roofline model. For any solution of a CNN design, we quantitatively analyze its computing throughput and required memory bandwidth using various optimization techniques, such as loop tiling and transformation. Then, with the help of rooine model, we can identify the solution with best performance and lowest FPGA resource requirement. As a case study, we implement a CNN accelerator on a VC707 FPGA board and compare it to previous approaches. Our implementation achieves a peak performance of 61.62 GFLOPS under 100MHz working frequency, which outperform previous approaches significantly."
            },
            "slug": "Optimizing-FPGA-based-Accelerator-Design-for-Deep-Zhang-Li",
            "title": {
                "fragments": [],
                "text": "Optimizing FPGA-based Accelerator Design for Deep Convolutional Neural Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "This work implements a CNN accelerator on a VC707 FPGA board and compares it to previous approaches, achieving a peak performance of 61.62 GFLOPS under 100MHz working frequency, which outperform previous approaches significantly."
            },
            "venue": {
                "fragments": [],
                "text": "FPGA"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064160"
                        ],
                        "name": "A. Krizhevsky",
                        "slug": "A.-Krizhevsky",
                        "structuredName": {
                            "firstName": "Alex",
                            "lastName": "Krizhevsky",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Krizhevsky"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1701686"
                        ],
                        "name": "Ilya Sutskever",
                        "slug": "Ilya-Sutskever",
                        "structuredName": {
                            "firstName": "Ilya",
                            "lastName": "Sutskever",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ilya Sutskever"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1695689"
                        ],
                        "name": "Geoffrey E. Hinton",
                        "slug": "Geoffrey-E.-Hinton",
                        "structuredName": {
                            "firstName": "Geoffrey",
                            "lastName": "Hinton",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Geoffrey E. Hinton"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 138,
                                "start": 122
                            }
                        ],
                        "text": "This algorithmworks well for CNNmodels with the simple structure like a list, in which each CONV only has one predecessor [28, 34, 37, 38]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 84
                            }
                        ],
                        "text": "Convolutional neural networks (CNNs) are commonly used in computer vision workloads [19, 21, 22, 28, 34, 38, 39]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 195908774,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "abd1c342495432171beb7ca8fd9551ef13cbd0ff",
            "isKey": false,
            "numCitedBy": 82046,
            "numCiting": 50,
            "paperAbstract": {
                "fragments": [],
                "text": "We trained a large, deep convolutional neural network to classify the 1.2 million high-resolution images in the ImageNet LSVRC-2010 contest into the 1000 different classes. On the test data, we achieved top-1 and top-5 error rates of 37.5% and 17.0%, respectively, which is considerably better than the previous state-of-the-art. The neural network, which has 60 million parameters and 650,000 neurons, consists of five convolutional layers, some of which are followed by max-pooling layers, and three fully connected layers with a final 1000-way softmax. To make training faster, we used non-saturating neurons and a very efficient GPU implementation of the convolution operation. To reduce overfitting in the fully connected layers we employed a recently developed regularization method called \"dropout\" that proved to be very effective. We also entered a variant of this model in the ILSVRC-2012 competition and achieved a winning top-5 test error rate of 15.3%, compared to 26.2% achieved by the second-best entry."
            },
            "slug": "ImageNet-classification-with-deep-convolutional-Krizhevsky-Sutskever",
            "title": {
                "fragments": [],
                "text": "ImageNet classification with deep convolutional neural networks"
            },
            "tldr": {
                "abstractSimilarityScore": 71,
                "text": "A large, deep convolutional neural network was trained to classify the 1.2 million high-resolution images in the ImageNet LSVRC-2010 contest into the 1000 different classes and employed a recently developed regularization method called \"dropout\" that proved to be very effective."
            },
            "venue": {
                "fragments": [],
                "text": "Commun. ACM"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2866919"
                        ],
                        "name": "Cody A. Coleman",
                        "slug": "Cody-A.-Coleman",
                        "structuredName": {
                            "firstName": "Cody",
                            "lastName": "Coleman",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Cody A. Coleman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "22252150"
                        ],
                        "name": "D. Narayanan",
                        "slug": "D.-Narayanan",
                        "structuredName": {
                            "firstName": "Deepak",
                            "lastName": "Narayanan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Narayanan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35342489"
                        ],
                        "name": "Daniel Kang",
                        "slug": "Daniel-Kang",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Kang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daniel Kang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1657530687"
                        ],
                        "name": "Tian Zhao",
                        "slug": "Tian-Zhao",
                        "structuredName": {
                            "firstName": "Tian",
                            "lastName": "Zhao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tian Zhao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1679327"
                        ],
                        "name": "Jian Zhang",
                        "slug": "Jian-Zhang",
                        "structuredName": {
                            "firstName": "Jian",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jian Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35121696"
                        ],
                        "name": "Luigi Nardi",
                        "slug": "Luigi-Nardi",
                        "structuredName": {
                            "firstName": "Luigi",
                            "lastName": "Nardi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Luigi Nardi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2740804"
                        ],
                        "name": "Peter D. Bailis",
                        "slug": "Peter-D.-Bailis",
                        "structuredName": {
                            "firstName": "Peter",
                            "lastName": "Bailis",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Peter D. Bailis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1746638"
                        ],
                        "name": "K. Olukotun",
                        "slug": "K.-Olukotun",
                        "structuredName": {
                            "firstName": "Kunle",
                            "lastName": "Olukotun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Olukotun"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2114485554"
                        ],
                        "name": "C. R\u00e9",
                        "slug": "C.-R\u00e9",
                        "structuredName": {
                            "firstName": "Christopher",
                            "lastName": "R\u00e9",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. R\u00e9"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143834867"
                        ],
                        "name": "M. Zaharia",
                        "slug": "M.-Zaharia",
                        "structuredName": {
                            "firstName": "Matei",
                            "lastName": "Zaharia",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Zaharia"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 108
                            }
                        ],
                        "text": "TensorFlow is known to have better performance on CPUs than another popular deep learning framework PyTorch [14]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 3758333,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b245959da6bdaa0b711341844aeaa473b7706453",
            "isKey": false,
            "numCitedBy": 240,
            "numCiting": 48,
            "paperAbstract": {
                "fragments": [],
                "text": "Despite considerable research on systems, algorithms and hardware to speed up deep learning workloads, there is no standard means of evaluating end-to-end deep learning performance. Existing benchmarks measure proxy metrics, such as time to process one minibatch of data, that do not indicate whether the system as a whole will produce a high-quality result. In this work, we introduce DAWNBench, a benchmark and competition focused on end-to-end training time to achieve a state-of-the-art accuracy level, as well as inference with that accuracy. We have seeded the benchmark with entries for image classification on CIFAR10 and ImageNet, and question answering on SQuAD, showing differences across models, software and hardware. We believe DAWNBench will provide a useful, reproducible means of evaluating the many tradeoffs in deep learning systems."
            },
            "slug": "DAWNBench-:-An-End-to-End-Deep-Learning-Benchmark-Coleman-Narayanan",
            "title": {
                "fragments": [],
                "text": "DAWNBench : An End-to-End Deep Learning Benchmark and Competition"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "DAWNBench is introduced, a benchmark and competition focused on end-to-end training time to achieve a state-of-the-art accuracy level, as well as inference with that accuracy, and will provide a useful, reproducible means of evaluating the many tradeoffs in deep learning systems."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2574060"
                        ],
                        "name": "Christian Szegedy",
                        "slug": "Christian-Szegedy",
                        "structuredName": {
                            "firstName": "Christian",
                            "lastName": "Szegedy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christian Szegedy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2157222093"
                        ],
                        "name": "Wei Liu",
                        "slug": "Wei-Liu",
                        "structuredName": {
                            "firstName": "Wei",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Wei Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39978391"
                        ],
                        "name": "Yangqing Jia",
                        "slug": "Yangqing-Jia",
                        "structuredName": {
                            "firstName": "Yangqing",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yangqing Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3142556"
                        ],
                        "name": "Pierre Sermanet",
                        "slug": "Pierre-Sermanet",
                        "structuredName": {
                            "firstName": "Pierre",
                            "lastName": "Sermanet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Pierre Sermanet"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144828948"
                        ],
                        "name": "Scott E. Reed",
                        "slug": "Scott-E.-Reed",
                        "structuredName": {
                            "firstName": "Scott",
                            "lastName": "Reed",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Scott E. Reed"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1838674"
                        ],
                        "name": "Dragomir Anguelov",
                        "slug": "Dragomir-Anguelov",
                        "structuredName": {
                            "firstName": "Dragomir",
                            "lastName": "Anguelov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dragomir Anguelov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1761978"
                        ],
                        "name": "D. Erhan",
                        "slug": "D.-Erhan",
                        "structuredName": {
                            "firstName": "D.",
                            "lastName": "Erhan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Erhan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2657155"
                        ],
                        "name": "Vincent Vanhoucke",
                        "slug": "Vincent-Vanhoucke",
                        "structuredName": {
                            "firstName": "Vincent",
                            "lastName": "Vanhoucke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vincent Vanhoucke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39863668"
                        ],
                        "name": "Andrew Rabinovich",
                        "slug": "Andrew-Rabinovich",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Rabinovich",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Rabinovich"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 138,
                                "start": 122
                            }
                        ],
                        "text": "This algorithmworks well for CNNmodels with the simple structure like a list, in which each CONV only has one predecessor [28, 34, 37, 38]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 84
                            }
                        ],
                        "text": "Convolutional neural networks (CNNs) are commonly used in computer vision workloads [19, 21, 22, 28, 34, 38, 39]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 206592484,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e15cf50aa89fee8535703b9f9512fca5bfc43327",
            "isKey": false,
            "numCitedBy": 29917,
            "numCiting": 278,
            "paperAbstract": {
                "fragments": [],
                "text": "We propose a deep convolutional neural network architecture codenamed Inception that achieves the new state of the art for classification and detection in the ImageNet Large-Scale Visual Recognition Challenge 2014 (ILSVRC14). The main hallmark of this architecture is the improved utilization of the computing resources inside the network. By a carefully crafted design, we increased the depth and width of the network while keeping the computational budget constant. To optimize quality, the architectural decisions were based on the Hebbian principle and the intuition of multi-scale processing. One particular incarnation used in our submission for ILSVRC14 is called GoogLeNet, a 22 layers deep network, the quality of which is assessed in the context of classification and detection."
            },
            "slug": "Going-deeper-with-convolutions-Szegedy-Liu",
            "title": {
                "fragments": [],
                "text": "Going deeper with convolutions"
            },
            "tldr": {
                "abstractSimilarityScore": 95,
                "text": "A deep convolutional neural network architecture codenamed Inception is proposed that achieves the new state of the art for classification and detection in the ImageNet Large-Scale Visual Recognition Challenge 2014 (ILSVRC14)."
            },
            "venue": {
                "fragments": [],
                "text": "2015 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39353098"
                        ],
                        "name": "Kaiming He",
                        "slug": "Kaiming-He",
                        "structuredName": {
                            "firstName": "Kaiming",
                            "lastName": "He",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kaiming He"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1771551"
                        ],
                        "name": "X. Zhang",
                        "slug": "X.-Zhang",
                        "structuredName": {
                            "firstName": "X.",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "X. Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3080683"
                        ],
                        "name": "Shaoqing Ren",
                        "slug": "Shaoqing-Ren",
                        "structuredName": {
                            "firstName": "Shaoqing",
                            "lastName": "Ren",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Shaoqing Ren"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [],
                        "name": "Jian Sun",
                        "slug": "Jian-Sun",
                        "structuredName": {
                            "firstName": "Jian",
                            "lastName": "Sun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jian Sun"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 89,
                                "start": 85
                            }
                        ],
                        "text": "We ran the model inference on a number of popularly used CNNmodels, including ResNet [19], VGG [34], DenseNet [22], and Inception-v3 [39]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 121,
                                "start": 117
                            }
                        ],
                        "text": "For networks with more complex structure like using Elementwise_Add to add two CONV outputs to feed to the next CONV [19], it is a little trickier since the schemes of a CONV may need to be saved for a future use (e."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 84
                            }
                        ],
                        "text": "Convolutional neural networks (CNNs) are commonly used in computer vision workloads [19, 21, 22, 28, 34, 38, 39]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 206594692,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
            "isKey": false,
            "numCitedBy": 97653,
            "numCiting": 61,
            "paperAbstract": {
                "fragments": [],
                "text": "Deeper neural networks are more difficult to train. We present a residual learning framework to ease the training of networks that are substantially deeper than those used previously. We explicitly reformulate the layers as learning residual functions with reference to the layer inputs, instead of learning unreferenced functions. We provide comprehensive empirical evidence showing that these residual networks are easier to optimize, and can gain accuracy from considerably increased depth. On the ImageNet dataset we evaluate residual nets with a depth of up to 152 layers - 8\u00d7 deeper than VGG nets [40] but still having lower complexity. An ensemble of these residual nets achieves 3.57% error on the ImageNet test set. This result won the 1st place on the ILSVRC 2015 classification task. We also present analysis on CIFAR-10 with 100 and 1000 layers. The depth of representations is of central importance for many visual recognition tasks. Solely due to our extremely deep representations, we obtain a 28% relative improvement on the COCO object detection dataset. Deep residual nets are foundations of our submissions to ILSVRC & COCO 2015 competitions1, where we also won the 1st places on the tasks of ImageNet detection, ImageNet localization, COCO detection, and COCO segmentation."
            },
            "slug": "Deep-Residual-Learning-for-Image-Recognition-He-Zhang",
            "title": {
                "fragments": [],
                "text": "Deep Residual Learning for Image Recognition"
            },
            "tldr": {
                "abstractSimilarityScore": 63,
                "text": "This work presents a residual learning framework to ease the training of networks that are substantially deeper than those used previously, and provides comprehensive empirical evidence showing that these residual networks are easier to optimize, and can gain accuracy from considerably increased depth."
            },
            "venue": {
                "fragments": [],
                "text": "2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109030402"
                        ],
                        "name": "Xie Chen",
                        "slug": "Xie-Chen",
                        "structuredName": {
                            "firstName": "Xie",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xie Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49416592"
                        ],
                        "name": "Yongqiang Wang",
                        "slug": "Yongqiang-Wang",
                        "structuredName": {
                            "firstName": "Yongqiang",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yongqiang Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "150344273"
                        ],
                        "name": "Xunying Liu",
                        "slug": "Xunying-Liu",
                        "structuredName": {
                            "firstName": "Xunying",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xunying Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1740397"
                        ],
                        "name": "M. Gales",
                        "slug": "M.-Gales",
                        "structuredName": {
                            "firstName": "Mark",
                            "lastName": "Gales",
                            "middleNames": [
                                "John",
                                "Francis"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Gales"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1716393"
                        ],
                        "name": "P. Woodland",
                        "slug": "P.-Woodland",
                        "structuredName": {
                            "firstName": "Philip",
                            "lastName": "Woodland",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Woodland"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 51,
                                "start": 34
                            }
                        ],
                        "text": "As a result, we choose reg_n from [32, 16, 8, 4, 2]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 31,
                                "start": 27
                            }
                        ],
                        "text": "Although accelerators like GPUs and TPUs demonstrate their outstanding performance on the deep learning workloads, in practice, there is still a lot of deep learning computation, especially model inference, taking place on the general-purpose CPU due to its high availability."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 66,
                                "start": 46
                            }
                        ],
                        "text": "For example, if the number of channels is 64, [32, 16, 8, 4, 2, 1] are listed as the candidates."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 172,
                                "start": 168
                            }
                        ],
                        "text": "There are also works tailored for inference to address the inference-specific requirement such as low latency and small binary size on different hardware targets (e.g. GPUs [31], ASICs [17])."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 73,
                                "start": 66
                            }
                        ],
                        "text": "on all kinds of hardware ranging from CPUs [20, 23, 40, 46], GPUs [8, 10], FPGAs [15, 17, 45], to special-purpose accelerators [9, 26]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 283,
                                "start": 279
                            }
                        ],
                        "text": "As deep learning demonstrates more and more power in the real-world applications, there is a significant amount of effort being made to accelerate the deep learning workloads 3KMP_AFFINITY=granularity=fine,compact,1,0\non all kinds of hardware ranging from CPUs [20, 23, 40, 46], GPUs [8, 10], FPGAs [15, 17, 45], to special-purpose accelerators [9, 26]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 16227628,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0cea6b034ee949d10604ba163270b699e711ded8",
            "isKey": true,
            "numCitedBy": 64,
            "numCiting": 35,
            "paperAbstract": {
                "fragments": [],
                "text": "Copyright \u00a9 2014 ISCA. Recurrent neural network language models (RNNLMs) are becoming increasingly popular for a range of applications including speech recognition. However, an important issue that limits the quantity of data, and hence their possible application areas, is the computational cost in training. A standard approach to handle this problem is to use class-based outputs, allowing systems to be trained on CPUs. This paper describes an alternative approach that allows RNNLMs to be efficiently trained on GPUs. This enables larger quantities of data to be used, and networks with an unclustered, full output layer to be trained. To improve efficiency on GPUs, multiple sentences are \"spliced\" together for each mini-batch or \"bunch\" in training. On a large vocabulary conversational telephone speech recognition task, the training time was reduced by a factor of 27 over the standard CPU-based RNNLM toolkit. The use of an unclustered, full output layer also improves perplexity and recognition performance over class-based RNNLMs."
            },
            "slug": "Efficient-GPU-based-training-of-recurrent-neural-Chen-Wang",
            "title": {
                "fragments": [],
                "text": "Efficient GPU-based training of recurrent neural network language models using spliced sentence bunch"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "This paper describes an alternative approach that allows RNNLMs to be efficiently trained on GPUs, which enables larger quantities of data to be used, and networks with an unclustered, full output layer to be trained."
            },
            "venue": {
                "fragments": [],
                "text": "INTERSPEECH"
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143983679"
                        ],
                        "name": "Gao Huang",
                        "slug": "Gao-Huang",
                        "structuredName": {
                            "firstName": "Gao",
                            "lastName": "Huang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Gao Huang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109168016"
                        ],
                        "name": "Zhuang Liu",
                        "slug": "Zhuang-Liu",
                        "structuredName": {
                            "firstName": "Zhuang",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhuang Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "7446832"
                        ],
                        "name": "Kilian Q. Weinberger",
                        "slug": "Kilian-Q.-Weinberger",
                        "structuredName": {
                            "firstName": "Kilian",
                            "lastName": "Weinberger",
                            "middleNames": [
                                "Q."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kilian Q. Weinberger"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 114,
                                "start": 110
                            }
                        ],
                        "text": "We ran the model inference on a number of popularly used CNNmodels, including ResNet [19], VGG [34], DenseNet [22], and Inception-v3 [39]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 86,
                                "start": 78
                            }
                        ],
                        "text": "ResNet-50 (and its variants) gains more\nTop-1/Top-5 accuracy ResNet-50 VGG-19 DenseNet-201 Inception-v3\nspeedup from global search because the network structure is more complicated, hence leaving more optimization room."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 84
                            }
                        ],
                        "text": "Convolutional neural networks (CNNs) are commonly used in computer vision workloads [19, 21, 22, 28, 34, 38, 39]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 9433631,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5694e46284460a648fe29117cbc55f6c9be3fa3c",
            "isKey": false,
            "numCitedBy": 19204,
            "numCiting": 58,
            "paperAbstract": {
                "fragments": [],
                "text": "Recent work has shown that convolutional networks can be substantially deeper, more accurate, and efficient to train if they contain shorter connections between layers close to the input and those close to the output. In this paper, we embrace this observation and introduce the Dense Convolutional Network (DenseNet), which connects each layer to every other layer in a feed-forward fashion. Whereas traditional convolutional networks with L layers have L connections&#x2014;one between each layer and its subsequent layer&#x2014;our network has L(L+1)/2 direct connections. For each layer, the feature-maps of all preceding layers are used as inputs, and its own feature-maps are used as inputs into all subsequent layers. DenseNets have several compelling advantages: they alleviate the vanishing-gradient problem, strengthen feature propagation, encourage feature reuse, and substantially reduce the number of parameters. We evaluate our proposed architecture on four highly competitive object recognition benchmark tasks (CIFAR-10, CIFAR-100, SVHN, and ImageNet). DenseNets obtain significant improvements over the state-of-the-art on most of them, whilst requiring less memory and computation to achieve high performance. Code and pre-trained models are available at https://github.com/liuzhuang13/DenseNet."
            },
            "slug": "Densely-Connected-Convolutional-Networks-Huang-Liu",
            "title": {
                "fragments": [],
                "text": "Densely Connected Convolutional Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "The Dense Convolutional Network (DenseNet), which connects each layer to every other layer in a feed-forward fashion, and has several compelling advantages: they alleviate the vanishing-gradient problem, strengthen feature propagation, encourage feature reuse, and substantially reduce the number of parameters."
            },
            "venue": {
                "fragments": [],
                "text": "2017 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3003738"
                        ],
                        "name": "Sharan Chetlur",
                        "slug": "Sharan-Chetlur",
                        "structuredName": {
                            "firstName": "Sharan",
                            "lastName": "Chetlur",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sharan Chetlur"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2266717"
                        ],
                        "name": "Cliff Woolley",
                        "slug": "Cliff-Woolley",
                        "structuredName": {
                            "firstName": "Cliff",
                            "lastName": "Woolley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Cliff Woolley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2101730"
                        ],
                        "name": "Philippe Vandermersch",
                        "slug": "Philippe-Vandermersch",
                        "structuredName": {
                            "firstName": "Philippe",
                            "lastName": "Vandermersch",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Philippe Vandermersch"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145611200"
                        ],
                        "name": "Jonathan M. Cohen",
                        "slug": "Jonathan-M.-Cohen",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Cohen",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan M. Cohen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2066786849"
                        ],
                        "name": "J. Tran",
                        "slug": "J.-Tran",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Tran",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Tran"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2301680"
                        ],
                        "name": "Bryan Catanzaro",
                        "slug": "Bryan-Catanzaro",
                        "structuredName": {
                            "firstName": "Bryan",
                            "lastName": "Catanzaro",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bryan Catanzaro"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1782282"
                        ],
                        "name": "Evan Shelhamer",
                        "slug": "Evan-Shelhamer",
                        "structuredName": {
                            "firstName": "Evan",
                            "lastName": "Shelhamer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Evan Shelhamer"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 172,
                                "start": 168
                            }
                        ],
                        "text": "There are also works tailored for inference to address the inference-specific requirement such as low latency and small binary size on different hardware targets (e.g. GPUs [31], ASICs [17])."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 73,
                                "start": 66
                            }
                        ],
                        "text": "on all kinds of hardware ranging from CPUs [20, 23, 40, 46], GPUs [8, 10], FPGAs [15, 17, 45], to special-purpose accelerators [9, 26]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 283,
                                "start": 279
                            }
                        ],
                        "text": "As deep learning demonstrates more and more power in the real-world applications, there is a significant amount of effort being made to accelerate the deep learning workloads 3KMP_AFFINITY=granularity=fine,compact,1,0\non all kinds of hardware ranging from CPUs [20, 23, 40, 46], GPUs [8, 10], FPGAs [15, 17, 45], to special-purpose accelerators [9, 26]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 31,
                                "start": 27
                            }
                        ],
                        "text": "Although accelerators like GPUs and TPUs demonstrate their outstanding performance on the deep learning workloads, in practice, there is still a lot of deep learning computation, especially model inference, taking place on the general-purpose CPU due to its high availability."
                    },
                    "intents": []
                }
            ],
            "corpusId": 12330432,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "31c36d445367ba204244bb74893c5654e31c3869",
            "isKey": true,
            "numCitedBy": 1419,
            "numCiting": 25,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a library that provides optimized implementations for deep learning primitives. Deep learning workloads are computationally intensive, and optimizing the kernels of deep learning workloads is difficult and time-consuming. As parallel architectures evolve, kernels must be reoptimized for new processors, which makes maintaining codebases difficult over time. Similar issues have long been addressed in the HPC community by libraries such as the Basic Linear Algebra Subroutines (BLAS) [2]. However, there is no analogous library for deep learning. Without such a library, researchers implementing deep learning workloads on parallel processors must create and optimize their own implementations of the main computational kernels, and this work must be repeated as new parallel processors emerge. To address this problem, we have created a library similar in intent to BLAS, with optimized routines for deep learning workloads. Our implementation contains routines for GPUs, and similarly to the BLAS library, could be implemented for other platforms. The library is easy to integrate into existing frameworks, and provides optimized performance and memory usage. For example, integrating cuDNN into Caffe, a popular framework for convolutional networks, improves performance by 36% on a standard model while also reducing memory consumption."
            },
            "slug": "cuDNN:-Efficient-Primitives-for-Deep-Learning-Chetlur-Woolley",
            "title": {
                "fragments": [],
                "text": "cuDNN: Efficient Primitives for Deep Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 49,
                "text": "A library similar in intent to BLAS, with optimized routines for deep learning workloads, that contains routines for GPUs, and similarly to the BLAS library, could be implemented for other platforms."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2014
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3134596"
                        ],
                        "name": "A. Zlateski",
                        "slug": "A.-Zlateski",
                        "structuredName": {
                            "firstName": "Aleksandar",
                            "lastName": "Zlateski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Zlateski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2072782593"
                        ],
                        "name": "Zhen Jia",
                        "slug": "Zhen-Jia",
                        "structuredName": {
                            "firstName": "Zhen",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhen Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2158258070"
                        ],
                        "name": "Kai Li",
                        "slug": "Kai-Li",
                        "structuredName": {
                            "firstName": "Kai",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kai Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 38,
                                "start": 34
                            }
                        ],
                        "text": "CONVs via Winograd [7, 27] or FFT [48]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 52339177,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "133a518fda996d3a4e07d8b2edd547e949a672da",
            "isKey": false,
            "numCitedBy": 10,
            "numCiting": 28,
            "paperAbstract": {
                "fragments": [],
                "text": "Winograd-based convolution has quickly gained traction as a preferred approach to implement convolutional neural networks (ConvNet) on various hardware platforms because it requires fewer floating point operations than FFT-based or direct convolutions. \nThis paper compares three highly optimized implementations (regular FFT--, Gauss--FFT--, and Winograd--based convolutions) on modern multi-- and many--core CPUs. Although all three implementations employed the same optimizations for modern CPUs, our experimental results with two popular ConvNets (VGG and AlexNet) show that the FFT--based implementations generally outperform the Winograd--based approach, contrary to the popular belief. \nTo understand the results, we use a Roofline performance model to analyze the three implementations in detail, by looking at each of their computation phases and by considering not only the number of floating point operations, but also the memory bandwidth and the cache sizes. The performance analysis explains why, and under what conditions, the FFT--based implementations outperform the Winograd--based one, on modern CPUs."
            },
            "slug": "FFT-Convolutions-are-Faster-than-Winograd-on-Modern-Zlateski-Jia",
            "title": {
                "fragments": [],
                "text": "FFT Convolutions are Faster than Winograd on Modern CPUs, Here is Why"
            },
            "tldr": {
                "abstractSimilarityScore": 50,
                "text": "A Roofline performance model is used to analyze the three highly optimized implementations of convolutional neural networks on modern multi-- and many--core CPUs and explains why, and under what conditions, the FFT--based implementations outperform the Winograd--based one, on modern CPUs."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34838386"
                        ],
                        "name": "K. Simonyan",
                        "slug": "K.-Simonyan",
                        "structuredName": {
                            "firstName": "Karen",
                            "lastName": "Simonyan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Simonyan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1688869"
                        ],
                        "name": "Andrew Zisserman",
                        "slug": "Andrew-Zisserman",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Zisserman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Zisserman"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 14124313,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "eb42cf88027de515750f230b23b1a057dc782108",
            "isKey": false,
            "numCitedBy": 63195,
            "numCiting": 57,
            "paperAbstract": {
                "fragments": [],
                "text": "In this work we investigate the effect of the convolutional network depth on its accuracy in the large-scale image recognition setting. Our main contribution is a thorough evaluation of networks of increasing depth using an architecture with very small (3x3) convolution filters, which shows that a significant improvement on the prior-art configurations can be achieved by pushing the depth to 16-19 weight layers. These findings were the basis of our ImageNet Challenge 2014 submission, where our team secured the first and the second places in the localisation and classification tracks respectively. We also show that our representations generalise well to other datasets, where they achieve state-of-the-art results. We have made our two best-performing ConvNet models publicly available to facilitate further research on the use of deep visual representations in computer vision."
            },
            "slug": "Very-Deep-Convolutional-Networks-for-Large-Scale-Simonyan-Zisserman",
            "title": {
                "fragments": [],
                "text": "Very Deep Convolutional Networks for Large-Scale Image Recognition"
            },
            "tldr": {
                "abstractSimilarityScore": 73,
                "text": "This work investigates the effect of the convolutional network depth on its accuracy in the large-scale image recognition setting using an architecture with very small convolution filters, which shows that a significant improvement on the prior-art configurations can be achieved by pushing the depth to 16-19 weight layers."
            },
            "venue": {
                "fragments": [],
                "text": "ICLR"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2057642721"
                        ],
                        "name": "Mart\u00edn Abadi",
                        "slug": "Mart\u00edn-Abadi",
                        "structuredName": {
                            "firstName": "Mart\u00edn",
                            "lastName": "Abadi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mart\u00edn Abadi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144758007"
                        ],
                        "name": "P. Barham",
                        "slug": "P.-Barham",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Barham",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Barham"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2108406634"
                        ],
                        "name": "Jianmin Chen",
                        "slug": "Jianmin-Chen",
                        "structuredName": {
                            "firstName": "Jianmin",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jianmin Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2545358"
                        ],
                        "name": "Z. Chen",
                        "slug": "Z.-Chen",
                        "structuredName": {
                            "firstName": "Z.",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Z. Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "36347083"
                        ],
                        "name": "Andy Davis",
                        "slug": "Andy-Davis",
                        "structuredName": {
                            "firstName": "Andy",
                            "lastName": "Davis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andy Davis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49959210"
                        ],
                        "name": "J. Dean",
                        "slug": "J.-Dean",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Dean",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dean"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145139947"
                        ],
                        "name": "Matthieu Devin",
                        "slug": "Matthieu-Devin",
                        "structuredName": {
                            "firstName": "Matthieu",
                            "lastName": "Devin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matthieu Devin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1780892"
                        ],
                        "name": "S. Ghemawat",
                        "slug": "S.-Ghemawat",
                        "structuredName": {
                            "firstName": "Sanjay",
                            "lastName": "Ghemawat",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Ghemawat"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060655766"
                        ],
                        "name": "Geoffrey Irving",
                        "slug": "Geoffrey-Irving",
                        "structuredName": {
                            "firstName": "Geoffrey",
                            "lastName": "Irving",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Geoffrey Irving"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2090818"
                        ],
                        "name": "M. Isard",
                        "slug": "M.-Isard",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Isard",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Isard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1942300"
                        ],
                        "name": "M. Kudlur",
                        "slug": "M.-Kudlur",
                        "structuredName": {
                            "firstName": "Manjunath",
                            "lastName": "Kudlur",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Kudlur"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3369421"
                        ],
                        "name": "J. Levenberg",
                        "slug": "J.-Levenberg",
                        "structuredName": {
                            "firstName": "Josh",
                            "lastName": "Levenberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Levenberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3089272"
                        ],
                        "name": "R. Monga",
                        "slug": "R.-Monga",
                        "structuredName": {
                            "firstName": "Rajat",
                            "lastName": "Monga",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Monga"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144375552"
                        ],
                        "name": "Sherry Moore",
                        "slug": "Sherry-Moore",
                        "structuredName": {
                            "firstName": "Sherry",
                            "lastName": "Moore",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sherry Moore"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "20154699"
                        ],
                        "name": "D. Murray",
                        "slug": "D.-Murray",
                        "structuredName": {
                            "firstName": "Derek",
                            "lastName": "Murray",
                            "middleNames": [
                                "Gordon"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Murray"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32163737"
                        ],
                        "name": "Benoit Steiner",
                        "slug": "Benoit-Steiner",
                        "structuredName": {
                            "firstName": "Benoit",
                            "lastName": "Steiner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Benoit Steiner"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2080690"
                        ],
                        "name": "P. Tucker",
                        "slug": "P.-Tucker",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Tucker",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Tucker"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2053781980"
                        ],
                        "name": "Vijay Vasudevan",
                        "slug": "Vijay-Vasudevan",
                        "structuredName": {
                            "firstName": "Vijay",
                            "lastName": "Vasudevan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vijay Vasudevan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47941411"
                        ],
                        "name": "P. Warden",
                        "slug": "P.-Warden",
                        "structuredName": {
                            "firstName": "Pete",
                            "lastName": "Warden",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Warden"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35078078"
                        ],
                        "name": "M. Wicke",
                        "slug": "M.-Wicke",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Wicke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Wicke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2117163698"
                        ],
                        "name": "Yuan Yu",
                        "slug": "Yuan-Yu",
                        "structuredName": {
                            "firstName": "Yuan",
                            "lastName": "Yu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuan Yu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2144533795"
                        ],
                        "name": "Xiaoqiang Zhang",
                        "slug": "Xiaoqiang-Zhang",
                        "structuredName": {
                            "firstName": "Xiaoqiang",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xiaoqiang Zhang"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 66,
                                "start": 46
                            }
                        ],
                        "text": "For example, if the number of channels is 64, [32, 16, 8, 4, 2, 1] are listed as the candidates."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 27,
                                "start": 24
                            }
                        ],
                        "text": "For example, TensorFlow [4] uses NHWC, Intel MKL-DNN [23] uses NCHW16c and NCHW8c for AVX-512 and AVX2 respectively."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 51,
                                "start": 34
                            }
                        ],
                        "text": "As a result, we choose reg_n from [32, 16, 8, 4, 2]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 27,
                                "start": 24
                            }
                        ],
                        "text": "For example, TensorFlow [4] originally used the Eigen library [3] to handle computation on CPUs."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 6287870,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "46200b99c40e8586c8a0f588488ab6414119fb28",
            "isKey": true,
            "numCitedBy": 12805,
            "numCiting": 111,
            "paperAbstract": {
                "fragments": [],
                "text": "TensorFlow is a machine learning system that operates at large scale and in heterogeneous environments. Tensor-Flow uses dataflow graphs to represent computation, shared state, and the operations that mutate that state. It maps the nodes of a dataflow graph across many machines in a cluster, and within a machine across multiple computational devices, including multicore CPUs, general-purpose GPUs, and custom-designed ASICs known as Tensor Processing Units (TPUs). This architecture gives flexibility to the application developer: whereas in previous \"parameter server\" designs the management of shared state is built into the system, TensorFlow enables developers to experiment with novel optimizations and training algorithms. TensorFlow supports a variety of applications, with a focus on training and inference on deep neural networks. Several Google services use TensorFlow in production, we have released it as an open-source project, and it has become widely used for machine learning research. In this paper, we describe the TensorFlow dataflow model and demonstrate the compelling performance that TensorFlow achieves for several real-world applications."
            },
            "slug": "TensorFlow:-A-system-for-large-scale-machine-Abadi-Barham",
            "title": {
                "fragments": [],
                "text": "TensorFlow: A system for large-scale machine learning"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "The TensorFlow dataflow model is described and the compelling performance that Tensor Flow achieves for several real-world applications is demonstrated."
            },
            "venue": {
                "fragments": [],
                "text": "OSDI"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2256269"
                        ],
                        "name": "C. Farabet",
                        "slug": "C.-Farabet",
                        "structuredName": {
                            "firstName": "Cl\u00e9ment",
                            "lastName": "Farabet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Farabet"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35130633"
                        ],
                        "name": "Cyril Poulet",
                        "slug": "Cyril-Poulet",
                        "structuredName": {
                            "firstName": "Cyril",
                            "lastName": "Poulet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Cyril Poulet"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2183554"
                        ],
                        "name": "Jefferson Y. Han",
                        "slug": "Jefferson-Y.-Han",
                        "structuredName": {
                            "firstName": "Jefferson",
                            "lastName": "Han",
                            "middleNames": [
                                "Y."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jefferson Y. Han"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1688882"
                        ],
                        "name": "Yann LeCun",
                        "slug": "Yann-LeCun",
                        "structuredName": {
                            "firstName": "Yann",
                            "lastName": "LeCun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yann LeCun"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 93,
                                "start": 81
                            }
                        ],
                        "text": "on all kinds of hardware ranging from CPUs [20, 23, 40, 46], GPUs [8, 10], FPGAs [15, 17, 45], to special-purpose accelerators [9, 26]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 298,
                                "start": 293
                            }
                        ],
                        "text": "As deep learning demonstrates more and more power in the real-world applications, there is a significant amount of effort being made to accelerate the deep learning workloads 3KMP_AFFINITY=granularity=fine,compact,1,0\non all kinds of hardware ranging from CPUs [20, 23, 40, 46], GPUs [8, 10], FPGAs [15, 17, 45], to special-purpose accelerators [9, 26]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 5339694,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "07956c7cf9bf4267b86d52aa4143c17a4aa5d0d6",
            "isKey": false,
            "numCitedBy": 328,
            "numCiting": 22,
            "paperAbstract": {
                "fragments": [],
                "text": "Convolutional Networks (ConvNets) are biologicallyinspired hierarchical architectures that can be trained to perform a variety of detection, recognition and segmentation tasks. ConvNets have a feed-forward architecture consisting of multiple linear convolution filters interspersed with pointwise non-linear squashing functions. This paper presents an efficient implementation of ConvNets on a low-end DSPoriented Field Programmable Gate Array (FPGA). The implementation exploits the inherent parallelism of ConvNets and takes full advantage of multiple hardware multiplyaccumulate units on the FPGA. The entire system uses a single FPGA with an external memory module, and no extra parts. A network compiler software was implemented, which takes a description of a trained ConvNet and compiles it into a sequence of instructions for the ConvNet Processor (CNP). A ConvNet face detection system was implemented and tested. Face detection on a 512 \u00d7 384 frame takes 100ms (10 frames per second), which corresponds to an average performance of 3.4\u00d7109 connections per second for this 340 million connection network. The design can be used for low-power, lightweight embedded vision systems for micro-UAVs and other small robots."
            },
            "slug": "CNP:-An-FPGA-based-processor-for-Convolutional-Farabet-Poulet",
            "title": {
                "fragments": [],
                "text": "CNP: An FPGA-based processor for Convolutional Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "The implementation exploits the inherent parallelism of ConvNets and takes full advantage of multiple hardware multiplyaccumulate units on the FPGA and can be used for low-power, lightweight embedded vision systems for micro-UAVs and other small robots."
            },
            "venue": {
                "fragments": [],
                "text": "2009 International Conference on Field Programmable Logic and Applications"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2574060"
                        ],
                        "name": "Christian Szegedy",
                        "slug": "Christian-Szegedy",
                        "structuredName": {
                            "firstName": "Christian",
                            "lastName": "Szegedy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christian Szegedy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2054165706"
                        ],
                        "name": "S. Ioffe",
                        "slug": "S.-Ioffe",
                        "structuredName": {
                            "firstName": "Sergey",
                            "lastName": "Ioffe",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Ioffe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2657155"
                        ],
                        "name": "Vincent Vanhoucke",
                        "slug": "Vincent-Vanhoucke",
                        "structuredName": {
                            "firstName": "Vincent",
                            "lastName": "Vanhoucke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vincent Vanhoucke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "122113652"
                        ],
                        "name": "Alexander A. Alemi",
                        "slug": "Alexander-A.-Alemi",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Alemi",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alexander A. Alemi"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 138,
                                "start": 122
                            }
                        ],
                        "text": "This algorithmworks well for CNNmodels with the simple structure like a list, in which each CONV only has one predecessor [28, 34, 37, 38]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 1023605,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b5c26ab8767d046cb6e32d959fdf726aee89bb62",
            "isKey": false,
            "numCitedBy": 8225,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "\n \n Very deep convolutional networks have been central to the largest advances in image recognition performance in recent years. One example is the Inception architecture that has been shown to achieve very good performance at relatively low computational cost. Recently, the introduction of residual connections in conjunction with a more traditional architecture has yielded state-of-the-art performance in the 2015 ILSVRC challenge; its performance was similar to the latest generation Inception-v3 network. This raises the question: Are there any benefits to combining Inception architectures with residual connections? Here we give clear empirical evidence that training with residual connections accelerates the training of Inception networks significantly. There is also some evidence of residual Inception networks outperforming similarly expensive Inception networks without residual connections by a thin margin. We also present several new streamlined architectures for both residual and non-residual Inception networks. These variations improve the single-frame recognition performance on the ILSVRC 2012 classification task significantly. We further demonstrate how proper activation scaling stabilizes the training of very wide residual Inception networks. With an ensemble of three residual and one Inception-v4 networks, we achieve 3.08% top-5 error on the test set of the ImageNet classification (CLS) challenge.\n \n"
            },
            "slug": "Inception-v4,-Inception-ResNet-and-the-Impact-of-on-Szegedy-Ioffe",
            "title": {
                "fragments": [],
                "text": "Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "Clear empirical evidence that training with residual connections accelerates the training of Inception networks significantly is given and several new streamlined architectures for both residual and non-residual Inception Networks are presented."
            },
            "venue": {
                "fragments": [],
                "text": "AAAI"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1913774"
                        ],
                        "name": "Tianqi Chen",
                        "slug": "Tianqi-Chen",
                        "structuredName": {
                            "firstName": "Tianqi",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianqi Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2124778071"
                        ],
                        "name": "Mu Li",
                        "slug": "Mu-Li",
                        "structuredName": {
                            "firstName": "Mu",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mu Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110420880"
                        ],
                        "name": "Yutian Li",
                        "slug": "Yutian-Li",
                        "structuredName": {
                            "firstName": "Yutian",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yutian Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1491081747"
                        ],
                        "name": "Min Lin",
                        "slug": "Min-Lin",
                        "structuredName": {
                            "firstName": "Min",
                            "lastName": "Lin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Min Lin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48246959"
                        ],
                        "name": "Naiyan Wang",
                        "slug": "Naiyan-Wang",
                        "structuredName": {
                            "firstName": "Naiyan",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Naiyan Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1508337194"
                        ],
                        "name": "Minjie Wang",
                        "slug": "Minjie-Wang",
                        "structuredName": {
                            "firstName": "Minjie",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Minjie Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39102205"
                        ],
                        "name": "Tianjun Xiao",
                        "slug": "Tianjun-Xiao",
                        "structuredName": {
                            "firstName": "Tianjun",
                            "lastName": "Xiao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tianjun Xiao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2113742783"
                        ],
                        "name": "Bing Xu",
                        "slug": "Bing-Xu",
                        "structuredName": {
                            "firstName": "Bing",
                            "lastName": "Xu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bing Xu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "151505981"
                        ],
                        "name": "Chiyuan Zhang",
                        "slug": "Chiyuan-Zhang",
                        "structuredName": {
                            "firstName": "Chiyuan",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chiyuan Zhang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38448016"
                        ],
                        "name": "Zheng Zhang",
                        "slug": "Zheng-Zhang",
                        "structuredName": {
                            "firstName": "Zheng",
                            "lastName": "Zhang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zheng Zhang"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 189,
                                "start": 186
                            }
                        ],
                        "text": "On a 18-core Intel Platinum 8000-series (formerly code named Skylake) processor, the executable binaries generated by our approach outperform the best framework-specific solution (MXNet [6]) by 1."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 1507815,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "62df84d6a4d26f95e4714796c2337c9848cc13b5",
            "isKey": false,
            "numCitedBy": 1891,
            "numCiting": 16,
            "paperAbstract": {
                "fragments": [],
                "text": "MXNet is a multi-language machine learning (ML) library to ease the development of ML algorithms, especially for deep neural networks. Embedded in the host language, it blends declarative symbolic expression with imperative tensor computation. It offers auto differentiation to derive gradients. MXNet is computation and memory efficient and runs on various heterogeneous systems, ranging from mobile devices to distributed GPU clusters. \nThis paper describes both the API design and the system implementation of MXNet, and explains how embedding of both symbolic expression and tensor operation is handled in a unified fashion. Our preliminary experiments reveal promising results on large scale deep neural network applications using multiple GPU machines."
            },
            "slug": "MXNet:-A-Flexible-and-Efficient-Machine-Learning-Chen-Li",
            "title": {
                "fragments": [],
                "text": "MXNet: A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "The API design and the system implementation of MXNet are described, and it is explained how embedding of both symbolic expression and tensor operation is handled in a unified fashion."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2072782550"
                        ],
                        "name": "Zhihao Jia",
                        "slug": "Zhihao-Jia",
                        "structuredName": {
                            "firstName": "Zhihao",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhihao Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110226192"
                        ],
                        "name": "James J. Thomas",
                        "slug": "James-J.-Thomas",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Thomas",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "James J. Thomas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2155642"
                        ],
                        "name": "Todd Warszawski",
                        "slug": "Todd-Warszawski",
                        "structuredName": {
                            "firstName": "Todd",
                            "lastName": "Warszawski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Todd Warszawski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2092402029"
                        ],
                        "name": "Mingyu Gao",
                        "slug": "Mingyu-Gao",
                        "structuredName": {
                            "firstName": "Mingyu",
                            "lastName": "Gao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mingyu Gao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143834867"
                        ],
                        "name": "M. Zaharia",
                        "slug": "M.-Zaharia",
                        "structuredName": {
                            "firstName": "Matei",
                            "lastName": "Zaharia",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Zaharia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144653825"
                        ],
                        "name": "A. Aiken",
                        "slug": "A.-Aiken",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Aiken",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Aiken"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "single operations, while ours extends the scope to the entire CNN model to search for optimal solutions globally. Recently, we also observed other work optimizing the DNN workloads at the graph level [30]. This work attempts to obtain better global performance using relaxed graph substitutions which may harm the local performance within a few operations. Its non-greedy search idea is conceptually simi"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 102345141,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a226e7dc70c9902fa57b987f8fee78b04052c954",
            "isKey": false,
            "numCitedBy": 39,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": "Existing deep learning frameworks optimize the computation graph of a DNN model by performing greedy rule-based graph transformations, which generally only consider transformations that strictly improve runtime performance. We propose relaxed graph substitutions that enable the exploration of complex graph optimizations by relaxing the strict performance improvement constraint, which greatly increases the space of semantically equivalent computation graphs that can be discovered by repeated application of a suitable set of graph transformations. We introduce a backtracking search algorithm over a set of relaxed graph substitutions to find optimized networks and use a flow-based graph split algorithm to recursively split a computation graph into smaller subgraphs to allow efficient search. We implement relaxed graph substitutions in a system called MetaFlow and show that MetaFlow improves the inference and training performance by 1.1-1.6\u00d7 and 1.1-1.2\u00d7 respectively over existing deep learning frameworks."
            },
            "slug": "Optimizing-DNN-Computation-with-Relaxed-Graph-Jia-Thomas",
            "title": {
                "fragments": [],
                "text": "Optimizing DNN Computation with Relaxed Graph Substitutions"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "A backtracking search algorithm is introduced over a set of relaxed graph substitutions to find optimized networks and a flow-based graph split algorithm is used to recursively split a computation graph into smaller subgraphs to allow efficient search."
            },
            "venue": {
                "fragments": [],
                "text": "MLSys"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144094780"
                        ],
                        "name": "Zhen Jia",
                        "slug": "Zhen-Jia",
                        "structuredName": {
                            "firstName": "Zhen",
                            "lastName": "Jia",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zhen Jia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3134596"
                        ],
                        "name": "A. Zlateski",
                        "slug": "A.-Zlateski",
                        "structuredName": {
                            "firstName": "Aleksandar",
                            "lastName": "Zlateski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Zlateski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2158258070"
                        ],
                        "name": "Kai Li",
                        "slug": "Kai-Li",
                        "structuredName": {
                            "firstName": "Kai",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kai Li"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 42195139,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "40aaf83e120db7c7e2457f804ebdad5a04c31e3e",
            "isKey": false,
            "numCitedBy": 27,
            "numCiting": 57,
            "paperAbstract": {
                "fragments": [],
                "text": "Recent work on Winograd-based convolution allows for a great reduction of computational complexity, but existing implementations are limited to 2D data and a single kernel size of 3 by 3. They can achieve only slightly better, and often worse performance than better optimized, direct convolution implementations. We propose and implement an algorithm for N-dimensional Winograd-based convolution that allows arbitrary kernel sizes and is optimized for manycore CPUs. Our algorithm achieves high hardware utilization through a series of optimizations. Our experiments show that on modern ConvNets, our optimized implementation, is on average more than 3 x, and sometimes 8 x faster than other state-of-the-art CPU implementations on an Intel Xeon Phi manycore processors. Moreover, our implementation on the Xeon Phi achieves competitive performance for 2D ConvNets and superior performance for 3D ConvNets, compared with the best GPU implementations."
            },
            "slug": "Optimizing-N-dimensional,-winograd-based-for-CPUs-Jia-Zlateski",
            "title": {
                "fragments": [],
                "text": "Optimizing N-dimensional, winograd-based convolution for manycore CPUs"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "This work proposes and implements an algorithm for N-dimensional Winograd-based convolution that allows arbitrary kernel sizes and is optimized for manycore CPUs, and achieves high hardware utilization through a series of optimizations."
            },
            "venue": {
                "fragments": [],
                "text": "PPoPP"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3121592"
                        ],
                        "name": "Nadav Rotem",
                        "slug": "Nadav-Rotem",
                        "structuredName": {
                            "firstName": "Nadav",
                            "lastName": "Rotem",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nadav Rotem"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8855702"
                        ],
                        "name": "Jordan Fix",
                        "slug": "Jordan-Fix",
                        "structuredName": {
                            "firstName": "Jordan",
                            "lastName": "Fix",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jordan Fix"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46247320"
                        ],
                        "name": "Saleem Abdulrasool",
                        "slug": "Saleem-Abdulrasool",
                        "structuredName": {
                            "firstName": "Saleem",
                            "lastName": "Abdulrasool",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saleem Abdulrasool"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46193056"
                        ],
                        "name": "Summer Deng",
                        "slug": "Summer-Deng",
                        "structuredName": {
                            "firstName": "Summer",
                            "lastName": "Deng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Summer Deng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46257780"
                        ],
                        "name": "Roman Dzhabarov",
                        "slug": "Roman-Dzhabarov",
                        "structuredName": {
                            "firstName": "Roman",
                            "lastName": "Dzhabarov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Roman Dzhabarov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153509089"
                        ],
                        "name": "James Hegeman",
                        "slug": "James-Hegeman",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Hegeman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "James Hegeman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46211183"
                        ],
                        "name": "Roman Levenstein",
                        "slug": "Roman-Levenstein",
                        "structuredName": {
                            "firstName": "Roman",
                            "lastName": "Levenstein",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Roman Levenstein"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2130533"
                        ],
                        "name": "Bertrand A. Maher",
                        "slug": "Bertrand-A.-Maher",
                        "structuredName": {
                            "firstName": "Bertrand",
                            "lastName": "Maher",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bertrand A. Maher"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143758120"
                        ],
                        "name": "N. Satish",
                        "slug": "N.-Satish",
                        "structuredName": {
                            "firstName": "Nadathur",
                            "lastName": "Satish",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Satish"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2925676"
                        ],
                        "name": "Jakob R. Olesen",
                        "slug": "Jakob-R.-Olesen",
                        "structuredName": {
                            "firstName": "Jakob",
                            "lastName": "Olesen",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jakob R. Olesen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1686843"
                        ],
                        "name": "Jongsoo Park",
                        "slug": "Jongsoo-Park",
                        "structuredName": {
                            "firstName": "Jongsoo",
                            "lastName": "Park",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jongsoo Park"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46250117"
                        ],
                        "name": "Artem Rakhov",
                        "slug": "Artem-Rakhov",
                        "structuredName": {
                            "firstName": "Artem",
                            "lastName": "Rakhov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Artem Rakhov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1711231"
                        ],
                        "name": "M. Smelyanskiy",
                        "slug": "M.-Smelyanskiy",
                        "structuredName": {
                            "firstName": "Mikhail",
                            "lastName": "Smelyanskiy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Smelyanskiy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 97,
                                "start": 93
                            }
                        ],
                        "text": "There are several other similar IR-style frameworks such as Tensor Comprehensions [42], Glow [33] and DLVM [43]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 23823854,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0261195ae7e1545caefb0ea7afb92bd66bfbb790",
            "isKey": false,
            "numCitedBy": 164,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper presents the design of Glow, a machine learning compiler for heterogeneous hardware. It is a pragmatic approach to compilation that enables the generation of highly optimized code for multiple targets. Glow lowers the traditional neural network dataflow graph into a two-phase strongly-typed intermediate representation. The high-level intermediate representation allows the optimizer to perform domain-specific optimizations. The lower-level instruction-based address-only intermediate representation allows the compiler to perform memory-related optimizations, such as instruction scheduling, static memory allocation and copy elimination. At the lowest level, the optimizer performs machine-specific code generation to take advantage of specialized hardware features. Glow features a lowering phase which enables the compiler to support a high number of input operators as well as a large number of hardware targets by eliminating the need to implement all operators on all targets. The lowering phase is designed to reduce the input space and allow new hardware backends to focus on a small number of linear algebra primitives."
            },
            "slug": "Glow:-Graph-Lowering-Compiler-Techniques-for-Neural-Rotem-Fix",
            "title": {
                "fragments": [],
                "text": "Glow: Graph Lowering Compiler Techniques for Neural Networks"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "Glow features a lowering phase which enables the compiler to support a high number of input operators as well as a large number of hardware targets by eliminating the need to implement all operators on all targets."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143840275"
                        ],
                        "name": "Song Han",
                        "slug": "Song-Han",
                        "structuredName": {
                            "firstName": "Song",
                            "lastName": "Han",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Song Han"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47218161"
                        ],
                        "name": "Junlong Kang",
                        "slug": "Junlong-Kang",
                        "structuredName": {
                            "firstName": "Junlong",
                            "lastName": "Kang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Junlong Kang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3123774"
                        ],
                        "name": "Huizi Mao",
                        "slug": "Huizi-Mao",
                        "structuredName": {
                            "firstName": "Huizi",
                            "lastName": "Mao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Huizi Mao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2149295692"
                        ],
                        "name": "Yiming Hu",
                        "slug": "Yiming-Hu",
                        "structuredName": {
                            "firstName": "Yiming",
                            "lastName": "Hu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yiming Hu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2153897624"
                        ],
                        "name": "Xin Li",
                        "slug": "Xin-Li",
                        "structuredName": {
                            "firstName": "Xin",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xin Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2110491162"
                        ],
                        "name": "Yubin Li",
                        "slug": "Yubin-Li",
                        "structuredName": {
                            "firstName": "Yubin",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yubin Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2054592483"
                        ],
                        "name": "Dongliang Xie",
                        "slug": "Dongliang-Xie",
                        "structuredName": {
                            "firstName": "Dongliang",
                            "lastName": "Xie",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dongliang Xie"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2116665774"
                        ],
                        "name": "Hong Luo",
                        "slug": "Hong-Luo",
                        "structuredName": {
                            "firstName": "Hong",
                            "lastName": "Luo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hong Luo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2067824417"
                        ],
                        "name": "Song Yao",
                        "slug": "Song-Yao",
                        "structuredName": {
                            "firstName": "Song",
                            "lastName": "Yao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Song Yao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40987227"
                        ],
                        "name": "Yu Wang",
                        "slug": "Yu-Wang",
                        "structuredName": {
                            "firstName": "Yu",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yu Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39150998"
                        ],
                        "name": "Huazhong Yang",
                        "slug": "Huazhong-Yang",
                        "structuredName": {
                            "firstName": "Huazhong",
                            "lastName": "Yang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Huazhong Yang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "80724002"
                        ],
                        "name": "W. Dally",
                        "slug": "W.-Dally",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Dally",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Dally"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 3351553,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b71ae4f14d329268baa5d280734054b449e6ea1b",
            "isKey": false,
            "numCitedBy": 481,
            "numCiting": 28,
            "paperAbstract": {
                "fragments": [],
                "text": "Long Short-Term Memory (LSTM) is widely used in speech recognition. In order to achieve higher prediction accuracy, machine learning scientists have built increasingly larger models. Such large model is both computation intensive and memory intensive. Deploying such bulky model results in high power consumption and leads to a high total cost of ownership (TCO) of a data center. To speedup the prediction and make it energy efficient, we first propose a load-balance-aware pruning method that can compress the LSTM model size by 20x (10x from pruning and 2x from quantization) with negligible loss of the prediction accuracy. The pruned model is friendly for parallel processing. Next, we propose a scheduler that encodes and partitions the compressed model to multiple PEs for parallelism and schedule the complicated LSTM data flow. Finally, we design the hardware architecture, named Efficient Speech Recognition Engine (ESE) that works directly on the sparse LSTM model. Implemented on Xilinx KU060 FPGA running at 200MHz, ESE has a performance of 282 GOPS working directly on the sparse LSTM network, corresponding to 2.52 TOPS on the dense one, and processes a full LSTM for speech recognition with a power dissipation of 41 Watts. Evaluated on the LSTM for speech recognition benchmark, ESE is 43x and 3x faster than Core i7 5930k CPU and Pascal Titan X GPU implementations. It achieves 40x and 11.5x higher energy efficiency compared with the CPU and GPU respectively."
            },
            "slug": "ESE:-Efficient-Speech-Recognition-Engine-with-LSTM-Han-Kang",
            "title": {
                "fragments": [],
                "text": "ESE: Efficient Speech Recognition Engine with Sparse LSTM on FPGA"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This work proposes a load-balance-aware pruning method that can compress the LSTM model size by 20x (10x from pruning and 2x from quantization) with negligible loss of the prediction accuracy, and proposes a scheduler that encodes and partitions the compressed model to multiple PEs for parallelism and schedule the complicated L STM data flow."
            },
            "venue": {
                "fragments": [],
                "text": "FPGA"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46641573"
                        ],
                        "name": "W. Liu",
                        "slug": "W.-Liu",
                        "structuredName": {
                            "firstName": "W.",
                            "lastName": "Liu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Liu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1838674"
                        ],
                        "name": "Dragomir Anguelov",
                        "slug": "Dragomir-Anguelov",
                        "structuredName": {
                            "firstName": "Dragomir",
                            "lastName": "Anguelov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dragomir Anguelov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1761978"
                        ],
                        "name": "D. Erhan",
                        "slug": "D.-Erhan",
                        "structuredName": {
                            "firstName": "D.",
                            "lastName": "Erhan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Erhan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2574060"
                        ],
                        "name": "Christian Szegedy",
                        "slug": "Christian-Szegedy",
                        "structuredName": {
                            "firstName": "Christian",
                            "lastName": "Szegedy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christian Szegedy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144828948"
                        ],
                        "name": "Scott E. Reed",
                        "slug": "Scott-E.-Reed",
                        "structuredName": {
                            "firstName": "Scott",
                            "lastName": "Reed",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Scott E. Reed"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2084646762"
                        ],
                        "name": "Cheng-Yang Fu",
                        "slug": "Cheng-Yang-Fu",
                        "structuredName": {
                            "firstName": "Cheng-Yang",
                            "lastName": "Fu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Cheng-Yang Fu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39668247"
                        ],
                        "name": "A. Berg",
                        "slug": "A.-Berg",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Berg",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Berg"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "For example, in the object detection model SSD [36], the number of states can reach the order of trillions due to the occurrence of many concatenation blocks."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "Convolutional neural networks (CNNs) are commonly used in computer vision workloads [23, 26, 33, 36, 41\u201343]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "models, including ResNet [23], VGG [41], DenseNet [26], Inception-v3 [43], and SSD [36] using ResNet-50 as the base network."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 2141740,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4d7a9197433acbfb24ef0e9d0f33ed1699e4a5b0",
            "isKey": true,
            "numCitedBy": 15747,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a method for detecting objects in images using a single deep neural network. Our approach, named SSD, discretizes the output space of bounding boxes into a set of default boxes over different aspect ratios and scales per feature map location. At prediction time, the network generates scores for the presence of each object category in each default box and produces adjustments to the box to better match the object shape. Additionally, the network combines predictions from multiple feature maps with different resolutions to naturally handle objects of various sizes. Our SSD model is simple relative to methods that require object proposals because it completely eliminates proposal generation and subsequent pixel or feature resampling stage and encapsulates all computation in a single network. This makes SSD easy to train and straightforward to integrate into systems that require a detection component. Experimental results on the PASCAL VOC, MS COCO, and ILSVRC datasets confirm that SSD has comparable accuracy to methods that utilize an additional object proposal step and is much faster, while providing a unified framework for both training and inference. Compared to other single stage methods, SSD has much better accuracy, even with a smaller input image size. For $300\\times 300$ input, SSD achieves 72.1% mAP on VOC2007 test at 58 FPS on a Nvidia Titan X and for $500\\times 500$ input, SSD achieves 75.1% mAP, outperforming a comparable state of the art Faster R-CNN model. Code is available at this https URL ."
            },
            "slug": "SSD:-Single-Shot-MultiBox-Detector-Liu-Anguelov",
            "title": {
                "fragments": [],
                "text": "SSD: Single Shot MultiBox Detector"
            },
            "tldr": {
                "abstractSimilarityScore": 67,
                "text": "The approach, named SSD, discretizes the output space of bounding boxes into a set of default boxes over different aspect ratios and scales per feature map location, which makes SSD easy to train and straightforward to integrate into systems that require a detection component."
            },
            "venue": {
                "fragments": [],
                "text": "ECCV"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144727050"
                        ],
                        "name": "Andrew G. Howard",
                        "slug": "Andrew-G.-Howard",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Howard",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew G. Howard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2717876"
                        ],
                        "name": "Menglong Zhu",
                        "slug": "Menglong-Zhu",
                        "structuredName": {
                            "firstName": "Menglong",
                            "lastName": "Zhu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Menglong Zhu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [],
                        "name": "Bo Chen",
                        "slug": "Bo-Chen",
                        "structuredName": {
                            "firstName": "Bo",
                            "lastName": "Chen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bo Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2741985"
                        ],
                        "name": "Dmitry Kalenichenko",
                        "slug": "Dmitry-Kalenichenko",
                        "structuredName": {
                            "firstName": "Dmitry",
                            "lastName": "Kalenichenko",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dmitry Kalenichenko"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2108301072"
                        ],
                        "name": "Weijun Wang",
                        "slug": "Weijun-Wang",
                        "structuredName": {
                            "firstName": "Weijun",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Weijun Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47447630"
                        ],
                        "name": "Tobias Weyand",
                        "slug": "Tobias-Weyand",
                        "structuredName": {
                            "firstName": "Tobias",
                            "lastName": "Weyand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Tobias Weyand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2612392"
                        ],
                        "name": "M. Andreetto",
                        "slug": "M.-Andreetto",
                        "structuredName": {
                            "firstName": "Marco",
                            "lastName": "Andreetto",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Andreetto"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2595180"
                        ],
                        "name": "Hartwig Adam",
                        "slug": "Hartwig-Adam",
                        "structuredName": {
                            "firstName": "Hartwig",
                            "lastName": "Adam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hartwig Adam"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 84
                            }
                        ],
                        "text": "Convolutional neural networks (CNNs) are commonly used in computer vision workloads [19, 21, 22, 28, 34, 38, 39]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 12670695,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3647d6d0f151dc05626449ee09cc7bce55be497e",
            "isKey": false,
            "numCitedBy": 10323,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a class of efficient models called MobileNets for mobile and embedded vision applications. MobileNets are based on a streamlined architecture that uses depth-wise separable convolutions to build light weight deep neural networks. We introduce two simple global hyper-parameters that efficiently trade off between latency and accuracy. These hyper-parameters allow the model builder to choose the right sized model for their application based on the constraints of the problem. We present extensive experiments on resource and accuracy tradeoffs and show strong performance compared to other popular models on ImageNet classification. We then demonstrate the effectiveness of MobileNets across a wide range of applications and use cases including object detection, finegrain classification, face attributes and large scale geo-localization."
            },
            "slug": "MobileNets:-Efficient-Convolutional-Neural-Networks-Howard-Zhu",
            "title": {
                "fragments": [],
                "text": "MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This work introduces two simple global hyper-parameters that efficiently trade off between latency and accuracy and demonstrates the effectiveness of MobileNets across a wide range of applications and use cases including object detection, finegrain classification, face attributes and large scale geo-localization."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1722735"
                        ],
                        "name": "A. Heinecke",
                        "slug": "A.-Heinecke",
                        "structuredName": {
                            "firstName": "Alexander",
                            "lastName": "Heinecke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Heinecke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145131827"
                        ],
                        "name": "G. Henry",
                        "slug": "G.-Henry",
                        "structuredName": {
                            "firstName": "Greg",
                            "lastName": "Henry",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Henry"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40092732"
                        ],
                        "name": "Maxwell Hutchinson",
                        "slug": "Maxwell-Hutchinson",
                        "structuredName": {
                            "firstName": "Maxwell",
                            "lastName": "Hutchinson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Maxwell Hutchinson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1820941511"
                        ],
                        "name": "Hans Pabst",
                        "slug": "Hans-Pabst",
                        "structuredName": {
                            "firstName": "Hans",
                            "lastName": "Pabst",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hans Pabst"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 27,
                                "start": 15
                            }
                        ],
                        "text": "Previous works [19, 24, 27] which focus on individual operation optimization normally do not consider about the data layout transformation overhead between highly optimized operations."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 148,
                                "start": 140
                            }
                        ],
                        "text": "In addition to the libraries, there are also highly customized optimization works for convolutions and matrix multiplications on Intel CPUs [19, 24]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 126,
                                "start": 119
                            }
                        ],
                        "text": "This is a well-studied problem but the previous works normally go deep to the assembly code level for high performance [24,27]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 27,
                                "start": 15
                            }
                        ],
                        "text": "Existing works [19, 24, 27] have demonstrated that it is possible to achieve high performance of convolution operations on CPUs by arranging the data layout and consequently, the computation, in an architecture-friendly way."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 234,
                                "start": 218
                            }
                        ],
                        "text": "As deep learning demonstrates more and more power in the real-world applications, there is a significant amount of effort being made to accelerate the deep learning workloads on all kinds of hardware ranging from CPUs [24, 27, 44, 53], GPUs [11, 13], FPGAs [18, 22, 49], to special-purpose accelerators [12, 32]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 34884678,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f1e8db01216088c48ebf2e2321815823feb265f9",
            "isKey": true,
            "numCitedBy": 109,
            "numCiting": 28,
            "paperAbstract": {
                "fragments": [],
                "text": "Many modern highly scalable scientific simulations packages rely on small matrix multiplications as their main computational engine. Math libraries or compilers are unlikely to provide the best possible kernel performance. To address this issue, we present a library which provides high performance small matrix multiplications targeting all recent x86 vector instruction set extensions up to Intel AVX-512. Our evaluation proves that speed-ups of more than 10\u00d7 are possible depending on the CPU and application. These speed-ups are achieved by a combination of several novel technologies. We use a code generator which has a built-in architectural model to create code which runs well without requiring an auto-tuning phase. Since such code is very specialized we leverage just-in-time compilation to only build the required kernel variant at runtime. To keep ease-of-use, overhead, and kernel management under control we accompany our library with a BLAS-compliant frontend which features a multi-level code-cache hierarchy."
            },
            "slug": "LIBXSMM:-Accelerating-Small-Matrix-Multiplications-Heinecke-Henry",
            "title": {
                "fragments": [],
                "text": "LIBXSMM: Accelerating Small Matrix Multiplications by Runtime Code Generation"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "This work presents a library which provides high performance small matrix multiplications targeting all recent x86 vector instruction set extensions up to Intel AVX-512, and accompanies this library with a BLAS-compliant frontend which features a multi-level code-cache hierarchy."
            },
            "venue": {
                "fragments": [],
                "text": "SC16: International Conference for High Performance Computing, Networking, Storage and Analysis"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401885963"
                        ],
                        "name": "Jonathan Ragan-Kelley",
                        "slug": "Jonathan-Ragan-Kelley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ragan-Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jonathan Ragan-Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2496412"
                        ],
                        "name": "Connelly Barnes",
                        "slug": "Connelly-Barnes",
                        "structuredName": {
                            "firstName": "Connelly",
                            "lastName": "Barnes",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Connelly Barnes"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144187067"
                        ],
                        "name": "Andrew Adams",
                        "slug": "Andrew-Adams",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Adams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Adams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145799132"
                        ],
                        "name": "Sylvain Paris",
                        "slug": "Sylvain-Paris",
                        "structuredName": {
                            "firstName": "Sylvain",
                            "lastName": "Paris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sylvain Paris"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145403226"
                        ],
                        "name": "F. Durand",
                        "slug": "F.-Durand",
                        "structuredName": {
                            "firstName": "Fr\u00e9do",
                            "lastName": "Durand",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Durand"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 66,
                                "start": 46
                            }
                        ],
                        "text": "For example, if the number of channels is 64, [32, 16, 8, 4, 2, 1] are listed as the candidates."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 51,
                                "start": 34
                            }
                        ],
                        "text": "As a result, we choose reg_n from [32, 16, 8, 4, 2]."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 90,
                                "start": 86
                            }
                        ],
                        "text": "Our solution is based on the TVM stack [7], an end-toend framework inspired by Halide [32], which expresses a deep learning model into intermediate representations (IRs) and lowers the IRs eventually to the machine code."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 5885207,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4d23db55e6671a82c95dacec33b2967a4b8b677d",
            "isKey": false,
            "numCitedBy": 878,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "Image processing pipelines combine the challenges of stencil computations and stream programs. They are composed of large graphs of different stencil stages, as well as complex reductions, and stages with global or data-dependent access patterns. Because of their complex structure, the performance difference between a naive implementation of a pipeline and an optimized one is often an order of magnitude. Efficient implementations require optimization of both parallelism and locality, but due to the nature of stencils, there is a fundamental tension between parallelism, locality, and introducing redundant recomputation of shared values. We present a systematic model of the tradeoff space fundamental to stencil pipelines, a schedule representation which describes concrete points in this space for each stage in an image processing pipeline, and an optimizing compiler for the Halide image processing language that synthesizes high performance implementations from a Halide algorithm and a schedule. Combining this compiler with stochastic search over the space of schedules enables terse, composable programs to achieve state-of-the-art performance on a wide range of real image processing pipelines, and across different hardware architectures, including multicores with SIMD, and heterogeneous CPU+GPU execution. From simple Halide programs written in a few hours, we demonstrate performance up to 5x faster than hand-tuned C, intrinsics, and CUDA implementations optimized by experts over weeks or months, for image processing applications beyond the reach of past automatic compilers."
            },
            "slug": "Halide:-a-language-and-compiler-for-optimizing-and-Ragan-Kelley-Barnes",
            "title": {
                "fragments": [],
                "text": "Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A systematic model of the tradeoff space fundamental to stencil pipelines is presented, a schedule representation which describes concrete points in this space for each stage in an image processing pipeline, and an optimizing compiler for the Halide image processing language that synthesizes high performance implementations from a Halide algorithm and a schedule are presented."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI"
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153302678"
                        ],
                        "name": "Jia Deng",
                        "slug": "Jia-Deng",
                        "structuredName": {
                            "firstName": "Jia",
                            "lastName": "Deng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jia Deng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144847596"
                        ],
                        "name": "Wei Dong",
                        "slug": "Wei-Dong",
                        "structuredName": {
                            "firstName": "Wei",
                            "lastName": "Dong",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Wei Dong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2166511"
                        ],
                        "name": "R. Socher",
                        "slug": "R.-Socher",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Socher",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Socher"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2040091191"
                        ],
                        "name": "Li-Jia Li",
                        "slug": "Li-Jia-Li",
                        "structuredName": {
                            "firstName": "Li-Jia",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Li-Jia Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "94451829"
                        ],
                        "name": "K. Li",
                        "slug": "K.-Li",
                        "structuredName": {
                            "firstName": "K.",
                            "lastName": "Li",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Li"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48004138"
                        ],
                        "name": "Li Fei-Fei",
                        "slug": "Li-Fei-Fei",
                        "structuredName": {
                            "firstName": "Li",
                            "lastName": "Fei-Fei",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Li Fei-Fei"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 47,
                                "start": 43
                            }
                        ],
                        "text": "All models were pre-trained using ImageNet [12] dataset and available from the Gluon Model Zoo 2."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 61,
                                "start": 53
                            }
                        ],
                        "text": "For each model, we randomly sampled 1000 images from ImageNet and used our solution, MXNet and OpenVINO to run the model inference for prediction."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 42,
                                "start": 34
                            }
                        ],
                        "text": "All models were pre-trained using ImageNet [12] dataset and available from the Gluon Model\nZoo 2."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 58,
                                "start": 50
                            }
                        ],
                        "text": "The input data of the model inference are 224 \u00d7 224 ImageNet images, except for the Inception Net whose input size is 299 \u00d7 299 (This is to follow one of the original experimented sizes of receptive field for inception architecture and the default input size of inception-v3 implementation from popular deep learning frameworks)."
                    },
                    "intents": []
                }
            ],
            "corpusId": 57246310,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d2c733e34d48784a37d717fe43d9e93277a8c53e",
            "isKey": true,
            "numCitedBy": 28266,
            "numCiting": 27,
            "paperAbstract": {
                "fragments": [],
                "text": "The explosion of image data on the Internet has the potential to foster more sophisticated and robust models and algorithms to index, retrieve, organize and interact with images and multimedia data. But exactly how such data can be harnessed and organized remains a critical problem. We introduce here a new database called \u201cImageNet\u201d, a large-scale ontology of images built upon the backbone of the WordNet structure. ImageNet aims to populate the majority of the 80,000 synsets of WordNet with an average of 500-1000 clean and full resolution images. This will result in tens of millions of annotated images organized by the semantic hierarchy of WordNet. This paper offers a detailed analysis of ImageNet in its current state: 12 subtrees with 5247 synsets and 3.2 million images in total. We show that ImageNet is much larger in scale and diversity and much more accurate than the current image datasets. Constructing such a large-scale database is a challenging task. We describe the data collection scheme with Amazon Mechanical Turk. Lastly, we illustrate the usefulness of ImageNet through three simple applications in object recognition, image classification and automatic object clustering. We hope that the scale, accuracy, diversity and hierarchical structure of ImageNet can offer unparalleled opportunities to researchers in the computer vision community and beyond."
            },
            "slug": "ImageNet:-A-large-scale-hierarchical-image-database-Deng-Dong",
            "title": {
                "fragments": [],
                "text": "ImageNet: A large-scale hierarchical image database"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "A new database called \u201cImageNet\u201d is introduced, a large-scale ontology of images built upon the backbone of the WordNet structure, much larger in scale and diversity and much more accurate than the current image datasets."
            },
            "venue": {
                "fragments": [],
                "text": "2009 IEEE Conference on Computer Vision and Pattern Recognition"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3254756"
                        ],
                        "name": "T. Leng",
                        "slug": "T.-Leng",
                        "structuredName": {
                            "firstName": "Tau",
                            "lastName": "Leng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Leng"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2053414733"
                        ],
                        "name": "R. Ali",
                        "slug": "R.-Ali",
                        "structuredName": {
                            "firstName": "Rizwan",
                            "lastName": "Ali",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Ali"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709801"
                        ],
                        "name": "J. Hsieh",
                        "slug": "J.-Hsieh",
                        "structuredName": {
                            "firstName": "Jenwei",
                            "lastName": "Hsieh",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hsieh"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2991198"
                        ],
                        "name": "V. Mashayekhi",
                        "slug": "V.-Mashayekhi",
                        "structuredName": {
                            "firstName": "Victor",
                            "lastName": "Mashayekhi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Mashayekhi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2862837"
                        ],
                        "name": "R. Rooholamini",
                        "slug": "R.-Rooholamini",
                        "structuredName": {
                            "firstName": "Reza",
                            "lastName": "Rooholamini",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Rooholamini"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 85,
                                "start": 81
                            }
                        ],
                        "text": "However, the performance improvement of hyper-threading is application-dependent [29]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 7808949,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "15efbb5e0ac8ee9bac96e6d592ad90ccba5e066e",
            "isKey": false,
            "numCitedBy": 65,
            "numCiting": 9,
            "paperAbstract": {
                "fragments": [],
                "text": "The effects of Intel Hyper-Threading technology on a system performance vary according to the type of applications the system is running. Hyper-Threading affects High Performance Computing (HPC) clusters similarly. The characteristics of application run on a cluster will determine whether Hyper-Threading will help or hinder performance. In addition, the operating system\u2019s support for scheduling tasks, with Hyper-Threading enabled, is an important factor in the overall performance of the system. In this paper, we used an experimental approach to demonstrate the performance gain or degradation of various parallel benchmarks running on a Linux cluster. The results of these benchmarks show that performance varies as a function of the number of nodes and the number of processors per node. Furthermore, we used a performance analysis tool to determine the cause of these performance differences when Hyper-Threading was enabled versus disabled. Our analysis shows the correlation between the cluster performance and the program characteristics, such as computational type, cache and memory usage, and message-passing properties. We conclude the paper by providing guidance on how to best apply Hyper-Threading technology to application classes."
            },
            "slug": "An-Empirical-Study-of-Hyper-Threading-in-Computing-Leng-Ali",
            "title": {
                "fragments": [],
                "text": "An Empirical Study of Hyper-Threading in High-Performance Computing Clusters"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This paper used an experimental approach to demonstrate the performance gain or degradation of various parallel benchmarks running on a Linux cluster, and used a performance analysis tool to determine the cause of these performance differences when Hyper-Threading was enabled versus disabled."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2002
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1688306"
                        ],
                        "name": "David A. Koufaty",
                        "slug": "David-A.-Koufaty",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Koufaty",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David A. Koufaty"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2070026"
                        ],
                        "name": "D. Marr",
                        "slug": "D.-Marr",
                        "structuredName": {
                            "firstName": "Deborah",
                            "lastName": "Marr",
                            "middleNames": [
                                "T."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Marr"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 5836831,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "cbf6d9ca16e1033942a9ed4dec6b5aa73ecfab01",
            "isKey": false,
            "numCitedBy": 241,
            "numCiting": 18,
            "paperAbstract": {
                "fragments": [],
                "text": "Hyperthreading technology, which brings the concept of simultaneous multithreading to the Intel architecture, was first introduced on the Intel Xeon processor in early 2002 for the server market. In November 2002, Intel launched the technology on the Intel Pentium 4 at clock frequencies of 3.06 GHz and higher, making the technology widely available to the consumer market. This technology signals a new direction in microarchitecture development and fundamentally changes the cost-benefit tradeoffs of microarchitecture design choices. This article describes how the technology works, that is, how we make a single physical processor appear as multiple logical processors to operating systems and software. We highlight the additional structures and die area needed to implement the technology and discuss the fundamental ideas behind the technology and why we can get a 25-percent boost in performance from a technology that costs less than 5 percent in added die area. We illustrate the importance of choosing the right sharing policy for each shared resource by describing, examining, and comparing three different sharing policies: partitioned resources, threshold sharing, and full sharing. The choice of policy depends on the traffic pattern, complexity and size of the resource, potential deadlock/livelock scenarios, and other considerations. Finally, we show how this technology significantly improves performance on several relevant workloads."
            },
            "slug": "Hyperthreading-Technology-in-the-Netburst-Koufaty-Marr",
            "title": {
                "fragments": [],
                "text": "Hyperthreading Technology in the Netburst Microarchitecture"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "HowHyperthreading technology works, that is, how a single physical processor appear as multiple logical processors to operating systems and software is described and how this technology significantly improves performance on several relevant workloads is shown."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Micro"
            },
            "year": 2003
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46385162"
                        ],
                        "name": "Lang Hames",
                        "slug": "Lang-Hames",
                        "structuredName": {
                            "firstName": "Lang",
                            "lastName": "Hames",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lang Hames"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144650318"
                        ],
                        "name": "Bernhard Scholz",
                        "slug": "Bernhard-Scholz",
                        "structuredName": {
                            "firstName": "Bernhard",
                            "lastName": "Scholz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bernhard Scholz"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "This enables us to apply a heuristic solver based on partitioned boolean quadratic programming (PBQP) to our problem as it is done in register allocation [20]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "SSD) is inspired by the application of PBQP in the register allocation problem [6, 17, 20]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "The register allocation problem is modeled as graph representation in which each node (variable) has a candidate list containing all possible register options, and each edge is associated with a cost matrix indicating the availability of registers between two nodes [20]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 17603694,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "1815ccde7cecae0bd359c074a5d5eb8ab0059e1a",
            "isKey": false,
            "numCitedBy": 32,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": "In this work we present a new heuristic for PBQP which significantly improves the quality of its register allocations and extends the range of viable target architectures. We also introduce a new branch-and-bound technique for PBQP that is able to find optimal register allocations. \n \nWe evaluate each of these methods, as well as a state of the art graph colouring method, using SPEC2000 and IA-32 as a testbed. Spill costs are used as a metric for comparison. We provide experimental evidence that our new heuristic allows PBQP to remain effective even for relatively regular architectures such as IA-32, generating results equal to those of a start-of-the-art graph colouring technique. Our method is shown to run 3\u20134 times slower than graph colouring, however it supports a wide range of irregularities. \n \nUsing our branch-and-bound solver for PBQP we were able to solve 97.4% of the functions in SPEC2000 optimally. These results are used as a yardstick to show that both PBQP and graph colouring produce results which are very close to optimal."
            },
            "slug": "Nearly-Optimal-Register-Allocation-with-PBQP-Hames-Scholz",
            "title": {
                "fragments": [],
                "text": "Nearly Optimal Register Allocation with PBQP"
            },
            "tldr": {
                "abstractSimilarityScore": 83,
                "text": "A new heuristic for PBQP is presented which significantly improves the quality of its register allocations and extends the range of viable target architectures and a new branch-and-bound technique is introduced that is able to find optimal register allocations."
            },
            "venue": {
                "fragments": [],
                "text": "JMLC"
            },
            "year": 2006
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144301481"
                        ],
                        "name": "R. C. Whaley",
                        "slug": "R.-C.-Whaley",
                        "structuredName": {
                            "firstName": "R.",
                            "lastName": "Whaley",
                            "middleNames": [
                                "Clinton"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. C. Whaley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1708869"
                        ],
                        "name": "J. Dongarra",
                        "slug": "J.-Dongarra",
                        "structuredName": {
                            "firstName": "Jack",
                            "lastName": "Dongarra",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Dongarra"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "s manually tuned performance via operation- and graph-level joint optimization. Our work utilizes auto search to look for optimal solutions. Similar auto-tuning ideas were used in other works as well [10,46,48]. However, they all focused on performance tuning for single operations, while ours extends the scope to the entire CNN model to search for optimal solutions globally. Recently, we also observed other"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 1466414,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "214a0d9c93720aa8c3d10710bca8308e3f2618f5",
            "isKey": false,
            "numCitedBy": 1138,
            "numCiting": 22,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper describes an approach for the automatic generation and optimization of numerical software for processors with deep memory hierarchies and pipelined functional units. The production of such software for machines ranging from desktop workstations to embedded processors can be a tedious and time consuming process. The work described here can help in automating much of this process. We will concentrate our efforts on the widely used linear algebra kernels called the Basic Linear Algebra Subroutines (BLAS). In particular, the work presented here is for general matrix multiply, DGEMM. However much of the technology and approach developed here can be applied to the other Level 3 BLAS and the general strategy can have an impact on basic linear algebra operations in general and may be extended to other important kernel operations."
            },
            "slug": "Automatically-Tuned-Linear-Algebra-Software-Whaley-Dongarra",
            "title": {
                "fragments": [],
                "text": "Automatically Tuned Linear Algebra Software"
            },
            "tldr": {
                "abstractSimilarityScore": 74,
                "text": "An approach for the automatic generation and optimization of numerical software for processors with deep memory hierarchies and pipelined functional units using the widely used linear algebra kernels called the Basic Linear Algebra Subroutines (BLAS)."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the IEEE/ACM SC98 Conference"
            },
            "year": 1998
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1699645"
                        ],
                        "name": "R. Sutton",
                        "slug": "R.-Sutton",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Sutton",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Sutton"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 191,
                                "start": 179
                            }
                        ],
                        "text": "It is worth noting that if the network structure is too complicated, there are also algorithms to solve the Bellman optimality equation approximately to reduce the time and space [18, 35, 36], which we have not applied in this paper."
                    },
                    "intents": []
                }
            ],
            "corpusId": 3349598,
            "fieldsOfStudy": [
                "Psychology"
            ],
            "id": "a91635f8d0e7fb804efd1c38d9c24ee952ba7076",
            "isKey": false,
            "numCitedBy": 3572,
            "numCiting": 57,
            "paperAbstract": {
                "fragments": [],
                "text": "This article introduces a class of incremental learning procedures specialized for prediction \u2013 that is, for using past experience with an incompletely known system to predict its future behavior. Whereas conventional prediction-learning methods assign credit by means of the difference between predicted and actual outcomes, the new methods assign credit by means of the difference between temporally successive predictions. Although such temporal-difference methods have been used in Samuel's checker player, Holland's bucket brigade, and the author's Adaptive Heuristic Critic, they have remained poorly understood. Here we prove their convergence and optimality for special cases and relate them to supervised-learning methods. For most real-world prediction problems, temporal-difference methods require less memory and less peak computation than conventional methods and they produce more accurate predictions. We argue that most problems to which supervised learning is currently applied are really prediction problems of the sort to which temporal-difference methods can be applied to advantage."
            },
            "slug": "Learning-to-Predict-by-the-Methods-of-Temporal-Sutton",
            "title": {
                "fragments": [],
                "text": "Learning to Predict by the Methods of Temporal Differences"
            },
            "tldr": {
                "abstractSimilarityScore": 79,
                "text": "This article introduces a class of incremental learning procedures specialized for prediction \u2013 that is, for using past experience with an incompletely known system to predict its future behavior \u2013 and proves their convergence and optimality for special cases and relation to supervised-learning methods."
            },
            "venue": {
                "fragments": [],
                "text": "Machine Learning"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1699645"
                        ],
                        "name": "R. Sutton",
                        "slug": "R.-Sutton",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Sutton",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Sutton"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1730590"
                        ],
                        "name": "A. Barto",
                        "slug": "A.-Barto",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Barto",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Barto"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 191,
                                "start": 179
                            }
                        ],
                        "text": "It is worth noting that if the network structure is too complicated, there are also algorithms to solve the Bellman optimality equation approximately to reduce the time and space [18, 35, 36], which we have not applied in this paper."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 127,
                                "start": 119
                            }
                        ],
                        "text": "Modeling global searching for neural network performance as MDP and formatting it with the Bellman optimality equation [27, 36] are inspired by the fact that neural network holds the Markov Property."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 232,
                                "start": 224
                            }
                        ],
                        "text": "In order to generalize tomore complicated networkswhere a CONV may use arbitrary number of predecessors, we formalize the problem into Markov Decision Process (MDP) [5, 13] ans solve it using the Bellman optimality equation [27, 36]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 9166388,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "97efafdb4a3942ab3efba53ded7413199f79c054",
            "isKey": false,
            "numCitedBy": 33129,
            "numCiting": 636,
            "paperAbstract": {
                "fragments": [],
                "text": "Reinforcement learning, one of the most active research areas in artificial intelligence, is a computational approach to learning whereby an agent tries to maximize the total amount of reward it receives when interacting with a complex, uncertain environment. In Reinforcement Learning, Richard Sutton and Andrew Barto provide a clear and simple account of the key ideas and algorithms of reinforcement learning. Their discussion ranges from the history of the field's intellectual foundations to the most recent developments and applications. The only necessary mathematical background is familiarity with elementary concepts of probability. The book is divided into three parts. Part I defines the reinforcement learning problem in terms of Markov decision processes. Part II provides basic solution methods: dynamic programming, Monte Carlo methods, and temporal-difference learning. Part III presents a unified view of the solution methods and incorporates artificial neural networks, eligibility traces, and planning; the two final chapters present case studies and consider the future of reinforcement learning."
            },
            "slug": "Reinforcement-Learning:-An-Introduction-Sutton-Barto",
            "title": {
                "fragments": [],
                "text": "Reinforcement Learning: An Introduction"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "This book provides a clear and simple account of the key ideas and algorithms of reinforcement learning, which ranges from the history of the field's intellectual foundations to the most recent developments and applications."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Neural Networks"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145633620"
                        ],
                        "name": "Lance Hammond",
                        "slug": "Lance-Hammond",
                        "structuredName": {
                            "firstName": "Lance",
                            "lastName": "Hammond",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Lance Hammond"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3034206"
                        ],
                        "name": "Benedict A. Hubbert",
                        "slug": "Benedict-A.-Hubbert",
                        "structuredName": {
                            "firstName": "Benedict",
                            "lastName": "Hubbert",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Benedict A. Hubbert"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "95406856"
                        ],
                        "name": "Michael Siu",
                        "slug": "Michael-Siu",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Siu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michael Siu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3082990"
                        ],
                        "name": "M. Prabhu",
                        "slug": "M.-Prabhu",
                        "structuredName": {
                            "firstName": "Manohar",
                            "lastName": "Prabhu",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Prabhu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2107950781"
                        ],
                        "name": "Michael K. Chen",
                        "slug": "Michael-K.-Chen",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Chen",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michael K. Chen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1746638"
                        ],
                        "name": "K. Olukotun",
                        "slug": "K.-Olukotun",
                        "structuredName": {
                            "firstName": "Kunle",
                            "lastName": "Olukotun",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Olukotun"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 66,
                                "start": 46
                            }
                        ],
                        "text": "For example, if the number of channels is 64, [32, 16, 8, 4, 2, 1] are listed as the candidates."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 71,
                                "start": 67
                            }
                        ],
                        "text": "com/dmlc/tvm ModernCPUs use thread-level parallelism viamulti-core [16] to improve the overall processor performance given the diminishing increasing of transistor budgets to build larger and more complex uniprocessor."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 51,
                                "start": 34
                            }
                        ],
                        "text": "As a result, we choose reg_n from [32, 16, 8, 4, 2]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 10484057,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "9a0a80192b3d897d387bfca550a9a8c9b223ca04",
            "isKey": false,
            "numCitedBy": 372,
            "numCiting": 12,
            "paperAbstract": {
                "fragments": [],
                "text": "The Hydra chip multiprocessor (CMP) integrates four MIPS-based processors and their primary caches on a single chip together with a shared secondary cache. A standard CMP offers implementation and performance advantages compared to wide-issue superscalar designs. However, it must be programmed with a more complicated parallel programming model to obtain maximum performance. To simplify parallel programming, the Hydra CMP supports thread-level speculation and memory renaming, a paradigm that allows performance similar to a uniprocessor of comparable die area on integer programs. This article motivates the design of a CMP, describes the architecture of the Hydra design with a focus on its speculative thread support, and describes our prototype implementation. Chip multiprocessors offer an economical, scalable architecture for future microprocessors. Thread-level speculation support allows them to speed up past software."
            },
            "slug": "The-Stanford-Hydra-CMP-Hammond-Hubbert",
            "title": {
                "fragments": [],
                "text": "The Stanford Hydra CMP"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "The design of a CMP is motivated, the architecture of the Hydra design is described with a focus on its speculative thread support, and the prototype implementation is described."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Micro"
            },
            "year": 2000
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37779433"
                        ],
                        "name": "Preston Briggs",
                        "slug": "Preston-Briggs",
                        "structuredName": {
                            "firstName": "Preston",
                            "lastName": "Briggs",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Preston Briggs"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145971118"
                        ],
                        "name": "K. Cooper",
                        "slug": "K.-Cooper",
                        "structuredName": {
                            "firstName": "Keith",
                            "lastName": "Cooper",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Cooper"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1750325"
                        ],
                        "name": "Linda Torczon",
                        "slug": "Linda-Torczon",
                        "structuredName": {
                            "firstName": "Linda",
                            "lastName": "Torczon",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Linda Torczon"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "SSD) is inspired by the application of PBQP in the register allocation problem [6, 17, 20]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 6571479,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "26ae5ec6b744877edba267d2f4d0d0c8d8c7578d",
            "isKey": false,
            "numCitedBy": 405,
            "numCiting": 52,
            "paperAbstract": {
                "fragments": [],
                "text": "We describe two improvements to Chaitin-style graph coloring register allocators. The first, optimistic coloring, uses a stronger heuristic to find a k-coloring for the interference graph. The second extends Chaitin's treatment of rematerialization to handle a larger class of values. These techniques are complementary. Optimistic coloring decreases the number of procedures that require spill code and reduces the amount of spill code when spilling is unavoidable. Rematerialization lowers the cost of spilling some values. This paper describes both of the techniques and our experience building and using register allocators that incorporate them. It provides a detailed description of optimistic coloring and rematerialization. It presents experimental data to show the performance of several versions of the register allocator on a suite of FORTRAN programs. It discusses several insights that we discovered only after repeated implementation of these allocators."
            },
            "slug": "Improvements-to-graph-coloring-register-allocation-Briggs-Cooper",
            "title": {
                "fragments": [],
                "text": "Improvements to graph coloring register allocation"
            },
            "tldr": {
                "abstractSimilarityScore": 58,
                "text": "This paper describes two improvements to Chaitin-style graph coloring register allocators, and provides a detailed description of optimistic coloring and rematerialization, and presents experimental data to show the performance of several versions of the register allocator on a suite of FORTRAN programs."
            },
            "venue": {
                "fragments": [],
                "text": "TOPL"
            },
            "year": 1994
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48491978"
                        ],
                        "name": "W. K. Hastings",
                        "slug": "W.-K.-Hastings",
                        "structuredName": {
                            "firstName": "W.",
                            "lastName": "Hastings",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. K. Hastings"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "al number of states. It is worth noting that if the network structure is too complicated, there are also algorithms to solve the Bellman optimality equation approximately to reduce the time and space [18, 35, 36], which we have not applied in this paper. The time and memory complexities of this algorithm are equal to the number of states. In theory, all nodes in network can have a large number of input nodes,"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 21204149,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "143d2e02ab91ae6259576ac50b664b8647af8988",
            "isKey": false,
            "numCitedBy": 13682,
            "numCiting": 20,
            "paperAbstract": {
                "fragments": [],
                "text": "SUMMARY A generalization of the sampling method introduced by Metropolis et al. (1953) is presented along with an exposition of the relevant theory, techniques of application and methods and difficulties of assessing the error in Monte Carlo estimates. Examples of the methods, including the generation of random orthogonal matrices and potential applications of the methods to numerical problems arising in statistics, are discussed. For numerical problems in a large number of dimensions, Monte Carlo methods are often more efficient than conventional numerical methods. However, implementation of the Monte Carlo methods requires sampling from high dimensional probability distributions and this may be very difficult and expensive in analysis and computer time. General methods for sampling from, or estimating expectations with respect to, such distributions are as follows. (i) If possible, factorize the distribution into the product of one-dimensional conditional distributions from which samples may be obtained. (ii) Use importance sampling, which may also be used for variance reduction. That is, in order to evaluate the integral J = X) p(x)dx = Ev(f), where p(x) is a probability density function, instead of obtaining independent samples XI, ..., Xv from p(x) and using the estimate J, = Zf(xi)/N, we instead obtain the sample from a distribution with density q(x) and use the estimate J2 = Y{f(xj)p(x1)}/{q(xj)N}. This may be advantageous if it is easier to sample from q(x) thanp(x), but it is a difficult method to use in a large number of dimensions, since the values of the weights w(xi) = p(x1)/q(xj) for reasonable values of N may all be extremely small, or a few may be extremely large. In estimating the probability of an event A, however, these difficulties may not be as serious since the only values of w(x) which are important are those for which x -A. Since the methods proposed by Trotter & Tukey (1956) for the estimation of conditional expectations require the use of importance sampling, the same difficulties may be encountered in their use. (iii) Use a simulation technique; that is, if it is difficult to sample directly from p(x) or if p(x) is unknown, sample from some distribution q(y) and obtain the sample x values as some function of the corresponding y values. If we want samples from the conditional dis"
            },
            "slug": "Monte-Carlo-Sampling-Methods-Using-Markov-Chains-Hastings",
            "title": {
                "fragments": [],
                "text": "Monte Carlo Sampling Methods Using Markov Chains and Their Applications"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1970
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111143430"
                        ],
                        "name": "Samuel Williams",
                        "slug": "Samuel-Williams",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Williams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Samuel Williams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145492285"
                        ],
                        "name": "Andrew Waterman",
                        "slug": "Andrew-Waterman",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Waterman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Andrew Waterman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2052996765"
                        ],
                        "name": "David A. Patterson",
                        "slug": "David-A.-Patterson",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Patterson",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David A. Patterson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 35,
                                "start": 31
                            }
                        ],
                        "text": "According to the rooflinemodel [44], they may become the performance bottleneck."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 5703612,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "092217c2267f6e0673590aa151d811e579ff7760",
            "isKey": false,
            "numCitedBy": 1897,
            "numCiting": 58,
            "paperAbstract": {
                "fragments": [],
                "text": "The Roofline model offers insight on how to improve the performance of software and hardware."
            },
            "slug": "Roofline:-an-insightful-visual-performance-model-Williams-Waterman",
            "title": {
                "fragments": [],
                "text": "Roofline: an insightful visual performance model for multicore architectures"
            },
            "tldr": {
                "abstractSimilarityScore": 78,
                "text": "The Roofline model offers insight on how to improve the performance of software and hardware in the rapidly changing world of connected devices."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144873562"
                        ],
                        "name": "R. Bellman",
                        "slug": "R.-Bellman",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Bellman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Bellman"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 72,
                                "start": 65
                            }
                        ],
                        "text": "The concept of Markov Decision Process (MDP) dates back to 1950s [5, 13]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 58,
                                "start": 55
                            }
                        ],
                        "text": "Much of the later work focused on modeling and solving MDP problem with direct or approximated algorithms."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 215,
                                "start": 212
                            }
                        ],
                        "text": "We define a candidate scheme of a CONV to be a state, the data layout transformation as the action, the inverse of the summation of current CONV execution time and the transformation time as the reward (since in MDP we are maximizing the reward)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 172,
                                "start": 165
                            }
                        ],
                        "text": "In order to generalize tomore complicated networkswhere a CONV may use arbitrary number of predecessors, we formalize the problem into Markov Decision Process (MDP) [5, 13] ans solve it using the Bellman optimality equation [27, 36]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 63,
                                "start": 60
                            }
                        ],
                        "text": "Modeling global searching for neural network performance as MDP and formatting it with the Bellman optimality equation [27, 36] are inspired by the fact that neural network holds the Markov Property."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 38,
                                "start": 35
                            }
                        ],
                        "text": "As discussed in Section 3.3.2, our MDP algorithm is able to find the best combination of data layouts which outperforms the manually picked results by 1.1 \u2212 1.5\u00d7, comparing the third and fourth row of Table 1."
                    },
                    "intents": []
                }
            ],
            "corpusId": 123329493,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "bff20fb30adad8d1c173963089df5fc9664304f0",
            "isKey": true,
            "numCitedBy": 1864,
            "numCiting": 1,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : The purpose of this paper is to discuss the asymptotic behavior of the sequence (f sub n(i)) generated by a nonlinear recurrence relation. This problem arises in connection with an equipment replacement problem, cf. S. Dreyfus, A Note on an Industrial Replacement Process."
            },
            "slug": "A-Markovian-Decision-Process-Bellman",
            "title": {
                "fragments": [],
                "text": "A Markovian Decision Process"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1957
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3365230"
                        ],
                        "name": "C. Derman",
                        "slug": "C.-Derman",
                        "structuredName": {
                            "firstName": "Cyrus",
                            "lastName": "Derman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Derman"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 72,
                                "start": 65
                            }
                        ],
                        "text": "The concept of Markov Decision Process (MDP) dates back to 1950s [5, 13]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 58,
                                "start": 55
                            }
                        ],
                        "text": "Much of the later work focused on modeling and solving MDP problem with direct or approximated algorithms."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 215,
                                "start": 212
                            }
                        ],
                        "text": "We define a candidate scheme of a CONV to be a state, the data layout transformation as the action, the inverse of the summation of current CONV execution time and the transformation time as the reward (since in MDP we are maximizing the reward)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 172,
                                "start": 165
                            }
                        ],
                        "text": "In order to generalize tomore complicated networkswhere a CONV may use arbitrary number of predecessors, we formalize the problem into Markov Decision Process (MDP) [5, 13] ans solve it using the Bellman optimality equation [27, 36]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 63,
                                "start": 60
                            }
                        ],
                        "text": "Modeling global searching for neural network performance as MDP and formatting it with the Bellman optimality equation [27, 36] are inspired by the fact that neural network holds the Markov Property."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 38,
                                "start": 35
                            }
                        ],
                        "text": "As discussed in Section 3.3.2, our MDP algorithm is able to find the best combination of data layouts which outperforms the manually picked results by 1.1 \u2212 1.5\u00d7, comparing the third and fourth row of Table 1."
                    },
                    "intents": []
                }
            ],
            "corpusId": 117572511,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "167be8348ff60a37c96efdfc1e0e3f467a84a470",
            "isKey": true,
            "numCitedBy": 819,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Finite-State-Markovian-Decision-Processes-Derman",
            "title": {
                "fragments": [],
                "text": "Finite State Markovian Decision Processes"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1970
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 66,
                                "start": 46
                            }
                        ],
                        "text": "For example, if the number of channels is 64, [32, 16, 8, 4, 2, 1] are listed as the candidates."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 92,
                                "start": 88
                            }
                        ],
                        "text": "Recently, Intel launched a universal CNN model inference engine called OpenVINO Toolkit [16]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 61,
                                "start": 44
                            }
                        ],
                        "text": "In practice, we choose the reg_n value from [32, 16, 8, 4, 2]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 60,
                                "start": 56
                            }
                        ],
                        "text": "MXNet [8]/TensorFlow [5] 3rd party limited 7 3 OpenVINO [16] 3rd party limited ? 7 Original TVM [9] incomplete 3 7 3"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Openvino toolkit release notes. https://software.intel.com/en-us/ articles/OpenVINO-RelNotes. [Online; accessed 13-May-2019"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2019
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 92,
                                "start": 88
                            }
                        ],
                        "text": "Recently, Intel launched a universal CNN model inference engine called OpenVINO Toolkit [14]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 33,
                                "start": 17
                            }
                        ],
                        "text": "The latest Intel OpenVINO Toolkit 2018 R2."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 21,
                                "start": 17
                            }
                        ],
                        "text": "OpenVINO Toolkit [14] developed by Intel employs similar optimization pipeline as we did to optimize the CNN models for Intel products."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "OpenVINO Toolkit Release Notes. https://software.intel.com/en-us/articles/OpenVINO- RelNotes"
            },
            "venue": {
                "fragments": [],
                "text": "([n. d.]). [Online; accessed 13-Jul-2018]"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2070026"
                        ],
                        "name": "D. Marr",
                        "slug": "D.-Marr",
                        "structuredName": {
                            "firstName": "Deborah",
                            "lastName": "Marr",
                            "middleNames": [
                                "T."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Marr"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 99,
                                "start": 95
                            }
                        ],
                        "text": "In addition, it is worth noting that modern server-side CPUs normally supports hyper-threading [37] via the simultaneous multithreading (SMT) technique, in which the system could assign two virtual cores (i."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 59802971,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "7d2de7c5894df9036ec18752cf932be385ce2522",
            "isKey": false,
            "numCitedBy": 8,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Hyper-Threading-Technology-in-the-NetburstTM-Marr",
            "title": {
                "fragments": [],
                "text": "Hyper-Threading Technology in the NetburstTM Microarchitecture"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48949688"
                        ],
                        "name": "D. Kirk",
                        "slug": "D.-Kirk",
                        "structuredName": {
                            "firstName": "Donald",
                            "lastName": "Kirk",
                            "middleNames": [
                                "E."
                            ],
                            "suffix": ""
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Kirk"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 127,
                                "start": 119
                            }
                        ],
                        "text": "Modeling global searching for neural network performance as MDP and formatting it with the Bellman optimality equation [27, 36] are inspired by the fact that neural network holds the Markov Property."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 232,
                                "start": 224
                            }
                        ],
                        "text": "In order to generalize tomore complicated networkswhere a CONV may use arbitrary number of predecessors, we formalize the problem into Markov Decision Process (MDP) [5, 13] ans solve it using the Bellman optimality equation [27, 36]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 58729099,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "977706d1dc022280f47a2c67c646e85f38d88fe2",
            "isKey": false,
            "numCitedBy": 3281,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Optimal-control-theory-:-an-introduction-Kirk",
            "title": {
                "fragments": [],
                "text": "Optimal control theory : an introduction"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1970
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1813029"
                        ],
                        "name": "D. Cyphers",
                        "slug": "D.-Cyphers",
                        "structuredName": {
                            "firstName": "D.",
                            "lastName": "Cyphers",
                            "middleNames": [
                                "Scott"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Cyphers"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1994518"
                        ],
                        "name": "Arjun K. Bansal",
                        "slug": "Arjun-K.-Bansal",
                        "structuredName": {
                            "firstName": "Arjun",
                            "lastName": "Bansal",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Arjun K. Bansal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35339838"
                        ],
                        "name": "Anahita Bhiwandiwalla",
                        "slug": "Anahita-Bhiwandiwalla",
                        "structuredName": {
                            "firstName": "Anahita",
                            "lastName": "Bhiwandiwalla",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Anahita Bhiwandiwalla"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1713733"
                        ],
                        "name": "J. Bobba",
                        "slug": "J.-Bobba",
                        "structuredName": {
                            "firstName": "Jayaram",
                            "lastName": "Bobba",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Bobba"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38922457"
                        ],
                        "name": "M. Brookhart",
                        "slug": "M.-Brookhart",
                        "structuredName": {
                            "firstName": "Matthew",
                            "lastName": "Brookhart",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Brookhart"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2019491890"
                        ],
                        "name": "Avijit Chakraborty",
                        "slug": "Avijit-Chakraborty",
                        "structuredName": {
                            "firstName": "Avijit",
                            "lastName": "Chakraborty",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Avijit Chakraborty"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46682999"
                        ],
                        "name": "W. Constable",
                        "slug": "W.-Constable",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Constable",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Constable"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3018822"
                        ],
                        "name": "Christian Convey",
                        "slug": "Christian-Convey",
                        "structuredName": {
                            "firstName": "Christian",
                            "lastName": "Convey",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christian Convey"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40026482"
                        ],
                        "name": "L. Cook",
                        "slug": "L.-Cook",
                        "structuredName": {
                            "firstName": "Leona",
                            "lastName": "Cook",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Cook"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35583006"
                        ],
                        "name": "Omar Kanawi",
                        "slug": "Omar-Kanawi",
                        "structuredName": {
                            "firstName": "Omar",
                            "lastName": "Kanawi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Omar Kanawi"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2070657403"
                        ],
                        "name": "Robert Kimball",
                        "slug": "Robert-Kimball",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Kimball",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Robert Kimball"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144468565"
                        ],
                        "name": "Jason Knight",
                        "slug": "Jason-Knight",
                        "structuredName": {
                            "firstName": "Jason",
                            "lastName": "Knight",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jason Knight"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2628842"
                        ],
                        "name": "Nikolay Korovaiko",
                        "slug": "Nikolay-Korovaiko",
                        "structuredName": {
                            "firstName": "Nikolay",
                            "lastName": "Korovaiko",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nikolay Korovaiko"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1849728"
                        ],
                        "name": "V. Vijay",
                        "slug": "V.-Vijay",
                        "structuredName": {
                            "firstName": "V.",
                            "lastName": "Vijay",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "V. Vijay"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35582047"
                        ],
                        "name": "Yixing Lao",
                        "slug": "Yixing-Lao",
                        "structuredName": {
                            "firstName": "Yixing",
                            "lastName": "Lao",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yixing Lao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1390057343"
                        ],
                        "name": "C. Lishka",
                        "slug": "C.-Lishka",
                        "structuredName": {
                            "firstName": "Christopher",
                            "lastName": "Lishka",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Lishka"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38817255"
                        ],
                        "name": "J. Menon",
                        "slug": "J.-Menon",
                        "structuredName": {
                            "firstName": "Jai",
                            "lastName": "Menon",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Menon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111799713"
                        ],
                        "name": "Jennifer Myers",
                        "slug": "Jennifer-Myers",
                        "structuredName": {
                            "firstName": "Jennifer",
                            "lastName": "Myers",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jennifer Myers"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8193799"
                        ],
                        "name": "Sandeep Aswath Narayana",
                        "slug": "Sandeep-Aswath-Narayana",
                        "structuredName": {
                            "firstName": "Sandeep",
                            "lastName": "Narayana",
                            "middleNames": [
                                "Aswath"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sandeep Aswath Narayana"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35456885"
                        ],
                        "name": "A. Procter",
                        "slug": "A.-Procter",
                        "structuredName": {
                            "firstName": "Adam",
                            "lastName": "Procter",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Procter"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "31123495"
                        ],
                        "name": "T. Webb",
                        "slug": "T.-Webb",
                        "structuredName": {
                            "firstName": "Tristan",
                            "lastName": "Webb",
                            "middleNames": [
                                "James"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Webb"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 45,
                                "start": 41
                            }
                        ],
                        "text": "operator fusion as implemented in ngraph [11])."
                    },
                    "intents": []
                }
            ],
            "corpusId": 20334038,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "83fb3f8df8a8ae3a69cdf2b5044e73f0c56f9547",
            "isKey": false,
            "numCitedBy": 92,
            "numCiting": 5,
            "paperAbstract": {
                "fragments": [],
                "text": "The Deep Learning (DL) community sees many novel topologies published each year. Achieving high performance on each new topology remains challenging, as each requires some level of manual effort. This issue is compounded by the proliferation of frameworks and hardware platforms. The current approach, which we call \"direct optimization\", requires deep changes within each framework to improve the training performance for each hardware backend (CPUs, GPUs, FPGAs, ASICs) and requires $\\mathcal{O}(fp)$ effort; where $f$ is the number of frameworks and $p$ is the number of platforms. While optimized kernels for deep-learning primitives are provided via libraries like Intel Math Kernel Library for Deep Neural Networks (MKL-DNN), there are several compiler-inspired ways in which performance can be further optimized. Building on our experience creating neon (a fast deep learning library on GPUs), we developed Intel nGraph, a soon to be open-sourced C++ library to simplify the realization of optimized deep learning performance across frameworks and hardware platforms. Initially-supported frameworks include TensorFlow, MXNet, and Intel neon framework. Initial backends are Intel Architecture CPUs (CPU), the Intel(R) Nervana Neural Network Processor(R) (NNP), and NVIDIA GPUs. Currently supported compiler optimizations include efficient memory management and data layout abstraction. In this paper, we describe our overall architecture and its core components. In the future, we envision extending nGraph API support to a wider range of frameworks, hardware (including FPGAs and ASICs), and compiler optimizations (training versus inference optimizations, multi-node and multi-device scaling via efficient sub-graph partitioning, and HW-specific compounding of operations)."
            },
            "slug": "Intel-nGraph:-An-Intermediate-Representation,-and-Cyphers-Bansal",
            "title": {
                "fragments": [],
                "text": "Intel nGraph: An Intermediate Representation, Compiler, and Executor for Deep Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "Intel nGraph, a soon to be open-sourced C++ library to simplify the realization of optimized deep learning performance across frameworks and hardware platforms, is developed and the overall architecture and its core components are described."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Kirk . 1970"
            },
            "venue": {
                "fragments": [],
                "text": "Optimal Control Theory : An Introduction"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 66,
                                "start": 46
                            }
                        ],
                        "text": "For example, if the number of channels is 64, [32, 16, 8, 4, 2, 1] are listed as the candidates."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 19,
                                "start": 16
                            }
                        ],
                        "text": "7 GHz frequency [2], its peak performance is 2."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 51,
                                "start": 34
                            }
                        ],
                        "text": "As a result, we choose reg_n from [32, 16, 8, 4, 2]."
                    },
                    "intents": []
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Intel Xeon Processor Scalable Family Specification Update. https://www.intel.com/content/dam/www/public/us/en/ documents/specification-updates/xeon-scalable-spec-update.pdf"
            },
            "venue": {
                "fragments": [],
                "text": "([n. d.]). [Online; accessed 18-Jul-2018]"
            },
            "year": 2018
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 89,
                                "start": 81
                            }
                        ],
                        "text": "We follow the well-studied ideas implemented in other high-performance libraries [27, 51] to optimize the computationally-intensive CONV operations."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 36,
                                "start": 32
                            }
                        ],
                        "text": "Intel MKL-DNN [27] and OpenBlas [51]) to obtain high performance for CNN operations."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Online; accessed 13-May-2019"
            },
            "venue": {
                "fragments": [],
                "text": "Openblas. http://xianyi.github.io/OpenBLAS,"
            },
            "year": 2014
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 89,
                                "start": 81
                            }
                        ],
                        "text": "We follow the well-studied ideas implemented in other high-performance libraries [25, 47] to optimize the computationally-intensive CONV operations."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 36,
                                "start": 32
                            }
                        ],
                        "text": "Intel MKL-DNN [25] and OpenBlas [47]) to obtain decent performance for CNN operations."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Online; accessed 3-Jan-2019"
            },
            "venue": {
                "fragments": [],
                "text": "Openblas. http://xianyi.github.io/OpenBLAS,"
            },
            "year": 2014
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 24,
                                "start": 21
                            }
                        ],
                        "text": "MXNet [8]/TensorFlow [5] 3rd party limited 7 3 OpenVINO [16] 3rd party limited ? 7 Original TVM [9] incomplete 3 7 3"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Tensorflow: A system for largescale machine learning"
            },
            "venue": {
                "fragments": [],
                "text": "USENIX Annual Technical Conference  USENIX Association"
            },
            "year": 2019
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Tensorflow Performance Guide"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 24,
                                "start": 21
                            }
                        ],
                        "text": "MXNet [8]/TensorFlow [5] 3rd party limited 7 3 OpenVINO [16] 3rd party limited ? 7 Glow [37] single core 3 7 3"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Tensorflow: A system for largescale machine learning"
            },
            "venue": {
                "fragments": [],
                "text": "In OSDI,"
            },
            "year": 2016
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "NVIDIA TensorRT"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 83,
                                "start": 79
                            }
                        ],
                        "text": "There are several other similar deep learning compilers such as TensorFlow XLA [34], Tensor Comprehensions [46], Glow [40] and DLVM [47]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Xla: Tensorflow, compiled"
            },
            "venue": {
                "fragments": [],
                "text": "TensorFlow Dev Summit,"
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 90,
                                "start": 79
                            }
                        ],
                        "text": "SSD) is inspired by the application of PBQP in the register allocation problem [6, 17, 20]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Code optimizations for digital signal processors"
            },
            "venue": {
                "fragments": [],
                "text": "PhD thesis, Vienna University of Technology,"
            },
            "year": 2003
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 159,
                                "start": 155
                            }
                        ],
                        "text": "a, 16 output channels in float32) are used to multiply with a number of input feature map values continuously stored in the DRAM via AVX-512F instructions [28], whose results are then accumulated to other ZMM registers storing the output values."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 101,
                                "start": 97
                            }
                        ],
                        "text": "For example, on a CPU featured AVX-512, we can utilize its 32 512-bit width registers ZMM0\u2212ZMM31 [28] as follows."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Intel). Intel avx-512 instructions"
            },
            "venue": {
                "fragments": [],
                "text": "https://software.intel.com/en-us/blogs/ 2013/avx-512-instructions,"
            },
            "year": 2013
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 134,
                                "start": 127
                            }
                        ],
                        "text": "on all kinds of hardware ranging from CPUs [20, 23, 40, 46], GPUs [8, 10], FPGAs [15, 17, 45], to special-purpose accelerators [9, 26]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "DianNao family: energy-efficient hardware accelerators for machine learning"
            },
            "venue": {
                "fragments": [],
                "text": "Commun. ACM 59,"
            },
            "year": 2016
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Openvino toolkit release notes"
            },
            "venue": {
                "fragments": [],
                "text": "Code optimizations for digital signal processors . PhD thesis"
            },
            "year": 2003
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 66,
                                "start": 46
                            }
                        ],
                        "text": "For example, if the number of channels is 64, [32, 16, 8, 4, 2, 1] are listed as the candidates."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 107,
                                "start": 104
                            }
                        ],
                        "text": "Currently, most of the CPUs equipped on PCs and servers are manufactured by Intel with x86 architecture [1]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "AMD vs Intel Market Share"
            },
            "venue": {
                "fragments": [],
                "text": "https://www.cpubenchmark.net/ marketshare.html. ([n. d.]). [Online; accessed 13-Jul-2018]"
            },
            "year": 2018
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Eigen: a C++ Linear Algebra Library"
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 269,
                                "start": 257
                            }
                        ],
                        "text": "As deep learning demonstrates more and more power in the real-world applications, there is a significant amount of effort being made to accelerate the deep learning workloads on all kinds of hardware ranging from CPUs [24, 27, 44, 53], GPUs [11, 13], FPGAs [18, 22, 49], to special-purpose accelerators [12, 32]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 298,
                                "start": 293
                            }
                        ],
                        "text": "As deep learning demonstrates more and more power in the real-world applications, there is a significant amount of effort being made to accelerate the deep learning workloads 3KMP_AFFINITY=granularity=fine,compact,1,0\non all kinds of hardware ranging from CPUs [20, 23, 40, 46], GPUs [8, 10], FPGAs [15, 17, 45], to special-purpose accelerators [9, 26]."
                    },
                    "intents": []
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Optimizing FPGAbased Accelerator Design for Deep Convolutional Neural Metworks"
            },
            "venue": {
                "fragments": [],
                "text": "In Proceedings of the 2015 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays,"
            },
            "year": 2015
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 74,
                                "start": 70
                            }
                        ],
                        "text": "Intel AVX-512 introduces 32 512-bit width SIMD registers ZMM0 \u2212 ZMM31 [24]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 170,
                                "start": 166
                            }
                        ],
                        "text": "The kernel values stored in one ZMM register are used to multiply with a number of input feature map values continuously stored in the DRAM via AVX-512F instructions [24], whose results are then accumulated to other ZMM registers storing the output values."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Intel AVX-512 Instructions"
            },
            "venue": {
                "fragments": [],
                "text": "https: //software.intel.com/en-us/blogs/2013/avx-512-instructions"
            },
            "year": 2013
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 39,
            "methodology": 29
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 71,
        "totalPages": 8
    },
    "page_url": "https://www.semanticscholar.org/paper/Optimizing-CNN-Model-Inference-on-CPUs-Liu-Wang/9d60ea2461172d30487743fa6ef8788db4b53759?sort=total-citations"
}