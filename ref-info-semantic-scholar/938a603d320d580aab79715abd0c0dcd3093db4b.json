{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145391991"
                        ],
                        "name": "Qijing Huang",
                        "slug": "Qijing-Huang",
                        "structuredName": {
                            "firstName": "Qijing",
                            "lastName": "Huang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Qijing Huang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1411406011"
                        ],
                        "name": "Ameer Haj-Ali",
                        "slug": "Ameer-Haj-Ali",
                        "structuredName": {
                            "firstName": "Ameer",
                            "lastName": "Haj-Ali",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ameer Haj-Ali"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "16521420"
                        ],
                        "name": "William S. Moses",
                        "slug": "William-S.-Moses",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Moses",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "William S. Moses"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "67295616"
                        ],
                        "name": "J. Xiang",
                        "slug": "J.-Xiang",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Xiang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Xiang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144467753"
                        ],
                        "name": "I. Stoica",
                        "slug": "I.-Stoica",
                        "structuredName": {
                            "firstName": "Ion",
                            "lastName": "Stoica",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Stoica"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1760896"
                        ],
                        "name": "K. Asanovi\u0107",
                        "slug": "K.-Asanovi\u0107",
                        "structuredName": {
                            "firstName": "Krste",
                            "lastName": "Asanovi\u0107",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Asanovi\u0107"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1762709"
                        ],
                        "name": "J. Wawrzynek",
                        "slug": "J.-Wawrzynek",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Wawrzynek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Wawrzynek"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "del used today. This method - unlike NNs and decision trees - can be trained end-to-end. 6 Related Work Previousworkhasutilizedmachinelearningincompileroptimization [30, 31]. For example, the work in [32, 33] proposed deep supervised and RL methods to overcome the phase ordering challenge. In [6], multiple machine learning methods for automatic vectorization have been proposed. Our work is different from "
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 189825040,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e4c02d1820041d2283506a77aea8220759e3f7eb",
            "isKey": false,
            "numCitedBy": 21,
            "numCiting": 3,
            "paperAbstract": {
                "fragments": [],
                "text": "The performance of the code generated by a compiler depends on the order in which the optimization passes are applied. In high-level synthesis, the quality of the generated circuit relates directly to the code generated by the front-end compiler. Choosing a good order\u2013often referred to as the phase-ordering problem\u2013is an NP-hard problem. In this paper, we evaluate a new technique to address the phase-ordering problem: deep reinforcement learning. We implement a framework in the context of the LLVM compiler to optimize the ordering for HLS programs and compare the performance of deep reinforcement learning to state-of-the-art algorithms that address the phase-ordering problem. Overall, our framework runs one to two orders of magnitude faster than these algorithms, and achieves a 16% improvement in circuit performance over the -O3 compiler flag."
            },
            "slug": "AutoPhase:-Compiler-Phase-Ordering-for-HLS-with-Huang-Haj-Ali",
            "title": {
                "fragments": [],
                "text": "AutoPhase: Compiler Phase-Ordering for HLS with Deep Reinforcement Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "This paper implements a framework in the context of the LLVM compiler to optimize the ordering for HLS programs and compares the performance of deep reinforcement learning to state-of-the-art algorithms that address the phase-ordering problem."
            },
            "venue": {
                "fragments": [],
                "text": "2019 IEEE 27th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)"
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145391991"
                        ],
                        "name": "Qijing Huang",
                        "slug": "Qijing-Huang",
                        "structuredName": {
                            "firstName": "Qijing",
                            "lastName": "Huang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Qijing Huang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1411406011"
                        ],
                        "name": "Ameer Haj-Ali",
                        "slug": "Ameer-Haj-Ali",
                        "structuredName": {
                            "firstName": "Ameer",
                            "lastName": "Haj-Ali",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ameer Haj-Ali"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "16521420"
                        ],
                        "name": "William S. Moses",
                        "slug": "William-S.-Moses",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Moses",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "William S. Moses"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "67295616"
                        ],
                        "name": "J. Xiang",
                        "slug": "J.-Xiang",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Xiang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Xiang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144467753"
                        ],
                        "name": "I. Stoica",
                        "slug": "I.-Stoica",
                        "structuredName": {
                            "firstName": "Ion",
                            "lastName": "Stoica",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Stoica"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1760896"
                        ],
                        "name": "K. Asanovi\u0107",
                        "slug": "K.-Asanovi\u0107",
                        "structuredName": {
                            "firstName": "Krste",
                            "lastName": "Asanovi\u0107",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Asanovi\u0107"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1762709"
                        ],
                        "name": "J. Wawrzynek",
                        "slug": "J.-Wawrzynek",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Wawrzynek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Wawrzynek"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 35,
                                "start": 24
                            }
                        ],
                        "text": "For example, thework in [7, 11, 13] proposed deep supervised and RL methods to overcome the phase ordering challenge."
                    },
                    "intents": []
                }
            ],
            "corpusId": 211677381,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "9aaa11190026766bab8a5b6b7be9f50efb4d24a2",
            "isKey": false,
            "numCitedBy": 16,
            "numCiting": 43,
            "paperAbstract": {
                "fragments": [],
                "text": "The performance of the code a compiler generates depends on the order in which it applies the optimization passes. Choosing a good order--often referred to as the phase-ordering problem, is an NP-hard problem. As a result, existing solutions rely on a variety of heuristics. In this paper, we evaluate a new technique to address the phase-ordering problem: deep reinforcement learning. To this end, we implement AutoPhase: a framework that takes a program and uses deep reinforcement learning to find a sequence of compilation passes that minimizes its execution time. Without loss of generality, we construct this framework in the context of the LLVM compiler toolchain and target high-level synthesis programs. We use random forests to quantify the correlation between the effectiveness of a given pass and the program's features. This helps us reduce the search space by avoiding phase orderings that are unlikely to improve the performance of a given program. We compare the performance of AutoPhase to state-of-the-art algorithms that address the phase-ordering problem. In our evaluation, we show that AutoPhase improves circuit performance by 28% when compared to using the -O3 compiler flag, and achieves competitive results compared to the state-of-the-art solutions, while requiring fewer samples. Furthermore, unlike existing state-of-the-art solutions, our deep reinforcement learning solution shows promising result in generalizing to real benchmarks and 12,874 different randomly generated programs, after training on a hundred randomly generated programs."
            },
            "slug": "AutoPhase:-Juggling-HLS-Phase-Orderings-in-Random-Huang-Haj-Ali",
            "title": {
                "fragments": [],
                "text": "AutoPhase: Juggling HLS Phase Orderings in Random Forests with Deep Reinforcement Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This paper implements AutoPhase: a framework that takes a program and uses deep reinforcement learning to find a sequence of compilation passes that minimizes its execution time, and shows promising result in generalizing to real benchmarks and 12,874 different randomly generated programs."
            },
            "venue": {
                "fragments": [],
                "text": "MLSys"
            },
            "year": 2020
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2059804383"
                        ],
                        "name": "Chris Cummins",
                        "slug": "Chris-Cummins",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Cummins",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chris Cummins"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1955185"
                        ],
                        "name": "Pavlos Petoumenos",
                        "slug": "Pavlos-Petoumenos",
                        "structuredName": {
                            "firstName": "Pavlos",
                            "lastName": "Petoumenos",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Pavlos Petoumenos"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "92471582"
                        ],
                        "name": "Zheng Wang",
                        "slug": "Zheng-Wang",
                        "structuredName": {
                            "firstName": "Zheng",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zheng Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2476647"
                        ],
                        "name": "H. Leather",
                        "slug": "H.-Leather",
                        "structuredName": {
                            "firstName": "Hugh",
                            "lastName": "Leather",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Leather"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "To overcome this challenge, [7] proposed an end-to-end solution that relies on deep supervised learning."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "challenge, [7] proposed an end-to-end solution that relies on deep supervised learning."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "In [7] end-to-end supervised deep learning is used to learn compiler heuristics."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 217100774,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c2e3b7e3e8e5de4c41447017ca5fe95123790f6e",
            "isKey": true,
            "numCitedBy": 128,
            "numCiting": 67,
            "paperAbstract": {
                "fragments": [],
                "text": "Accurate automatic optimization heuristics are necessary for dealing with thecomplexity and diversity of modern hardware and software. Machine learning is aproven technique for learning such heuristics, but its success is bound by thequality of the features used. These features must be hand crafted by developersthrough a combination of expert domain knowledge and trial and error. This makesthe quality of the final model directly dependent on the skill and availabletime of the system architect.Our work introduces a better way for building heuristics. We develop a deepneural network that learns heuristics over raw code, entirely without using codefeatures. The neural network simultaneously constructs appropriaterepresentations of the code and learns how best to optimize, removing the needfor manual feature creation. Further, we show that our neural nets can transferlearning from one optimization problem to another, improving the accuracy of newmodels, without the help of human experts.We compare the effectiveness of our automatically generated heuristics againstones with features hand-picked by experts. We examine two challenging tasks:predicting optimal mapping for heterogeneous parallelism and GPU threadcoarsening factors. In 89% of the cases, the quality of our fully automaticheuristics matches or surpasses that of state-of-the-art predictive models usinghand-crafted features, providing on average 14% and 12% more performance withno human effort expended on designing features."
            },
            "slug": "End-to-End-Deep-Learning-of-Optimization-Heuristics-Cummins-Petoumenos",
            "title": {
                "fragments": [],
                "text": "End-to-End Deep Learning of Optimization Heuristics"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A deep neural network is developed that learns heuristics over raw code, entirely without using codefeatures, and it is shown that the neural nets can transferlearning from one optimization problem to another, improving the accuracy of new models, without the help of human experts."
            },
            "venue": {
                "fragments": [],
                "text": "2017 26th International Conference on Parallel Architectures and Compilation Techniques (PACT)"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "11950728"
                        ],
                        "name": "Kevin Stock",
                        "slug": "Kevin-Stock",
                        "structuredName": {
                            "firstName": "Kevin",
                            "lastName": "Stock",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kevin Stock"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1793611"
                        ],
                        "name": "L. Pouchet",
                        "slug": "L.-Pouchet",
                        "structuredName": {
                            "firstName": "Louis-No\u00ebl",
                            "lastName": "Pouchet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Pouchet"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145293384"
                        ],
                        "name": "P. Sadayappan",
                        "slug": "P.-Sadayappan",
                        "structuredName": {
                            "firstName": "P.",
                            "lastName": "Sadayappan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Sadayappan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 17079381,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5c4bd6698d2ad9413bee80b51608d8b0fc0613b9",
            "isKey": false,
            "numCitedBy": 54,
            "numCiting": 42,
            "paperAbstract": {
                "fragments": [],
                "text": "Automatic vectorization is critical to enhancing performance of compute-intensive programs on modern processors. However, there is much room for improvement over the auto-vectorization capabilities of current production compilers through careful vector-code synthesis that utilizes a variety of loop transformations (e.g., unroll-and-jam, interchange, etc.).\n As the set of transformations considered is increased, the selection of the most effective combination of transformations becomes a significant challenge: Currently used cost models in vectorizing compilers are often unable to identify the best choices. In this paper, we address this problem using machine learning models to predict the performance of SIMD codes. In contrast to existing approaches that have used high-level features of the program, we develop machine learning models based on features extracted from the generated assembly code. The models are trained offline on a number of benchmarks and used at compile-time to discriminate between numerous possible vectorized variants generated from the input code.\n We demonstrate the effectiveness of the machine learning model by using it to guide automatic vectorization on a variety of tensor contraction kernels, with improvements ranging from 2\u00d7 to 8\u00d7 over Intel ICC's auto-vectorized code. We also evaluate the effectiveness of the model on a number of stencil computations and show good improvement over auto-vectorized code."
            },
            "slug": "Using-machine-learning-to-improve-automatic-Stock-Pouchet",
            "title": {
                "fragments": [],
                "text": "Using machine learning to improve automatic vectorization"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "The effectiveness of the machine learning model is demonstrated by using it to guide automatic vectorization on a variety of tensor contraction kernels, with improvements ranging from 2\u00d7 to 8\u00d7 over Intel ICC's auto-vectorized code."
            },
            "venue": {
                "fragments": [],
                "text": "TACO"
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2043821"
                        ],
                        "name": "G. Fursin",
                        "slug": "G.-Fursin",
                        "structuredName": {
                            "firstName": "Grigori",
                            "lastName": "Fursin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Fursin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3334002"
                        ],
                        "name": "Yuriy Kashnikov",
                        "slug": "Yuriy-Kashnikov",
                        "structuredName": {
                            "firstName": "Yuriy",
                            "lastName": "Kashnikov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yuriy Kashnikov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3248259"
                        ],
                        "name": "Abdul Wahid Memon",
                        "slug": "Abdul-Wahid-Memon",
                        "structuredName": {
                            "firstName": "Abdul",
                            "lastName": "Memon",
                            "middleNames": [
                                "Wahid"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Abdul Wahid Memon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3148192"
                        ],
                        "name": "Z. Chamski",
                        "slug": "Z.-Chamski",
                        "structuredName": {
                            "firstName": "Zbigniew",
                            "lastName": "Chamski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Z. Chamski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1731764"
                        ],
                        "name": "O. Temam",
                        "slug": "O.-Temam",
                        "structuredName": {
                            "firstName": "Olivier",
                            "lastName": "Temam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Temam"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3305063"
                        ],
                        "name": "Mircea Namolaru",
                        "slug": "Mircea-Namolaru",
                        "structuredName": {
                            "firstName": "Mircea",
                            "lastName": "Namolaru",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Mircea Namolaru"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1388775854"
                        ],
                        "name": "E. Yom-Tov",
                        "slug": "E.-Yom-Tov",
                        "structuredName": {
                            "firstName": "Elad",
                            "lastName": "Yom-Tov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Yom-Tov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1795886"
                        ],
                        "name": "Bilha Mendelson",
                        "slug": "Bilha-Mendelson",
                        "structuredName": {
                            "firstName": "Bilha",
                            "lastName": "Mendelson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Bilha Mendelson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38737579"
                        ],
                        "name": "A. Zaks",
                        "slug": "A.-Zaks",
                        "structuredName": {
                            "firstName": "Ayal",
                            "lastName": "Zaks",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Zaks"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2630186"
                        ],
                        "name": "E. Courtois",
                        "slug": "E.-Courtois",
                        "structuredName": {
                            "firstName": "Eric",
                            "lastName": "Courtois",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Courtois"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1697641"
                        ],
                        "name": "F. Bodin",
                        "slug": "F.-Bodin",
                        "structuredName": {
                            "firstName": "Fran\u00e7ois",
                            "lastName": "Bodin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Bodin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38759952"
                        ],
                        "name": "Phil Barnard",
                        "slug": "Phil-Barnard",
                        "structuredName": {
                            "firstName": "Phil",
                            "lastName": "Barnard",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Phil Barnard"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40580165"
                        ],
                        "name": "Elton Ashton",
                        "slug": "Elton-Ashton",
                        "structuredName": {
                            "firstName": "Elton",
                            "lastName": "Ashton",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Elton Ashton"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "30561807"
                        ],
                        "name": "Edwin V. Bonilla",
                        "slug": "Edwin-V.-Bonilla",
                        "structuredName": {
                            "firstName": "Edwin",
                            "lastName": "Bonilla",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Edwin V. Bonilla"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153031524"
                        ],
                        "name": "J. Thomson",
                        "slug": "J.-Thomson",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Thomson",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Thomson"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145715698"
                        ],
                        "name": "Christopher K. I. Williams",
                        "slug": "Christopher-K.-I.-Williams",
                        "structuredName": {
                            "firstName": "Christopher",
                            "lastName": "Williams",
                            "middleNames": [
                                "K.",
                                "I."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christopher K. I. Williams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401533251"
                        ],
                        "name": "M. O\u2019Boyle",
                        "slug": "M.-O\u2019Boyle",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "O\u2019Boyle",
                            "middleNames": [
                                "F.",
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. O\u2019Boyle"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "For example, the work in [32, 33] proposed deep supervised and RL methods to overcome the phase ordering challenge."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 16124383,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6910d193282b4f00a0a81fdfb0e7dd8ae50648cd",
            "isKey": false,
            "numCitedBy": 226,
            "numCiting": 97,
            "paperAbstract": {
                "fragments": [],
                "text": "Tuning compiler optimizations for rapidly evolving hardware makes porting and extending an optimizing compiler for each new platform extremely challenging. Iterative optimization is a popular approach to adapting programs to a new architecture automatically using feedback-directed compilation. However, the large number of evaluations required for each program has prevented iterative compilation from widespread take-up in production compilers. Machine learning has been proposed to tune optimizations across programs systematically but is currently limited to a few transformations, long training phases and critically lacks publicly released, stable tools. Our approach is to develop a modular, extensible, self-tuning optimization infrastructure to automatically learn the best optimizations across multiple programs and architectures based on the correlation between program features, run-time behavior and optimizations. In this paper we describe Milepost GCC, the first publicly-available open-source machine learning-based compiler. It consists of an Interactive Compilation Interface (ICI) and plugins to extract program features and exchange optimization data with the cTuning.org open public repository. It automatically adapts the internal optimization heuristic at function-level granularity to improve execution time, code size and compilation time of a new program on a given architecture. Part of the MILEPOST technology together with low-level ICI-inspired plugin framework is now included in the mainline GCC. We developed machine learning plugins based on probabilistic and transductive approaches to predict good combinations of optimizations. Our preliminary experimental results show that it is possible to automatically reduce the execution time of individual MiBench programs, some by more than a factor of 2, while also improving compilation time and code size. On average we are able to reduce the execution time of the MiBench benchmark suite by 11% for the ARC reconfigurable processor. We also present a realistic multi-objective optimization scenario for Berkeley DB library using Milepost GCC and improve execution time by approximately 17%, while reducing compilation time and code size by 12% and 7% respectively on Intel Xeon processor."
            },
            "slug": "Milepost-GCC:-Machine-Learning-Enabled-Self-tuning-Fursin-Kashnikov",
            "title": {
                "fragments": [],
                "text": "Milepost GCC: Machine Learning Enabled Self-tuning Compiler"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "Milepost GCC is described, the first publicly-available open-source machine learning-based compiler that automatically adapts the internal optimization heuristic at function-level granularity to improve execution time, code size and compilation time of a new program on a given architecture."
            },
            "venue": {
                "fragments": [],
                "text": "International Journal of Parallel Programming"
            },
            "year": 2010
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [],
                        "name": "Ameer Haj-Ali",
                        "slug": "Ameer-Haj-Ali",
                        "structuredName": {
                            "firstName": "Ameer",
                            "lastName": "Haj-Ali",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ameer Haj-Ali"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47699955"
                        ],
                        "name": "Nesreen Ahmed",
                        "slug": "Nesreen-Ahmed",
                        "structuredName": {
                            "firstName": "Nesreen",
                            "lastName": "Ahmed",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nesreen Ahmed"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "102992766"
                        ],
                        "name": "Ted L. Willke",
                        "slug": "Ted-L.-Willke",
                        "structuredName": {
                            "firstName": "Ted",
                            "lastName": "Willke",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ted L. Willke"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144307989"
                        ],
                        "name": "Joseph Gonzalez",
                        "slug": "Joseph-Gonzalez",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Gonzalez",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Joseph Gonzalez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1760896"
                        ],
                        "name": "K. Asanovi\u0107",
                        "slug": "K.-Asanovi\u0107",
                        "structuredName": {
                            "firstName": "Krste",
                            "lastName": "Asanovi\u0107",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Asanovi\u0107"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144467753"
                        ],
                        "name": "I. Stoica",
                        "slug": "I.-Stoica",
                        "structuredName": {
                            "firstName": "Ion",
                            "lastName": "Stoica",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Stoica"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 202539882,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "bb70d027935033808f1a5504ec120fb4da833338",
            "isKey": false,
            "numCitedBy": 19,
            "numCiting": 85,
            "paperAbstract": {
                "fragments": [],
                "text": "Many real-world systems problems require reasoning about the long term consequences of actions taken to configure and manage the system. These problems with delayed and often sequentially aggregated reward, are often inherently reinforcement learning problems and present the opportunity to leverage the recent substantial advances in deep reinforcement learning. However, in some cases, it is not clear why deep reinforcement learning is a good fit for the problem. Sometimes, it does not perform better than the state-of-the-art solutions. And in other cases, random search or greedy algorithms could outperform deep reinforcement learning. In this paper, we review, discuss, and evaluate the recent trends of using deep reinforcement learning in system optimization. We propose a set of essential metrics to guide future works in evaluating the efficacy of using deep reinforcement learning in system optimization. Our evaluation includes challenges, the types of problems, their formulation in the deep reinforcement learning setting, embedding, the model used, efficiency, and robustness. We conclude with a discussion on open challenges and potential directions for pushing further the integration of reinforcement learning in system optimization."
            },
            "slug": "A-View-on-Deep-Reinforcement-Learning-in-System-Haj-Ali-Ahmed",
            "title": {
                "fragments": [],
                "text": "A View on Deep Reinforcement Learning in System Optimization"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "A set of essential metrics is proposed to guide future works in evaluating the efficacy of using deep reinforcement learning in system optimization, and includes challenges, the types of problems, their formulation in the deep reinforcementLearning setting, embedding, the model used, efficiency, and robustness."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40274002"
                        ],
                        "name": "Eric Liang",
                        "slug": "Eric-Liang",
                        "structuredName": {
                            "firstName": "Eric",
                            "lastName": "Liang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eric Liang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3393220"
                        ],
                        "name": "Richard Liaw",
                        "slug": "Richard-Liaw",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Liaw",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Richard Liaw"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34994156"
                        ],
                        "name": "Robert Nishihara",
                        "slug": "Robert-Nishihara",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Nishihara",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Robert Nishihara"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "29912342"
                        ],
                        "name": "Philipp Moritz",
                        "slug": "Philipp-Moritz",
                        "structuredName": {
                            "firstName": "Philipp",
                            "lastName": "Moritz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Philipp Moritz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145609073"
                        ],
                        "name": "Roy Fox",
                        "slug": "Roy-Fox",
                        "structuredName": {
                            "firstName": "Roy",
                            "lastName": "Fox",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Roy Fox"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144307989"
                        ],
                        "name": "Joseph Gonzalez",
                        "slug": "Joseph-Gonzalez",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Gonzalez",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Joseph Gonzalez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144344283"
                        ],
                        "name": "Ken Goldberg",
                        "slug": "Ken-Goldberg",
                        "structuredName": {
                            "firstName": "Ken",
                            "lastName": "Goldberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ken Goldberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144467753"
                        ],
                        "name": "I. Stoica",
                        "slug": "I.-Stoica",
                        "structuredName": {
                            "firstName": "Ion",
                            "lastName": "Stoica",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Stoica"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 42,
                                "start": 38
                            }
                        ],
                        "text": "To run our RL algorithms we use RLlib [18] and Tune [19], open-source libraries for RL that offer, high scalability, hyper-parameter tuning and a unified API for a variety of applications."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 37,
                                "start": 32
                            }
                        ],
                        "text": "To run our RL algorithms we use RLlib [24] and Tune [25], open-source libraries for RL that offer, high scalability, hyper-parameter tuning and a unified API for a variety of applications."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 5,
                                "start": 0
                            }
                        ],
                        "text": "RLlib and Tune are built on top of Ray [26],\na high-performance distributed execution framework targeted at large-scale machine learning and RL applications."
                    },
                    "intents": []
                }
            ],
            "corpusId": 195346744,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "1e5f4c62b36dc90e3a45b717005b446d52a1b1d7",
            "isKey": false,
            "numCitedBy": 112,
            "numCiting": 57,
            "paperAbstract": {
                "fragments": [],
                "text": "Reinforcement learning (RL) algorithms involve the deep nesting of distinct components, where each component typically exhibits opportunities for distributed computation. Current RL libraries offer parallelism at the level of the entire program, coupling all the components together and making existing implementations difficult to extend, combine, and reuse. We argue for building composable RL components by encapsulating parallelism and resource requirements within individual components, which can be achieved by building on top of a flexible task-based programming model. We demonstrate this principle by building Ray RLLib on top of Ray and show that we can implement a wide range of state-of-the-art algorithms by composing and reusing a handful of standard components. This composability does not come at the cost of performance --- in our experiments, RLLib matches or exceeds the performance of highly optimized reference implementations. Ray RLLib is available as part of Ray at this https URL"
            },
            "slug": "Ray-RLLib:-A-Composable-and-Scalable-Reinforcement-Liang-Liaw",
            "title": {
                "fragments": [],
                "text": "Ray RLLib: A Composable and Scalable Reinforcement Learning Library"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This work builds Ray RLLib on top of Ray and shows that it can implement a wide range of state-of-the-art algorithms by composing and reusing a handful of standard components, and does not come at the cost of performance."
            },
            "venue": {
                "fragments": [],
                "text": "NIPS 2017"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2206135"
                        ],
                        "name": "Amir H. Ashouri",
                        "slug": "Amir-H.-Ashouri",
                        "structuredName": {
                            "firstName": "Amir",
                            "lastName": "Ashouri",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Amir H. Ashouri"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46315768"
                        ],
                        "name": "W. Killian",
                        "slug": "W.-Killian",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Killian",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Killian"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1874233"
                        ],
                        "name": "J. Cavazos",
                        "slug": "J.-Cavazos",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Cavazos",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Cavazos"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144570312"
                        ],
                        "name": "G. Palermo",
                        "slug": "G.-Palermo",
                        "structuredName": {
                            "firstName": "Gianluca",
                            "lastName": "Palermo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Palermo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1784619"
                        ],
                        "name": "C. Silvano",
                        "slug": "C.-Silvano",
                        "structuredName": {
                            "firstName": "Cristina",
                            "lastName": "Silvano",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Silvano"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 76,
                                "start": 68
                            }
                        ],
                        "text": "Previous work has utilizedmachine learning in compiler optimization [30, 31]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 4096056,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e1d7e18915bd8991373404ea157c3599e493122f",
            "isKey": false,
            "numCitedBy": 117,
            "numCiting": 408,
            "paperAbstract": {
                "fragments": [],
                "text": "Since the mid-1990s, researchers have been trying to use machine-learning-based approaches to solve a number of different compiler optimization problems. These techniques primarily enhance the quality of the obtained results and, more importantly, make it feasible to tackle two main compiler optimization problems: optimization selection (choosing which optimizations to apply) and phase-ordering (choosing the order of applying optimizations). The compiler optimization space continues to grow due to the advancement of applications, increasing number of compiler optimizations, and new target architectures. Generic optimization passes in compilers cannot fully leverage newly introduced optimizations and, therefore, cannot keep up with the pace of increasing options. This survey summarizes and classifies the recent advances in using machine learning for the compiler optimization field, particularly on the two major problems of (1) selecting the best optimizations, and (2) the phase-ordering of optimizations. The survey highlights the approaches taken so far, the obtained results, the fine-grain classification among different approaches, and finally, the influential papers of the field."
            },
            "slug": "A-Survey-on-Compiler-Autotuning-using-Machine-Ashouri-Killian",
            "title": {
                "fragments": [],
                "text": "A Survey on Compiler Autotuning using Machine Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 48,
                "text": "This survey summarizes and classifies the recent advances in using machine learning for the compiler optimization field, particularly on the two major problems of selecting the best optimizations, and the phase-ordering of optimizations."
            },
            "venue": {
                "fragments": [],
                "text": "ACM Comput. Surv."
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2059804383"
                        ],
                        "name": "Chris Cummins",
                        "slug": "Chris-Cummins",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Cummins",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chris Cummins"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1955185"
                        ],
                        "name": "Pavlos Petoumenos",
                        "slug": "Pavlos-Petoumenos",
                        "structuredName": {
                            "firstName": "Pavlos",
                            "lastName": "Petoumenos",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Pavlos Petoumenos"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [],
                        "name": "Zheng Wang",
                        "slug": "Zheng-Wang",
                        "structuredName": {
                            "firstName": "Zheng",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zheng Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2476647"
                        ],
                        "name": "H. Leather",
                        "slug": "H.-Leather",
                        "structuredName": {
                            "firstName": "Hugh",
                            "lastName": "Leather",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Leather"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "Unfortunately, these features are typically not sufficient to fully capture the code functionality [12]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "enough resources, the number of open-source benchmarks available for training is very small [12]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 215755891,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e4bcb45990a928ac06df4dc24dc07e16fcac9141",
            "isKey": false,
            "numCitedBy": 76,
            "numCiting": 63,
            "paperAbstract": {
                "fragments": [],
                "text": "Predictive modeling using machine learning is an effective method for building compiler heuristics, but there is a shortage of benchmarks. Typical machine learning experiments outside of the compilation field train over thousands or millions of examples. In machine learning for compilers, however, there are typically only a few dozen common benchmarks available. This limits the quality of learned models, as they have very sparse training data for what are often high-dimensional feature spaces. What is needed is a way to generate an unbounded number of training programs that finely cover the feature space. At the same time the generated programs must be similar to the types of programs that human developers actually write, otherwise the learning will target the wrong parts of the feature space. We mine open source repositories for program fragments and apply deep learning techniques to automatically construct models for how humans write programs. We sample these models to generate an unbounded number of runnable training programs. The quality of the programs is such that even human developers struggle to distinguish our generated programs from hand-written code. We use our generator for OpenCL programs, CLgen, to automatically synthesize thousands of programs and show that learning over these improves the performance of a state of the art predictive model by 1.27x. In addition, the fine covering of the feature space automatically exposes weaknesses in the feature design which are invisible with the sparse training examples from existing benchmark suites. Correcting these weaknesses further increases performance by 4.30x."
            },
            "slug": "Synthesizing-benchmarks-for-predictive-modeling-Cummins-Petoumenos",
            "title": {
                "fragments": [],
                "text": "Synthesizing benchmarks for predictive modeling"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "The authors' generator for OpenCL programs, CLgen, is used to automatically synthesize thousands of programs and it is shown that learning over these improves the performance of a state of the art predictive model by 1.27x."
            },
            "venue": {
                "fragments": [],
                "text": "2017 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47051926"
                        ],
                        "name": "Uri Alon",
                        "slug": "Uri-Alon",
                        "structuredName": {
                            "firstName": "Uri",
                            "lastName": "Alon",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Uri Alon"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "20809735"
                        ],
                        "name": "Meital Zilberstein",
                        "slug": "Meital-Zilberstein",
                        "structuredName": {
                            "firstName": "Meital",
                            "lastName": "Zilberstein",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Meital Zilberstein"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39455775"
                        ],
                        "name": "Omer Levy",
                        "slug": "Omer-Levy",
                        "structuredName": {
                            "firstName": "Omer",
                            "lastName": "Levy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Omer Levy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1743232"
                        ],
                        "name": "Eran Yahav",
                        "slug": "Eran-Yahav",
                        "structuredName": {
                            "firstName": "Eran",
                            "lastName": "Yahav",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eran Yahav"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "ork. Another example is to use a neural network model pretrained with labels that describe the functionality, e.g., matrix multiplications, dot product, convolution, etc. In this work we use code2vec [21]. Code2vec is a neural network model that relies on natural language processing [22] and attention [23] for representing snippets of code as continuously distributed vectors. Code2vec represents a cod"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 4710028,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "73bade9162bc4df6ca6c9ab8a7eb2d54d35acad2",
            "isKey": false,
            "numCitedBy": 581,
            "numCiting": 119,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a neural model for representing snippets of code as continuous distributed vectors (``code embeddings''). The main idea is to represent a code snippet as a single fixed-length code vector, which can be used to predict semantic properties of the snippet. To this end, code is first decomposed to a collection of paths in its abstract syntax tree. Then, the network learns the atomic representation of each path while simultaneously learning how to aggregate a set of them. We demonstrate the effectiveness of our approach by using it to predict a method's name from the vector representation of its body. We evaluate our approach by training a model on a dataset of 12M methods. We show that code vectors trained on this dataset can predict method names from files that were unobserved during training. Furthermore, we show that our model learns useful method name vectors that capture semantic similarities, combinations, and analogies. A comparison of our approach to previous techniques over the same dataset shows an improvement of more than 75%, making it the first to successfully predict method names based on a large, cross-project corpus. Our trained model, visualizations and vector similarities are available as an interactive online demo at http://code2vec.org. The code, data and trained models are available at https://github.com/tech-srl/code2vec."
            },
            "slug": "code2vec:-learning-distributed-representations-of-Alon-Zilberstein",
            "title": {
                "fragments": [],
                "text": "code2vec: learning distributed representations of code"
            },
            "tldr": {
                "abstractSimilarityScore": 73,
                "text": "A neural model for representing snippets of code as continuous distributed vectors as a single fixed-length code vector which can be used to predict semantic properties of the snippet, making it the first to successfully predict method names based on a large, cross-project corpus."
            },
            "venue": {
                "fragments": [],
                "text": "Proc. ACM Program. Lang."
            },
            "year": 2019
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1755190"
                        ],
                        "name": "Dorit Nuzman",
                        "slug": "Dorit-Nuzman",
                        "structuredName": {
                            "firstName": "Dorit",
                            "lastName": "Nuzman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dorit Nuzman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2133878"
                        ],
                        "name": "Sergei Dyshel",
                        "slug": "Sergei-Dyshel",
                        "structuredName": {
                            "firstName": "Sergei",
                            "lastName": "Dyshel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sergei Dyshel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2870500"
                        ],
                        "name": "Erven Rohou",
                        "slug": "Erven-Rohou",
                        "structuredName": {
                            "firstName": "Erven",
                            "lastName": "Rohou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Erven Rohou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153090846"
                        ],
                        "name": "Ira Rosen",
                        "slug": "Ira-Rosen",
                        "structuredName": {
                            "firstName": "Ira",
                            "lastName": "Rosen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ira Rosen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50678208"
                        ],
                        "name": "K. Williams",
                        "slug": "K.-Williams",
                        "structuredName": {
                            "firstName": "Kevin",
                            "lastName": "Williams",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Williams"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1867308"
                        ],
                        "name": "D. Yuste",
                        "slug": "D.-Yuste",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Yuste",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Yuste"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145509576"
                        ],
                        "name": "Albert Cohen",
                        "slug": "Albert-Cohen",
                        "structuredName": {
                            "firstName": "Albert",
                            "lastName": "Cohen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Albert Cohen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38737579"
                        ],
                        "name": "A. Zaks",
                        "slug": "A.-Zaks",
                        "structuredName": {
                            "firstName": "Ayal",
                            "lastName": "Zaks",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Zaks"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 107,
                                "start": 95
                            }
                        ],
                        "text": "For example, the currently implemented cost model in LLVM and recently proposed cost models in [24, 37, 38] rely on predefined cost functions that calculate the expected execution time of a vectorized loop based on a linear formula from the instruction distribution."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 12097402,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4a31ad65c9b5e00908e560ff7eb772b7ab4066ee",
            "isKey": false,
            "numCitedBy": 83,
            "numCiting": 32,
            "paperAbstract": {
                "fragments": [],
                "text": "Just-in-Time (JIT) compiler technology offers portability while facilitating target- and context-specific specialization. Single-Instruction-Multiple-Data (SIMD) hardware is ubiquitous and markedly diverse, but can be difficult for JIT compilers to efficiently target due to resource and budget constraints. We present our design for a synergistic auto-vectorizing compilation scheme. The scheme is composed of an aggressive, generic offline stage coupled with a lightweight, target-specific online stage. Our method leverages the optimized intermediate results provided by the first stage across disparate SIMD architectures from different vendors, having distinct characteristics ranging from different vector sizes, memory alignment and access constraints, to special computational idioms. We demonstrate the effectiveness of our design using a set of kernels that exercise innermost loop, outer loop, as well as straight-line code vectorization, all automatically extracted by the common offline compilation stage. This results in performance comparable to that provided by specialized monolithic offline compilers. Our framework is implemented using open-source tools and standards, thereby promoting interoperability and extendibility."
            },
            "slug": "Vapor-SIMD:-Auto-vectorize-once,-run-everywhere-Nuzman-Dyshel",
            "title": {
                "fragments": [],
                "text": "Vapor SIMD: Auto-vectorize once, run everywhere"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This work presents a synergistic auto-vectorizing compilation scheme that leverages the optimized intermediate results provided by the first stage across disparate SIMD architectures from different vendors, having distinct characteristics ranging from different vector sizes, memory alignment and access constraints, to special computational idioms."
            },
            "venue": {
                "fragments": [],
                "text": "International Symposium on Code Generation and Optimization (CGO 2011)"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2759686"
                        ],
                        "name": "K. Trifunovic",
                        "slug": "K.-Trifunovic",
                        "structuredName": {
                            "firstName": "Konrad",
                            "lastName": "Trifunovic",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Trifunovic"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1755190"
                        ],
                        "name": "Dorit Nuzman",
                        "slug": "Dorit-Nuzman",
                        "structuredName": {
                            "firstName": "Dorit",
                            "lastName": "Nuzman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dorit Nuzman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145509576"
                        ],
                        "name": "Albert Cohen",
                        "slug": "Albert-Cohen",
                        "structuredName": {
                            "firstName": "Albert",
                            "lastName": "Cohen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Albert Cohen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38737579"
                        ],
                        "name": "A. Zaks",
                        "slug": "A.-Zaks",
                        "structuredName": {
                            "firstName": "Ayal",
                            "lastName": "Zaks",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Zaks"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153090846"
                        ],
                        "name": "Ira Rosen",
                        "slug": "Ira-Rosen",
                        "structuredName": {
                            "firstName": "Ira",
                            "lastName": "Rosen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ira Rosen"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 68,
                                "start": 62
                            }
                        ],
                        "text": "The current vectorizer used in LLVM and proposed improvements [3, 4], rely on linear and constant-cost models to predict the vectorization factors."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 105,
                                "start": 95
                            }
                        ],
                        "text": "For example, the currently implemented cost model in LLVM and recently proposed cost models in [3, 4, 32] rely on predefined cost functions that calculate the expected execution time of a vectorized loop based on a linear formula from the instruction distribution."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 564675,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "db9f78176b27de866704536f44824f1d3af13402",
            "isKey": false,
            "numCitedBy": 115,
            "numCiting": 28,
            "paperAbstract": {
                "fragments": [],
                "text": "Optimizing compilers strive to construct efficient executables by applying sequences of transformations. Additional transformations are constantly being devised, with various mutual interactions among them, thereby exacerbating the notoriously difficult phase-ordering problem --- that of deciding which transformations to apply and in which order. Fortunately, new infrastructures such as the polyhedral compilation framework host a variety of transformations, facilitating the efficient exploration and configuration of multiple transformation sequences. Many powerful optimizations, however, remain external to the polyhedral framework, with potential mutual interactions that need to be considered. In this paper we examine the interactions between loop transformations of the polyhedral compilation framework and subsequent vectorization optimizations targeting fine-grain SIMD data-level parallelism. Automatic vectorization involves many low-level, target-specific considerations and transformations, which currently exclude it from being part of the polyhedral framework. In order to consider potential interactions among polyhedral loop transformations and vectorization, we first model the performance impact of the different loop transformations and vectorization strategies, and then show how this cost model can be integrated seamlessly into the polyhedral representation. This predictive modelling then facilitates efficient exploration and educated decision making on how to best apply various polyhedral loop transformations while considering the subsequent effects of different vectorization schemes. Our work demonstrates the feasibility and benefit of tuning the polyhedral model in the context of vectorization. Experimental results confirm that our model has accurate predictions, providing speedups of over 2 on average over traditional innermost-loop vectorization on PowerPC970 and Cell-SPU SIMD platforms."
            },
            "slug": "Polyhedral-Model-Guided-Loop-Nest-Trifunovic-Nuzman",
            "title": {
                "fragments": [],
                "text": "Polyhedral-Model Guided Loop-Nest Auto-Vectorization"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "This paper examines the interactions between loop transformations of the polyhedral compilation framework and subsequent vectorization optimizations targeting fine-grain SIMD data-level parallelism, and demonstrates the feasibility and benefit of tuning thepolyhedral model in the context of vectorization."
            },
            "venue": {
                "fragments": [],
                "text": "2009 18th International Conference on Parallel Architectures and Compilation Techniques"
            },
            "year": 2009
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145824029"
                        ],
                        "name": "David Silver",
                        "slug": "David-Silver",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Silver",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David Silver"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1885349"
                        ],
                        "name": "Aja Huang",
                        "slug": "Aja-Huang",
                        "structuredName": {
                            "firstName": "Aja",
                            "lastName": "Huang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Aja Huang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2772217"
                        ],
                        "name": "Chris J. Maddison",
                        "slug": "Chris-J.-Maddison",
                        "structuredName": {
                            "firstName": "Chris",
                            "lastName": "Maddison",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Chris J. Maddison"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35099444"
                        ],
                        "name": "A. Guez",
                        "slug": "A.-Guez",
                        "structuredName": {
                            "firstName": "Arthur",
                            "lastName": "Guez",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Guez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2175946"
                        ],
                        "name": "L. Sifre",
                        "slug": "L.-Sifre",
                        "structuredName": {
                            "firstName": "L.",
                            "lastName": "Sifre",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Sifre"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47568983"
                        ],
                        "name": "George van den Driessche",
                        "slug": "George-van-den-Driessche",
                        "structuredName": {
                            "firstName": "George",
                            "lastName": "Driessche",
                            "middleNames": [
                                "van",
                                "den"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "George van den Driessche"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "4337102"
                        ],
                        "name": "Julian Schrittwieser",
                        "slug": "Julian-Schrittwieser",
                        "structuredName": {
                            "firstName": "Julian",
                            "lastName": "Schrittwieser",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Julian Schrittwieser"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2460849"
                        ],
                        "name": "Ioannis Antonoglou",
                        "slug": "Ioannis-Antonoglou",
                        "structuredName": {
                            "firstName": "Ioannis",
                            "lastName": "Antonoglou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ioannis Antonoglou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2749418"
                        ],
                        "name": "Vedavyas Panneershelvam",
                        "slug": "Vedavyas-Panneershelvam",
                        "structuredName": {
                            "firstName": "Vedavyas",
                            "lastName": "Panneershelvam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vedavyas Panneershelvam"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1975889"
                        ],
                        "name": "Marc Lanctot",
                        "slug": "Marc-Lanctot",
                        "structuredName": {
                            "firstName": "Marc",
                            "lastName": "Lanctot",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Marc Lanctot"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48373216"
                        ],
                        "name": "S. Dieleman",
                        "slug": "S.-Dieleman",
                        "structuredName": {
                            "firstName": "Sander",
                            "lastName": "Dieleman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Dieleman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2401609"
                        ],
                        "name": "Dominik Grewe",
                        "slug": "Dominik-Grewe",
                        "structuredName": {
                            "firstName": "Dominik",
                            "lastName": "Grewe",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dominik Grewe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "4111313"
                        ],
                        "name": "John Nham",
                        "slug": "John-Nham",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Nham",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "John Nham"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2583391"
                        ],
                        "name": "Nal Kalchbrenner",
                        "slug": "Nal-Kalchbrenner",
                        "structuredName": {
                            "firstName": "Nal",
                            "lastName": "Kalchbrenner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Nal Kalchbrenner"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1701686"
                        ],
                        "name": "Ilya Sutskever",
                        "slug": "Ilya-Sutskever",
                        "structuredName": {
                            "firstName": "Ilya",
                            "lastName": "Sutskever",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ilya Sutskever"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2542999"
                        ],
                        "name": "T. Lillicrap",
                        "slug": "T.-Lillicrap",
                        "structuredName": {
                            "firstName": "Timothy",
                            "lastName": "Lillicrap",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Lillicrap"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40662181"
                        ],
                        "name": "M. Leach",
                        "slug": "M.-Leach",
                        "structuredName": {
                            "firstName": "Madeleine",
                            "lastName": "Leach",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Leach"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2645384"
                        ],
                        "name": "K. Kavukcuoglu",
                        "slug": "K.-Kavukcuoglu",
                        "structuredName": {
                            "firstName": "Koray",
                            "lastName": "Kavukcuoglu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Kavukcuoglu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1686971"
                        ],
                        "name": "T. Graepel",
                        "slug": "T.-Graepel",
                        "structuredName": {
                            "firstName": "Thore",
                            "lastName": "Graepel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Graepel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48987704"
                        ],
                        "name": "D. Hassabis",
                        "slug": "D.-Hassabis",
                        "structuredName": {
                            "firstName": "Demis",
                            "lastName": "Hassabis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Hassabis"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "Deep RL was the key technique behind defeating the human European champion in the game of Go, which has long been viewed as the most challenging of classic games for artificial intelligence [19]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 515925,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "846aedd869a00c09b40f1f1f35673cb22bc87490",
            "isKey": false,
            "numCitedBy": 11516,
            "numCiting": 81,
            "paperAbstract": {
                "fragments": [],
                "text": "The game of Go has long been viewed as the most challenging of classic games for artificial intelligence owing to its enormous search space and the difficulty of evaluating board positions and moves. Here we introduce a new approach to computer Go that uses \u2018value networks\u2019 to evaluate board positions and \u2018policy networks\u2019 to select moves. These deep neural networks are trained by a novel combination of supervised learning from human expert games, and reinforcement learning from games of self-play. Without any lookahead search, the neural networks play Go at the level of state-of-the-art Monte Carlo tree search programs that simulate thousands of random games of self-play. We also introduce a new search algorithm that combines Monte Carlo simulation with value and policy networks. Using this search algorithm, our program AlphaGo achieved a 99.8% winning rate against other Go programs, and defeated the human European Go champion by 5 games to 0. This is the first time that a computer program has defeated a human professional player in the full-sized game of Go, a feat previously thought to be at least a decade away."
            },
            "slug": "Mastering-the-game-of-Go-with-deep-neural-networks-Silver-Huang",
            "title": {
                "fragments": [],
                "text": "Mastering the game of Go with deep neural networks and tree search"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "Using this search algorithm, the program AlphaGo achieved a 99.8% winning rate against other Go programs, and defeated the human European Go champion by 5 games to 0.5, the first time that a computer program has defeated a human professional player in the full-sized game of Go."
            },
            "venue": {
                "fragments": [],
                "text": "Nature"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2589074"
                        ],
                        "name": "Vasileios Porpodas",
                        "slug": "Vasileios-Porpodas",
                        "structuredName": {
                            "firstName": "Vasileios",
                            "lastName": "Porpodas",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vasileios Porpodas"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "ress loop vectorization and relies on the baseline cost model to predict when some portions of code are better off not vectorized. Also, [37] relies on heuristics to automatically vectorize. Finally, [38, 39] improve SLP and rely on fixed cost models such as weighted instruction count or the current LLVM cost models. 7 Conclusion In this work, we proposed and developed an end-to-end vectorization framewor"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 6997955,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d74d47c5eaa8d970fca764701a15da0b8e5d7314",
            "isKey": false,
            "numCitedBy": 10,
            "numCiting": 30,
            "paperAbstract": {
                "fragments": [],
                "text": "SIMD vectors help improve the performance of certain applications. The code gets vectorized into SIMD form either by hand, or automatically with auto-vectorizing compilers. The Superword-Level Parallelism (SLP) vectorization algorithm is a widely used algorithm for vectorizing straight-line code and is part of most industrial compilers. The algorithm attempts to pack scalar instructions into vectors starting from specific seed instructions in a bottom-up way. This approach, however, suffers from two main problems: (i) the algorithm may not reach instructions that could have been vectorized, and (ii) atomically operating on individual SLP graphs suffers from cost overestimation when consecutive SLP graphs share data. Both issues lead to missed vectorization opportunities even in simple code.In this work we propose SuperGraph-SLP (SG-SLP), an improved vectorization algorithm that overcomes these limitations of the existing algorithm. SG-SLP operates on a larger region, called the SuperGraph. This allows it to reach and successfully vectorize code that was previously unreachable. Moreover, the new region helps eliminate the inaccuracies in the cost-calculation as it allows for a more holistic view of the code. Our experiments show that SG-SLP improves the vectorization coverage and outperforms the state-of-the-art SLP across a number kernels by 36% on average, without affecting the compilation time."
            },
            "slug": "SuperGraph-SLP-Auto-Vectorization-Porpodas",
            "title": {
                "fragments": [],
                "text": "SuperGraph-SLP Auto-Vectorization"
            },
            "tldr": {
                "abstractSimilarityScore": 46,
                "text": "The experiments show that SG-SLP improves the vectorization coverage and outperforms the state-of-the-art SLP across a number kernels by 36% on average, without affecting the compilation time."
            },
            "venue": {
                "fragments": [],
                "text": "2017 26th International Conference on Parallel Architectures and Compilation Techniques (PACT)"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2589074"
                        ],
                        "name": "Vasileios Porpodas",
                        "slug": "Vasileios-Porpodas",
                        "structuredName": {
                            "firstName": "Vasileios",
                            "lastName": "Porpodas",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vasileios Porpodas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1412583691"
                        ],
                        "name": "A. Magni",
                        "slug": "A.-Magni",
                        "structuredName": {
                            "firstName": "Alberto",
                            "lastName": "Magni",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Magni"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32482326"
                        ],
                        "name": "Timothy M. Jones",
                        "slug": "Timothy-M.-Jones",
                        "structuredName": {
                            "firstName": "Timothy",
                            "lastName": "Jones",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Timothy M. Jones"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "ress loop vectorization and relies on the baseline cost model to predict when some portions of code are better off not vectorized. Also, [37] relies on heuristics to automatically vectorize. Finally, [38, 39] improve SLP and rely on fixed cost models such as weighted instruction count or the current LLVM cost models. 7 Conclusion In this work, we proposed and developed an end-to-end vectorization framewor"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 8294881,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "58e8a28a202575f481c0723a54cf83972584b605",
            "isKey": false,
            "numCitedBy": 39,
            "numCiting": 36,
            "paperAbstract": {
                "fragments": [],
                "text": "The need to increase performance and power efficiency in modern processors has led to a wide adoption of SIMD vector units. All major vendors support vector instructions and the trend is pushing them to become wider and more powerful. However, writing code that makes efficient use of these units is hard and leads to platform-specific implementations. Compiler-based automatic vectorization is one solution for this problem. In particular the Superword-Level Parallelism (SLP) vectorization algorithm is the primary way to automatically generate vector code starting from straight-line scalar code. SLP is implemented in all major compilers, including GCC and LLVM. SLP relies on finding sequences of isomorphic instructions to pack together into vectors. However, this hinders the applicability of the algorithm as isomorphic code sequences are not common in practice. In this work we propose a solution to overcome this limitation. We introduce Padded SLP (PSLP), a novel vectorization algorithm that can vectorize code containing non-isomorphic instruction sequences. It injects a near-minimal number of redundant instructions into the code to transform non-isomorphic sequences into isomorphic ones. The padded instruction sequence can then be successfully vectorized. Our experiments show that PSLP improves vectorization coverage across a number of kernels and full benchmarks, decreasing execution time by up to 63%."
            },
            "slug": "PSLP:-Padded-SLP-automatic-vectorization-Porpodas-Magni",
            "title": {
                "fragments": [],
                "text": "PSLP: Padded SLP automatic vectorization"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "Padded SLP (PSLP) is introduced, a novel vectorization algorithm that can vectorize code containing non-isomorphic instruction sequences and improves vectorization coverage across a number of kernels and full benchmarks, decreasing execution time by up to 63%."
            },
            "venue": {
                "fragments": [],
                "text": "2015 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3255983"
                        ],
                        "name": "Volodymyr Mnih",
                        "slug": "Volodymyr-Mnih",
                        "structuredName": {
                            "firstName": "Volodymyr",
                            "lastName": "Mnih",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Volodymyr Mnih"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2645384"
                        ],
                        "name": "K. Kavukcuoglu",
                        "slug": "K.-Kavukcuoglu",
                        "structuredName": {
                            "firstName": "Koray",
                            "lastName": "Kavukcuoglu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Kavukcuoglu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145824029"
                        ],
                        "name": "David Silver",
                        "slug": "David-Silver",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Silver",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David Silver"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1753223"
                        ],
                        "name": "A. Graves",
                        "slug": "A.-Graves",
                        "structuredName": {
                            "firstName": "Alex",
                            "lastName": "Graves",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Graves"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2460849"
                        ],
                        "name": "Ioannis Antonoglou",
                        "slug": "Ioannis-Antonoglou",
                        "structuredName": {
                            "firstName": "Ioannis",
                            "lastName": "Antonoglou",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ioannis Antonoglou"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1688276"
                        ],
                        "name": "Daan Wierstra",
                        "slug": "Daan-Wierstra",
                        "structuredName": {
                            "firstName": "Daan",
                            "lastName": "Wierstra",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daan Wierstra"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3137672"
                        ],
                        "name": "Martin A. Riedmiller",
                        "slug": "Martin-A.-Riedmiller",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Riedmiller",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Martin A. Riedmiller"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 15238391,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2319a491378867c7049b3da055c5df60e1671158",
            "isKey": false,
            "numCitedBy": 6930,
            "numCiting": 37,
            "paperAbstract": {
                "fragments": [],
                "text": "We present the first deep learning model to successfully learn control policies directly from high-dimensional sensory input using reinforcement learning. The model is a convolutional neural network, trained with a variant of Q-learning, whose input is raw pixels and whose output is a value function estimating future rewards. We apply our method to seven Atari 2600 games from the Arcade Learning Environment, with no adjustment of the architecture or learning algorithm. We find that it outperforms all previous approaches on six of the games and surpasses a human expert on three of them."
            },
            "slug": "Playing-Atari-with-Deep-Reinforcement-Learning-Mnih-Kavukcuoglu",
            "title": {
                "fragments": [],
                "text": "Playing Atari with Deep Reinforcement Learning"
            },
            "tldr": {
                "abstractSimilarityScore": 72,
                "text": "This work presents the first deep learning model to successfully learn control policies directly from high-dimensional sensory input using reinforcement learning, which outperforms all previous approaches on six of the games and surpasses a human expert on three of them."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2013
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "29912342"
                        ],
                        "name": "Philipp Moritz",
                        "slug": "Philipp-Moritz",
                        "structuredName": {
                            "firstName": "Philipp",
                            "lastName": "Moritz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Philipp Moritz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34994156"
                        ],
                        "name": "Robert Nishihara",
                        "slug": "Robert-Nishihara",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Nishihara",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Robert Nishihara"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2117867"
                        ],
                        "name": "Stephanie Wang",
                        "slug": "Stephanie-Wang",
                        "structuredName": {
                            "firstName": "Stephanie",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stephanie Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144312193"
                        ],
                        "name": "Alexey Tumanov",
                        "slug": "Alexey-Tumanov",
                        "structuredName": {
                            "firstName": "Alexey",
                            "lastName": "Tumanov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alexey Tumanov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3393220"
                        ],
                        "name": "Richard Liaw",
                        "slug": "Richard-Liaw",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Liaw",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Richard Liaw"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40274002"
                        ],
                        "name": "Eric Liang",
                        "slug": "Eric-Liang",
                        "structuredName": {
                            "firstName": "Eric",
                            "lastName": "Liang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eric Liang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2058356165"
                        ],
                        "name": "William Paul",
                        "slug": "William-Paul",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Paul",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "William Paul"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1694621"
                        ],
                        "name": "Michael I. Jordan",
                        "slug": "Michael-I.-Jordan",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Jordan",
                            "middleNames": [
                                "I."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Michael I. Jordan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144467753"
                        ],
                        "name": "I. Stoica",
                        "slug": "I.-Stoica",
                        "structuredName": {
                            "firstName": "Ion",
                            "lastName": "Stoica",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Stoica"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "RLlib and Tune are built on top of Ray [26],"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 34552495,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f83a207712fd4cf41aded79e9e6c4345ba879128",
            "isKey": false,
            "numCitedBy": 511,
            "numCiting": 78,
            "paperAbstract": {
                "fragments": [],
                "text": "The next generation of AI applications will continuously interact with the environment and learn from these interactions. These applications impose new and demanding systems requirements, both in terms of performance and flexibility. In this paper, we consider these requirements and present Ray---a distributed system to address them. Ray implements a dynamic task graph computation model that supports both the task-parallel and the actor programming models. To meet the performance requirements of AI applications, we propose an architecture that logically centralizes the system's control state using a sharded storage system and a novel bottom-up distributed scheduler. In our experiments, we demonstrate sub-millisecond remote task latencies and linear throughput scaling beyond 1.8 million tasks per second. We empirically validate that Ray speeds up challenging benchmarks and serves as both a natural and performant fit for an emerging class of reinforcement learning applications and algorithms."
            },
            "slug": "Ray:-A-Distributed-Framework-for-Emerging-AI-Moritz-Nishihara",
            "title": {
                "fragments": [],
                "text": "Ray: A Distributed Framework for Emerging AI Applications"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "This paper proposes an architecture that logically centralizes the system's control state using a sharded storage system and a novel bottom-up distributed scheduler that speeds up challenging benchmarks and serves as both a natural and performant fit for an emerging class of reinforcement learning applications and algorithms."
            },
            "venue": {
                "fragments": [],
                "text": "OSDI"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2589074"
                        ],
                        "name": "Vasileios Porpodas",
                        "slug": "Vasileios-Porpodas",
                        "structuredName": {
                            "firstName": "Vasileios",
                            "lastName": "Porpodas",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vasileios Porpodas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32482326"
                        ],
                        "name": "Timothy M. Jones",
                        "slug": "Timothy-M.-Jones",
                        "structuredName": {
                            "firstName": "Timothy",
                            "lastName": "Jones",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Timothy M. Jones"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "ently proposed cost models in [3, 4, 34] rely on predefined cost functions that calculate the expected execution time of a vectorized loop based on a linear formula from the instruction distribution. [35] improves super-word level parallelism (SLP) [36] to limit the automatic vectorization. This work does not address loop vectorization and relies on the baseline cost model to predict when some portion"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 1808223,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5332810c642f5e9e6985525d3f8efa3c645cb161",
            "isKey": false,
            "numCitedBy": 31,
            "numCiting": 52,
            "paperAbstract": {
                "fragments": [],
                "text": "SIMD vectors are widely adopted in modern general purpose processors as they can boost performance and energy efficiency for certain applications. Compiler-based automatic vectorization is one approach for generating codethat makes efficient use of the SIMD units, and has the benefit of avoiding hand development and platform-specific optimizations. The Superword-Level Parallelism (SLP) vectorization algorithm is the most well-known implementation of automatic vectorization when starting from straight-line scalar code, and is implemented in several major compilers. The existing SLP algorithm greedily packs scalar instructions into vectors starting from stores and traversing the data dependence graph upwards until it reaches loads or non-vectorizable instructions. Choosing whether to vectorize is a one-off decision for the whole graph that has been generated. This, however, is sub-optimal because the graph may contain code that is harmful to vectorization due to the need to move data from scalar registers into vectors. The decision does not consider the potential benefits of throttling the graph by removing this harmful code. In this work we propose asolution to overcome this limitation by introducing Throttled SLP (TSLP), a novel vectorization algorithm that finds the optimal graph to vectorize, forcing vectorization to stop earlier whenever this is beneficial. Our experiments show that TSLP improves performance across a number of kernels extractedfrom widely-used benchmark suites, decreasing execution time compared to SLP by 9% on average and up to 14% in the best case."
            },
            "slug": "Throttling-Automatic-Vectorization:-When-Less-is-Porpodas-Jones",
            "title": {
                "fragments": [],
                "text": "Throttling Automatic Vectorization: When Less is More"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "Throttled SLP (TSLP) is introduced, a novel vectorization algorithm that finds the optimal graph to vectorize, forcing vectorization to stop earlier whenever this is beneficial, and experiments show that TSLP improves performance across a number of kernels extracted from widely-used benchmark suites."
            },
            "venue": {
                "fragments": [],
                "text": "2015 International Conference on Parallel Architecture and Compilation (PACT)"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145739642"
                        ],
                        "name": "J. Kober",
                        "slug": "J.-Kober",
                        "structuredName": {
                            "firstName": "Jens",
                            "lastName": "Kober",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Kober"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1756566"
                        ],
                        "name": "J. Bagnell",
                        "slug": "J.-Bagnell",
                        "structuredName": {
                            "firstName": "J.",
                            "lastName": "Bagnell",
                            "middleNames": [
                                "Andrew"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Bagnell"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145197867"
                        ],
                        "name": "Jan Peters",
                        "slug": "Jan-Peters",
                        "structuredName": {
                            "firstName": "Jan",
                            "lastName": "Peters",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jan Peters"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 137,
                                "start": 118
                            }
                        ],
                        "text": "Deep RL is gaining wide interest recently due to its success in robotics, Atari gameplay, and superhuman capabilities [6, 12, 16, 22, 26]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 1932843,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "65438e0ba226c1f97bd8a36333ebc3297b1a32fd",
            "isKey": false,
            "numCitedBy": 2128,
            "numCiting": 253,
            "paperAbstract": {
                "fragments": [],
                "text": "Reinforcement learning offers to robotics a framework and set of tools for the design of sophisticated and hard-to-engineer behaviors. Conversely, the challenges of robotic problems provide both inspiration, impact, and validation for developments in reinforcement learning. The relationship between disciplines has sufficient promise to be likened to that between physics and mathematics. In this article, we attempt to strengthen the links between the two research communities by providing a survey of work in reinforcement learning for behavior generation in robots. We highlight both key challenges in robot reinforcement learning as well as notable successes. We discuss how contributions tamed the complexity of the domain and study the role of algorithms, representations, and prior knowledge in achieving these successes. As a result, a particular focus of our paper lies on the choice between model-based and model-free as well as between value-function-based and policy-search methods. By analyzing a simple problem in some detail we demonstrate how reinforcement learning approaches may be profitably applied, and we note throughout open questions and the tremendous potential for future research."
            },
            "slug": "Reinforcement-learning-in-robotics:-A-survey-Kober-Bagnell",
            "title": {
                "fragments": [],
                "text": "Reinforcement learning in robotics: A survey"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "This article attempts to strengthen the links between the two research communities by providing a survey of work in reinforcement learning for behavior generation in robots by highlighting both key challenges in robot reinforcement learning as well as notable successes."
            },
            "venue": {
                "fragments": [],
                "text": "Int. J. Robotics Res."
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145176935"
                        ],
                        "name": "Xinmin Tian",
                        "slug": "Xinmin-Tian",
                        "structuredName": {
                            "firstName": "Xinmin",
                            "lastName": "Tian",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Xinmin Tian"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144810291"
                        ],
                        "name": "H. Saito",
                        "slug": "H.-Saito",
                        "structuredName": {
                            "firstName": "Hideki",
                            "lastName": "Saito",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Saito"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "33647248"
                        ],
                        "name": "E. Su",
                        "slug": "E.-Su",
                        "structuredName": {
                            "firstName": "Ernesto",
                            "lastName": "Su",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Su"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8839928"
                        ],
                        "name": "A. Gaba",
                        "slug": "A.-Gaba",
                        "structuredName": {
                            "firstName": "Abhinav",
                            "lastName": "Gaba",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Gaba"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "33831549"
                        ],
                        "name": "Matt Masten",
                        "slug": "Matt-Masten",
                        "structuredName": {
                            "firstName": "Matt",
                            "lastName": "Masten",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Matt Masten"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2111323482"
                        ],
                        "name": "Eric N. Garcia",
                        "slug": "Eric-N.-Garcia",
                        "structuredName": {
                            "firstName": "Eric",
                            "lastName": "Garcia",
                            "middleNames": [
                                "N."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eric N. Garcia"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38737579"
                        ],
                        "name": "A. Zaks",
                        "slug": "A.-Zaks",
                        "structuredName": {
                            "firstName": "Ayal",
                            "lastName": "Zaks",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Zaks"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 107,
                                "start": 95
                            }
                        ],
                        "text": "For example, the currently implemented cost model in LLVM and recently proposed cost models in [24, 37, 38] rely on predefined cost functions that calculate the expected execution time of a vectorized loop based on a linear formula from the instruction distribution."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 70,
                                "start": 62
                            }
                        ],
                        "text": "The current vectorizer used in LLVM and proposed improvements [37, 38], rely on linear and constant-cost models to predict the vectorization factors."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 20204443,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a57b96682eca72df285ac73825dadfc5207dfa53",
            "isKey": false,
            "numCitedBy": 12,
            "numCiting": 4,
            "paperAbstract": {
                "fragments": [],
                "text": "LLVM has become an integral part of the software-development ecosystem for developing advanced compilers, high-performance computing software and tools. This paper presents a small set of LLVM IR extensions for explicitly parallel, vector, and offloading program constructs. The proposed LLVM IR extensions enable the lowering and transformation in the LLVM middle-end for the OpenMP\u00ae C/C++ and Fortran API, and any other explicitly parallel/simd constructs in high-level source languages. This paper discusses the rationale of the LLVM IR extensions to support OpenMP constructs and clauses, and presents the LLVM intrinsic functions, the framework for parallelization, vectorization, and offloading, and the sandwich scheme to model the OpenMP parallel, simd, offloading and data-attribute semantics under the SSA form. Examples are given to show our implementation in the LLVM middle-end passes, which paves the way to achieve a better interaction with scalar optimizations, vectorization, and loop optimizations, and thus resulting in higher performance."
            },
            "slug": "LLVM-Framework-and-IR-Extensions-for-SIMD-and-Tian-Saito",
            "title": {
                "fragments": [],
                "text": "LLVM Framework and IR Extensions for Parallelization, SIMD Vectorization and Offloading"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "The rationale of the LLVM IR extensions to support OpenMP constructs and clauses is discussed, and the framework for parallelization, vectorization, and offloading is presented and the sandwich scheme to model the OpenMP parallel, simd, offloading and data-attribute semantics under the SSA form is presented."
            },
            "venue": {
                "fragments": [],
                "text": "2016 Third Workshop on the LLVM Compiler Infrastructure in HPC (LLVM-HPC)"
            },
            "year": 2016
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3393220"
                        ],
                        "name": "Richard Liaw",
                        "slug": "Richard-Liaw",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Liaw",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Richard Liaw"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40274002"
                        ],
                        "name": "Eric Liang",
                        "slug": "Eric-Liang",
                        "structuredName": {
                            "firstName": "Eric",
                            "lastName": "Liang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eric Liang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34994156"
                        ],
                        "name": "Robert Nishihara",
                        "slug": "Robert-Nishihara",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Nishihara",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Robert Nishihara"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "29912342"
                        ],
                        "name": "Philipp Moritz",
                        "slug": "Philipp-Moritz",
                        "structuredName": {
                            "firstName": "Philipp",
                            "lastName": "Moritz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Philipp Moritz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "49988044"
                        ],
                        "name": "Joseph E. Gonzalez",
                        "slug": "Joseph-E.-Gonzalez",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Gonzalez",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Joseph E. Gonzalez"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144467753"
                        ],
                        "name": "I. Stoica",
                        "slug": "I.-Stoica",
                        "structuredName": {
                            "firstName": "Ion",
                            "lastName": "Stoica",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "I. Stoica"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 51,
                                "start": 47
                            }
                        ],
                        "text": "To run our RL algorithms we use RLlib [24] and Tune [25], open-source libraries for RL that offer, high scalability, hyper-parameter tuning and a unified API for a variety of applications."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 56,
                                "start": 52
                            }
                        ],
                        "text": "To run our RL algorithms we use RLlib [22] and Tune [23], open-source libraries for RL that offer, high scalability, hyper parameter tuning and a unified API for a variety of applications."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 14,
                                "start": 10
                            }
                        ],
                        "text": "RLlib and Tune are built on top of Ray [26],\na high-performance distributed execution framework targeted at large-scale machine learning and RL applications."
                    },
                    "intents": []
                }
            ],
            "corpusId": 49741140,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4afa7896ad35c5fc65112dc586c7a3e90f0404f3",
            "isKey": false,
            "numCitedBy": 289,
            "numCiting": 18,
            "paperAbstract": {
                "fragments": [],
                "text": "Modern machine learning algorithms are increasingly computationally demanding, requiring specialized hardware and distributed computation to achieve high performance in a reasonable time frame. Many hyperparameter search algorithms have been proposed for improving the efficiency of model selection, however their adaptation to the distributed compute environment is often ad-hoc. We propose Tune, a unified framework for model selection and training that provides a narrow-waist interface between training scripts and search algorithms. We show that this interface meets the requirements for a broad range of hyperparameter search algorithms, allows straightforward scaling of search to large clusters, and simplifies algorithm implementation. We demonstrate the implementation of several state-of-the-art hyperparameter search algorithms in Tune. Tune is available at this http URL"
            },
            "slug": "Tune:-A-Research-Platform-for-Distributed-Model-and-Liaw-Liang",
            "title": {
                "fragments": [],
                "text": "Tune: A Research Platform for Distributed Model Selection and Training"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "Tune is proposed, a unified framework for model selection and training that provides a narrow-waist interface between training scripts and search algorithms that meets the requirements for a broad range of hyperparameter search algorithms, allows straightforward scaling of search to large clusters, and simplifies algorithm implementation."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2780246"
                        ],
                        "name": "Daniel S. McFarlin",
                        "slug": "Daniel-S.-McFarlin",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "McFarlin",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Daniel S. McFarlin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2678938"
                        ],
                        "name": "Volodymyr Arbatov",
                        "slug": "Volodymyr-Arbatov",
                        "structuredName": {
                            "firstName": "Volodymyr",
                            "lastName": "Arbatov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Volodymyr Arbatov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1803350"
                        ],
                        "name": "F. Franchetti",
                        "slug": "F.-Franchetti",
                        "structuredName": {
                            "firstName": "Franz",
                            "lastName": "Franchetti",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Franchetti"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1690697"
                        ],
                        "name": "Markus P\u00fcschel",
                        "slug": "Markus-P\u00fcschel",
                        "structuredName": {
                            "firstName": "Markus",
                            "lastName": "P\u00fcschel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Markus P\u00fcschel"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 10,
                                "start": 6
                            }
                        ],
                        "text": "Also, [37] relies on heuristics to automatically vectorize."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 16736311,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4b38c90c66175f7b14af9c624821d0f322af0327",
            "isKey": false,
            "numCitedBy": 37,
            "numCiting": 44,
            "paperAbstract": {
                "fragments": [],
                "text": "The well-known shift to parallelism in CPUs is often associated with multicores. However another trend is equally salient: the increasing parallelism in per-core single-instruction multiple-date (SIMD) vector units. Intel's SSE and IBM's VMX (compatible to AltiVec) both offer 4-way (single precision) floating point, but the recent Intel instruction sets AVX and Larrabee (LRB) offer 8-way and 16-way, respectively. Compilation and optimization for vector extensions is hard, and often the achievable speed-up by using vectorizing compilers is small compared to hand-optimization using intrinsic function interfaces. Unfortunately, the complexity of these intrinsics interfaces increases considerably with the vector length, making hand-optimization a nightmare. In this paper, we present a peephole-based vectorization system that takes as input the vector instruction semantics and outputs a library of basic data reorganization blocks such as small transpositions and perfect shuffles that are needed in a variety of high performance computing applications. We evaluate the system by generating the blocks needed by the program generator Spiral for vectorized fast Fourier transforms (FFTs). With the generated FFTs we achieve a vectorization speed-up of 5.5--6.5 for 8-way AVX and 10--12.5 for 16-way LRB. For the latter instruction counts are used since no timing information is available. The combination of the proposed system and Spiral thus automates the production of high performance FFTs for current and future vector architectures."
            },
            "slug": "Automatic-SIMD-vectorization-of-fast-fourier-for-McFarlin-Arbatov",
            "title": {
                "fragments": [],
                "text": "Automatic SIMD vectorization of fast fourier transforms for the larrabee and AVX instruction sets"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "A peephole-based vectorization system that takes as input the vector instruction semantics and outputs a library of basic data reorganization blocks such as small transpositions and perfect shuffles that are needed in a variety of high performance computing applications is presented."
            },
            "venue": {
                "fragments": [],
                "text": "ICS '11"
            },
            "year": 2011
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "12230182"
                        ],
                        "name": "Zheng Wang",
                        "slug": "Zheng-Wang",
                        "structuredName": {
                            "firstName": "Zheng",
                            "lastName": "Wang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Zheng Wang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401533251"
                        ],
                        "name": "M. O\u2019Boyle",
                        "slug": "M.-O\u2019Boyle",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "O\u2019Boyle",
                            "middleNames": [
                                "F.",
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. O\u2019Boyle"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 75,
                                "start": 68
                            }
                        ],
                        "text": "Previous work has utilizedmachine learning in compiler optimization [2, 39]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 13662098,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6989e13df80edfc6e638e8d8502cb0739d494ca6",
            "isKey": false,
            "numCitedBy": 120,
            "numCiting": 209,
            "paperAbstract": {
                "fragments": [],
                "text": "In the last decade, machine-learning-based compilation has moved from an obscure research niche to a mainstream activity. In this paper, we describe the relationship between machine learning and compiler optimization and introduce the main concepts of features, models, training, and deployment. We then provide a comprehensive survey and provide a road map for the wide variety of different research areas. We conclude with a discussion on open issues in the area and potential research directions. This paper provides both an accessible introduction to the fast moving area of machine-learning-based compilation and a detailed bibliography of its main achievements."
            },
            "slug": "Machine-Learning-in-Compiler-Optimization-Wang-O\u2019Boyle",
            "title": {
                "fragments": [],
                "text": "Machine Learning in Compiler Optimization"
            },
            "tldr": {
                "abstractSimilarityScore": 49,
                "text": "The relationship between machine learning and compiler optimization is described and the main concepts of features, models, training, and deployment are introduced and a road map for the wide variety of different research areas is provided."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the IEEE"
            },
            "year": 2018
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "47971768"
                        ],
                        "name": "J. Schulman",
                        "slug": "J.-Schulman",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Schulman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Schulman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143909660"
                        ],
                        "name": "F. Wolski",
                        "slug": "F.-Wolski",
                        "structuredName": {
                            "firstName": "Filip",
                            "lastName": "Wolski",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Wolski"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "6515819"
                        ],
                        "name": "Prafulla Dhariwal",
                        "slug": "Prafulla-Dhariwal",
                        "structuredName": {
                            "firstName": "Prafulla",
                            "lastName": "Dhariwal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Prafulla Dhariwal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38909097"
                        ],
                        "name": "Alec Radford",
                        "slug": "Alec-Radford",
                        "structuredName": {
                            "firstName": "Alec",
                            "lastName": "Radford",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Alec Radford"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2067138712"
                        ],
                        "name": "Oleg Klimov",
                        "slug": "Oleg-Klimov",
                        "structuredName": {
                            "firstName": "Oleg",
                            "lastName": "Klimov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Oleg Klimov"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 128,
                                "start": 124
                            }
                        ],
                        "text": "One of the promising deep RL methods to derive a good, stable, and easy to use policy is proximal policy optimization (PPO) [20]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 3,
                                "start": 0
                            }
                        ],
                        "text": "PPO computes a gradient update at each step that minimizes the cost function while ensuring the deviation from the previous policy is relatively small."
                    },
                    "intents": []
                }
            ],
            "corpusId": 28695052,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dce6f9d4017b1785979e7520fd0834ef8cf02f4b",
            "isKey": false,
            "numCitedBy": 6094,
            "numCiting": 15,
            "paperAbstract": {
                "fragments": [],
                "text": "We propose a new family of policy gradient methods for reinforcement learning, which alternate between sampling data through interaction with the environment, and optimizing a \"surrogate\" objective function using stochastic gradient ascent. Whereas standard policy gradient methods perform one gradient update per data sample, we propose a novel objective function that enables multiple epochs of minibatch updates. The new methods, which we call proximal policy optimization (PPO), have some of the benefits of trust region policy optimization (TRPO), but they are much simpler to implement, more general, and have better sample complexity (empirically). Our experiments test PPO on a collection of benchmark tasks, including simulated robotic locomotion and Atari game playing, and we show that PPO outperforms other online policy gradient methods, and overall strikes a favorable balance between sample complexity, simplicity, and wall-time."
            },
            "slug": "Proximal-Policy-Optimization-Algorithms-Schulman-Wolski",
            "title": {
                "fragments": [],
                "text": "Proximal Policy Optimization Algorithms"
            },
            "tldr": {
                "abstractSimilarityScore": 95,
                "text": "A new family of policy gradient methods for reinforcement learning, which alternate between sampling data through interaction with the environment, and optimizing a \"surrogate\" objective function using stochastic gradient ascent, are proposed."
            },
            "venue": {
                "fragments": [],
                "text": "ArXiv"
            },
            "year": 2017
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144905525"
                        ],
                        "name": "S. Larsen",
                        "slug": "S.-Larsen",
                        "structuredName": {
                            "firstName": "Samuel",
                            "lastName": "Larsen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Larsen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709150"
                        ],
                        "name": "Saman P. Amarasinghe",
                        "slug": "Saman-P.-Amarasinghe",
                        "structuredName": {
                            "firstName": "Saman",
                            "lastName": "Amarasinghe",
                            "middleNames": [
                                "P."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Saman P. Amarasinghe"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 53,
                                "start": 49
                            }
                        ],
                        "text": "[28] improves super-word level parallelism (SLP) [17] to limit the automatic vectorization."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 29,
                                "start": 26
                            }
                        ],
                        "text": "Finally, [38, 39] improve SLP and rely on fixed cost models such as weighted instruction count or the current LLVM cost models."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 47,
                                "start": 44
                            }
                        ],
                        "text": "[35] improves super-word level parallelism (SLP) [36] to limit the automatic vectorization."
                    },
                    "intents": []
                }
            ],
            "corpusId": 5164212,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "84b6705e6f6ca2394061f5027f22744949ad9aae",
            "isKey": true,
            "numCitedBy": 385,
            "numCiting": 69,
            "paperAbstract": {
                "fragments": [],
                "text": "Increasing focus on multimedia applications has prompted the additionof multimedia extensions to most existing general purpose microprocessors. This added functionality comes primarily with the addition of short SIMD instructions. Unfortunately, access to these instructions is limited to in-line assembly and library calls. Generally, it has been assumed that vector compilers provide the most promising means of exploiting multimedia instructions. Although vectorization technology is well understood, it is inherently complex and fragile. In addition, it is incapable of locating SIMD-style parallelism within a basic block.\nIn this paper we introduce the concept of Superword Level Parallelism (SLP) ,a novel way of viewing parallelism in multimedia and scientific applications. We believe SLPP is fundamentally different from the loop level parallelism exploited by traditional vector processing, and therefore demands a new method of extracting it. We have developed a simple and robust compiler for detecting SLPP that targets basic blocks rather than loop nests. As with techniques designed to extract ILP, ours is able to exploit parallelism both across loop iterations and within basic blocks. The result is an algorithm that provides excellent performance in several application domains. In our experiments, dynamic instruction counts were reduced by 46%. Speedups ranged from 1.24 to 6.70."
            },
            "slug": "Exploiting-superword-level-parallelism-with-sets-Larsen-Amarasinghe",
            "title": {
                "fragments": [],
                "text": "Exploiting superword level parallelism with multimedia instruction sets"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "This paper has developed a simple and robust compiler for detecting SLPP that targets basic blocks rather than loop nests, and is able to exploit parallelism both across loop iterations and within basic blocks."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI '00"
            },
            "year": 2000
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1755190"
                        ],
                        "name": "Dorit Nuzman",
                        "slug": "Dorit-Nuzman",
                        "structuredName": {
                            "firstName": "Dorit",
                            "lastName": "Nuzman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Dorit Nuzman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "153090846"
                        ],
                        "name": "Ira Rosen",
                        "slug": "Ira-Rosen",
                        "structuredName": {
                            "firstName": "Ira",
                            "lastName": "Rosen",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ira Rosen"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38737579"
                        ],
                        "name": "A. Zaks",
                        "slug": "A.-Zaks",
                        "structuredName": {
                            "firstName": "Ayal",
                            "lastName": "Zaks",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Zaks"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 12024793,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "be8a25f7e7bf82415f86f26babbe3283349f8d74",
            "isKey": false,
            "numCitedBy": 186,
            "numCiting": 65,
            "paperAbstract": {
                "fragments": [],
                "text": "Most implementations of the Single Instruction Multiple Data (SIMD) model available today require that data elements be packed in vector registers. Operations on disjoint vector elements are not supported directly and require explicit data reorganization manipulations. Computations on non-contiguous and especially interleaved data appear in important applications, which can greatly benefit from SIMD instructions once the data is reorganized properly. Vectorizing such computations efficiently is therefore an ambitious challenge for both programmers and vectorizing compilers. We demonstrate an automatic compilation scheme that supports effective vectorization in the presence of interleaved data with constant strides that are powers of 2, facilitating data reorganization. We demonstrate how our vectorization scheme applies to dominant SIMD architectures, and present experimental results on a wide range of key kernels, showing speedups in execution time up to 3.7 for interleaving levels (stride) as high as 8."
            },
            "slug": "Auto-vectorization-of-interleaved-data-for-SIMD-Nuzman-Rosen",
            "title": {
                "fragments": [],
                "text": "Auto-vectorization of interleaved data for SIMD"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "This work demonstrates an automatic compilation scheme that supports effective vectorization in the presence of interleaved data with constant strides that are powers of 2, facilitating data reorganization."
            },
            "venue": {
                "fragments": [],
                "text": "PLDI '06"
            },
            "year": 2006
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1699645"
                        ],
                        "name": "R. Sutton",
                        "slug": "R.-Sutton",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Sutton",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Sutton"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1730590"
                        ],
                        "name": "A. Barto",
                        "slug": "A.-Barto",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Barto",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Barto"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "What distinguishes RL from other machine learning approaches is the presence of self-exploration and exploitation, and the tradeoff between them [8]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "\u2022 An end-to-end deep reinforcement learning (RL) [8] based auto-vectorization method."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 9166388,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "97efafdb4a3942ab3efba53ded7413199f79c054",
            "isKey": false,
            "numCitedBy": 33129,
            "numCiting": 636,
            "paperAbstract": {
                "fragments": [],
                "text": "Reinforcement learning, one of the most active research areas in artificial intelligence, is a computational approach to learning whereby an agent tries to maximize the total amount of reward it receives when interacting with a complex, uncertain environment. In Reinforcement Learning, Richard Sutton and Andrew Barto provide a clear and simple account of the key ideas and algorithms of reinforcement learning. Their discussion ranges from the history of the field's intellectual foundations to the most recent developments and applications. The only necessary mathematical background is familiarity with elementary concepts of probability. The book is divided into three parts. Part I defines the reinforcement learning problem in terms of Markov decision processes. Part II provides basic solution methods: dynamic programming, Monte Carlo methods, and temporal-difference learning. Part III presents a unified view of the solution methods and incorporates artificial neural networks, eligibility traces, and planning; the two final chapters present case studies and consider the future of reinforcement learning."
            },
            "slug": "Reinforcement-Learning:-An-Introduction-Sutton-Barto",
            "title": {
                "fragments": [],
                "text": "Reinforcement Learning: An Introduction"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "This book provides a clear and simple account of the key ideas and algorithms of reinforcement learning, which ranges from the history of the field's intellectual foundations to the most recent developments and applications."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Neural Networks"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2939803"
                        ],
                        "name": "Ronan Collobert",
                        "slug": "Ronan-Collobert",
                        "structuredName": {
                            "firstName": "Ronan",
                            "lastName": "Collobert",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ronan Collobert"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145183709"
                        ],
                        "name": "J. Weston",
                        "slug": "J.-Weston",
                        "structuredName": {
                            "firstName": "Jason",
                            "lastName": "Weston",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Weston"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 2617020,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "57458bc1cffe5caa45a885af986d70f723f406b4",
            "isKey": false,
            "numCitedBy": 5064,
            "numCiting": 27,
            "paperAbstract": {
                "fragments": [],
                "text": "We describe a single convolutional neural network architecture that, given a sentence, outputs a host of language processing predictions: part-of-speech tags, chunks, named entity tags, semantic roles, semantically similar words and the likelihood that the sentence makes sense (grammatically and semantically) using a language model. The entire network is trained jointly on all these tasks using weight-sharing, an instance of multitask learning. All the tasks use labeled data except the language model which is learnt from unlabeled text and represents a novel form of semi-supervised learning for the shared tasks. We show how both multitask learning and semi-supervised learning improve the generalization of the shared tasks, resulting in state-of-the-art-performance."
            },
            "slug": "A-unified-architecture-for-natural-language-deep-Collobert-Weston",
            "title": {
                "fragments": [],
                "text": "A unified architecture for natural language processing: deep neural networks with multitask learning"
            },
            "tldr": {
                "abstractSimilarityScore": 93,
                "text": "This work describes a single convolutional neural network architecture that, given a sentence, outputs a host of language processing predictions: part-of-speech tags, chunks, named entity tags, semantic roles, semantically similar words and the likelihood that the sentence makes sense using a language model."
            },
            "venue": {
                "fragments": [],
                "text": "ICML '08"
            },
            "year": 2008
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1756389"
                        ],
                        "name": "T. Grosser",
                        "slug": "T.-Grosser",
                        "structuredName": {
                            "firstName": "Tobias",
                            "lastName": "Grosser",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Grosser"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1708011"
                        ],
                        "name": "Armin Gr\u00f6\u00dflinger",
                        "slug": "Armin-Gr\u00f6\u00dflinger",
                        "structuredName": {
                            "firstName": "Armin",
                            "lastName": "Gr\u00f6\u00dflinger",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Armin Gr\u00f6\u00dflinger"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1714483"
                        ],
                        "name": "C. Lengauer",
                        "slug": "C.-Lengauer",
                        "structuredName": {
                            "firstName": "Christian",
                            "lastName": "Lengauer",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Lengauer"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 22,
                                "start": 19
                            }
                        ],
                        "text": "For example, Polly [5] uses an abstract mathematical representation based on integer polyhedra to analyze and optimize the memory access pattern of a program."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 43,
                                "start": 40
                            }
                        ],
                        "text": "Another commonly used approach is Polly [5]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 18533155,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3d64988b882541afa8f03f912229fbba49c82e74",
            "isKey": false,
            "numCitedBy": 290,
            "numCiting": 35,
            "paperAbstract": {
                "fragments": [],
                "text": "The polyhedral model for loop parallelization has proved to be an effective tool for advanced optimization and automatic parallelization of programs in higher-level languages. Yet, to integrate such optimizations seamlessly into production compilers, they must be performed on the compiler's internal, low-level, intermediate representation (IR). With Polly, we present an infrastructure for polyhedral optimizations on such an IR. We describe the detection of program parts amenable to a polyhedral optimization (so-called static control parts), their translation to a Z-polyhedral representation, optimizations on this representation and the generation of optimized IR code. Furthermore, we define an interface for connecting external optimizers and present a novel way of using the parallelism they introduce to generate SIMD and OpenMP code. To evaluate Polly, we compile the PolyBench 2.0 benchmarks fully automatically with PLuTo as external optimizer and parallelizer. We can report on significant speedups."
            },
            "slug": "Polly-Performing-Polyhedral-Optimizations-on-a-Grosser-Gr\u00f6\u00dflinger",
            "title": {
                "fragments": [],
                "text": "Polly - Performing Polyhedral Optimizations on a Low-Level Intermediate Representation"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "Polly is presented, an infrastructure for polyhedral optimizations on the compiler's internal, low-level, intermediate representation (IR) and an interface for connecting external optimizers and a novel way of using the parallelism they introduce to generate SIMD and OpenMP code is presented."
            },
            "venue": {
                "fragments": [],
                "text": "Parallel Process. Lett."
            },
            "year": 2012
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709512"
                        ],
                        "name": "L. Kaelbling",
                        "slug": "L.-Kaelbling",
                        "structuredName": {
                            "firstName": "Leslie",
                            "lastName": "Kaelbling",
                            "middleNames": [
                                "Pack"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Kaelbling"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144885169"
                        ],
                        "name": "M. Littman",
                        "slug": "M.-Littman",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Littman",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Littman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1760402"
                        ],
                        "name": "A. Moore",
                        "slug": "A.-Moore",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Moore",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Moore"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "ample efficient. 2.3 Deep Reinforcement Learning for Auto-Vectorization One of the promising machine learning approaches is RL, in which an agent learns by continually interacting with an environment [13]. Using a neural network in conjunction with RL is called deep RL. Deep models allow RL algorithms to solve complex problems in an end-to-end fashion, handle unstructured environments, learn complex f"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 1708582,
            "fieldsOfStudy": [
                "Psychology"
            ],
            "id": "12d1d070a53d4084d88a77b8b143bad51c40c38f",
            "isKey": true,
            "numCitedBy": 7412,
            "numCiting": 229,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper surveys the field of reinforcement learning from a computer-science perspective. It is written to be accessible to researchers familiar with machine learning. Both the historical basis of the field and a broad selection of current work are summarized. Reinforcement learning is the problem faced by an agent that learns behavior through trial-and-error interactions with a dynamic environment. The work described here has a resemblance to work in psychology, but differs considerably in the details and in the use of the word \"reinforcement.\" The paper discusses central issues of reinforcement learning, including trading off exploration and exploitation, establishing the foundations of the field via Markov decision theory, learning from delayed reinforcement, constructing empirical models to accelerate learning, making use of generalization and hierarchy, and coping with hidden state. It concludes with a survey of some implemented systems and an assessment of the practical utility of current methods for reinforcement learning."
            },
            "slug": "Reinforcement-Learning:-A-Survey-Kaelbling-Littman",
            "title": {
                "fragments": [],
                "text": "Reinforcement Learning: A Survey"
            },
            "tldr": {
                "abstractSimilarityScore": 48,
                "text": "Central issues of reinforcement learning are discussed, including trading off exploration and exploitation, establishing the foundations of the field via Markov decision theory, learning from delayed reinforcement, constructing empirical models to accelerate learning, making use of generalization and hierarchy, and coping with hidden state."
            },
            "venue": {
                "fragments": [],
                "text": "J. Artif. Intell. Res."
            },
            "year": 1996
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1714997"
                        ],
                        "name": "K. Doya",
                        "slug": "K.-Doya",
                        "structuredName": {
                            "firstName": "Kenji",
                            "lastName": "Doya",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Doya"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 137,
                                "start": 118
                            }
                        ],
                        "text": "Deep RL is gaining wide interest recently due to its success in robotics, Atari gameplay, and superhuman capabilities [6, 12, 16, 22, 26]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 6652458,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "74d5164017fa0f2e65c193bf9e26f471744bf9f5",
            "isKey": false,
            "numCitedBy": 882,
            "numCiting": 59,
            "paperAbstract": {
                "fragments": [],
                "text": "This article presents a reinforcement learning framework for continuous-time dynamical systems without a priori discretization of time, state, and action. Basedonthe Hamilton-Jacobi-Bellman (HJB) equation for infinite-horizon, discounted reward problems, we derive algorithms for estimating value functions and improving policies with the use of function approximators. The process of value function estimation is formulated as the minimization of a continuous-time form of the temporal difference (TD) error. Update methods based on backward Euler approximation and exponential eligibility traces are derived, and their correspondences with the conventional residual gradient, TD (0), and TD () algorithms are shown. For policy improvement, two methodsa continuous actor-critic method and a value-gradient-based greedy policyare formulated. As a special case of the latter, a nonlinear feedback control law using the value gradient and the model of the input gain is derived. The advantage updating, a model-free algorithm derived previously, is also formulated in the HJB-based framework. The performance of the proposed algorithms is first tested in a nonlinear control task of swinging a pendulum up with limited torque. It is shown in the simulations that (1) the task is accomplished by the continuous actor-critic method in a number of trials several times fewer than by the conventional discrete actor-critic method; (2) among the continuous policy update methods, the value-gradient-based policy with a known or learned dynamic model performs several times better than the actor-critic method; and (3) a value function update using exponential eligibility traces is more efficient and stable than that based on Euler approximation. The algorithms are then tested in a higher-dimensional task: cart-pole swing-up. This task is accomplished in several hundred trials using the value-gradient-based policy with a learned dynamic model."
            },
            "slug": "Reinforcement-Learning-in-Continuous-Time-and-Space-Doya",
            "title": {
                "fragments": [],
                "text": "Reinforcement Learning in Continuous Time and Space"
            },
            "tldr": {
                "abstractSimilarityScore": 92,
                "text": "A reinforcement learning framework for continuous-time dynamical systems without a priori discretization of time, state, and action based on the Hamilton-Jacobi-Bellman (HJB) equation for infinite-horizon, discounted reward problems is presented and algorithms for estimating value functions and improving policies with the use of function approximators are derived."
            },
            "venue": {
                "fragments": [],
                "text": "Neural Computation"
            },
            "year": 2000
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145197867"
                        ],
                        "name": "Jan Peters",
                        "slug": "Jan-Peters",
                        "structuredName": {
                            "firstName": "Jan",
                            "lastName": "Peters",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jan Peters"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144575699"
                        ],
                        "name": "S. Vijayakumar",
                        "slug": "S.-Vijayakumar",
                        "structuredName": {
                            "firstName": "Sethu",
                            "lastName": "Vijayakumar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Vijayakumar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1745219"
                        ],
                        "name": "S. Schaal",
                        "slug": "S.-Schaal",
                        "structuredName": {
                            "firstName": "Stefan",
                            "lastName": "Schaal",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Schaal"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 137,
                                "start": 118
                            }
                        ],
                        "text": "Deep RL is gaining wide interest recently due to its success in robotics, Atari gameplay, and superhuman capabilities [6, 12, 16, 22, 26]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 6820915,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "45b2ff4c2dc8d944b05e9b55d55f2a9245bef767",
            "isKey": false,
            "numCitedBy": 367,
            "numCiting": 36,
            "paperAbstract": {
                "fragments": [],
                "text": "Reinforcement learning offers one of the most general framework to take traditional robotics towards true autonomy and versatility. However, applying reinforcement learning to high dimensional movement systems like humanoid robots remains an unsolved problem. In this paper, we discuss different approaches of reinforcement learning in terms of their applicability in humanoid robotics. Methods can be coarsely classified into three different categories, i.e., greedy methods, \u2018vanilla\u2019 policy gradient methods, and natural gradient methods. We discuss that greedy methods are not likely to scale into the domain humanoid robotics as they are problematic when used with function approximation. \u2018Vanilla\u2019 policy gradient methods on the other hand have been successfully applied on real-world robots including at least one humanoid robot [3]. We demonstrate that these methods can be significantly improved using the natural policy gradient instead of the regular policy gradient. A derivation of the natural policy gradient is provided, proving that the average policy gradient of Kakade [10] is indeed the true natural gradient. A general algorithm for estimating the natural gradient, the Natural Actor-Critic algorithm, is introduced. This algorithm converges to the nearest local minimum of the cost function with respect to the Fisher information metric under suitable conditions. The algorithm outperforms non-natural policy gradients by far in a cart-pole balancing evaluation, and for learning nonlinear dynamic motor primitives for humanoid robot control. It offers a promising route for the development of reinforcement learning for truly high-dimensionally continuous state-action systems."
            },
            "slug": "Reinforcement-Learning-for-Humanoid-Robotics-Peters-Vijayakumar",
            "title": {
                "fragments": [],
                "text": "Reinforcement Learning for Humanoid Robotics"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "This paper discusses different approaches of reinforcement learning in terms of their applicability in humanoid robotics, and demonstrates that \u2018vanilla\u2019 policy gradient methods can be significantly improved using the natural policy gradient instead of the regular policy gradient."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2003
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2117101253"
                        ],
                        "name": "Ke Xu",
                        "slug": "Ke-Xu",
                        "structuredName": {
                            "firstName": "Ke",
                            "lastName": "Xu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ke Xu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2503659"
                        ],
                        "name": "Jimmy Ba",
                        "slug": "Jimmy-Ba",
                        "structuredName": {
                            "firstName": "Jimmy",
                            "lastName": "Ba",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jimmy Ba"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3450996"
                        ],
                        "name": "Ryan Kiros",
                        "slug": "Ryan-Kiros",
                        "structuredName": {
                            "firstName": "Ryan",
                            "lastName": "Kiros",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ryan Kiros"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1979489"
                        ],
                        "name": "Kyunghyun Cho",
                        "slug": "Kyunghyun-Cho",
                        "structuredName": {
                            "firstName": "Kyunghyun",
                            "lastName": "Cho",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kyunghyun Cho"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1760871"
                        ],
                        "name": "Aaron C. Courville",
                        "slug": "Aaron-C.-Courville",
                        "structuredName": {
                            "firstName": "Aaron",
                            "lastName": "Courville",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Aaron C. Courville"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145124475"
                        ],
                        "name": "R. Salakhutdinov",
                        "slug": "R.-Salakhutdinov",
                        "structuredName": {
                            "firstName": "Ruslan",
                            "lastName": "Salakhutdinov",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Salakhutdinov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1804104"
                        ],
                        "name": "R. Zemel",
                        "slug": "R.-Zemel",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Zemel",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Zemel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1751762"
                        ],
                        "name": "Yoshua Bengio",
                        "slug": "Yoshua-Bengio",
                        "structuredName": {
                            "firstName": "Yoshua",
                            "lastName": "Bengio",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yoshua Bengio"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "Code2vec is a neural network model that relies on natural language processing [22] and attention [23] for representing snippets of code as continuously distributed vectors."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 1055111,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4d8f2d14af5991d4f0d050d22216825cac3157bd",
            "isKey": false,
            "numCitedBy": 7357,
            "numCiting": 65,
            "paperAbstract": {
                "fragments": [],
                "text": "Inspired by recent work in machine translation and object detection, we introduce an attention based model that automatically learns to describe the content of images. We describe how we can train this model in a deterministic manner using standard backpropagation techniques and stochastically by maximizing a variational lower bound. We also show through visualization how the model is able to automatically learn to fix its gaze on salient objects while generating the corresponding words in the output sequence. We validate the use of attention with state-of-the-art performance on three benchmark datasets: Flickr9k, Flickr30k and MS COCO."
            },
            "slug": "Show,-Attend-and-Tell:-Neural-Image-Caption-with-Xu-Ba",
            "title": {
                "fragments": [],
                "text": "Show, Attend and Tell: Neural Image Caption Generation with Visual Attention"
            },
            "tldr": {
                "abstractSimilarityScore": 58,
                "text": "An attention based model that automatically learns to describe the content of images is introduced that can be trained in a deterministic manner using standard backpropagation techniques and stochastically by maximizing a variational lower bound."
            },
            "venue": {
                "fragments": [],
                "text": "ICML"
            },
            "year": 2015
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48279064"
                        ],
                        "name": "M. Ridley",
                        "slug": "M.-Ridley",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Ridley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Ridley"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 80,
                                "start": 77
                            }
                        ],
                        "text": "Many recent works are being conducted on explaining neural network decisions [9] and their application in code optimization will also benefit from that."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 249936678,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "12cac86b9cb5557d7f75b6fbcab0bac40b5f7995",
            "isKey": false,
            "numCitedBy": 449,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "The field of explainable artificial intelligence (XAI) advances techniques, processes, and strategies that provide explanations for the predictions, recommendations, and decisions of opaque and complex machine learning systems. Increasingly academic libraries are providing library users with systems, services, and collections created and delivered by machine learning. Academic libraries should adopt XAI as a tool set to verify and validate these resources, and advocate for public policy regarding XAI that serves libraries, the academy, and the public interest."
            },
            "slug": "Explainable-Artificial-Intelligence-(XAI)-Ridley",
            "title": {
                "fragments": [],
                "text": "Explainable Artificial Intelligence (XAI)"
            },
            "venue": {
                "fragments": [],
                "text": "Information Technology and Libraries"
            },
            "year": 2022
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145341779"
                        ],
                        "name": "J. R. Quinlan",
                        "slug": "J.-R.-Quinlan",
                        "structuredName": {
                            "firstName": "J.",
                            "lastName": "Quinlan",
                            "middleNames": [
                                "Ross"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. R. Quinlan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "edding with multiple machine learningmethodstomakevectorizationpredictionsonloops. We explore using random search, supervised learning methods, i.e., nearest-neighbor search (NNS) [9], decision trees [10], and supervised fully connected neural network (FCNNs), and contextual bandits based on deep RL. \u2022Rigorous evaluations across different learning hyperparameters and benchmark suites to show the effec"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 13252401,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "bcee7c85d237b79491a773ef51e746bbbcf48e35",
            "isKey": false,
            "numCitedBy": 13598,
            "numCiting": 52,
            "paperAbstract": {
                "fragments": [],
                "text": "The technology for building knowledge-based systems by inductive inference from examples has been demonstrated successfully in several practical applications. This paper summarizes an approach to synthesizing decision trees that has been used in a variety of systems, and it describes one such system, ID3, in detail. Results from recent studies show ways in which the methodology can be modified to deal with information that is noisy and/or incomplete. A reported shortcoming of the basic algorithm is discussed and two means of overcoming it are compared. The paper concludes with illustrations of current research directions."
            },
            "slug": "Induction-of-Decision-Trees-Quinlan",
            "title": {
                "fragments": [],
                "text": "Induction of Decision Trees"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "This paper summarizes an approach to synthesizing decision trees that has been used in a variety of systems, and it describes one such system, ID3, in detail, which is described in detail."
            },
            "venue": {
                "fragments": [],
                "text": "Machine Learning"
            },
            "year": 2004
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1737725"
                        ],
                        "name": "M. Guthaus",
                        "slug": "M.-Guthaus",
                        "structuredName": {
                            "firstName": "Matthew",
                            "lastName": "Guthaus",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Guthaus"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38612080"
                        ],
                        "name": "J. Ringenberg",
                        "slug": "J.-Ringenberg",
                        "structuredName": {
                            "firstName": "Jeff",
                            "lastName": "Ringenberg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Ringenberg"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1781168"
                        ],
                        "name": "D. Ernst",
                        "slug": "D.-Ernst",
                        "structuredName": {
                            "firstName": "Dan",
                            "lastName": "Ernst",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Ernst"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144701548"
                        ],
                        "name": "T. Austin",
                        "slug": "T.-Austin",
                        "structuredName": {
                            "firstName": "Todd",
                            "lastName": "Austin",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Austin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1751516"
                        ],
                        "name": "T. Mudge",
                        "slug": "T.-Mudge",
                        "structuredName": {
                            "firstName": "Trevor",
                            "lastName": "Mudge",
                            "middleNames": [
                                "N."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Mudge"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2109427750"
                        ],
                        "name": "R.B. Brown",
                        "slug": "R.B.-Brown",
                        "structuredName": {
                            "firstName": "R.B.",
                            "lastName": "Brown",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R.B. Brown"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "To that end we evaluate the trained model on two benchmarks: MiBench [27] where the loops constitute a minor portion of the code and PolyBench [28] where the loops constitute a major portion of the code."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 759854,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "1785734be9f70a106978a601cd3a15b7f5490543",
            "isKey": false,
            "numCitedBy": 3580,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper examines a set of commercially representative embedded programs and compares them to an existing benchmark suite, SPEC2000. A new version of SimpleScalar that has been adapted to the ARM instruction set is used to characterize the performance of the benchmarks using configurations similar to current and next generation embedded processors. Several characteristics distinguish the representative embedded programs from the existing SPEC benchmarks including instruction distribution, memory behavior, and available parallelism. The embedded benchmarks, called MiBench, are freely available to all researchers."
            },
            "slug": "MiBench:-A-free,-commercially-representative-suite-Guthaus-Ringenberg",
            "title": {
                "fragments": [],
                "text": "MiBench: A free, commercially representative embedded benchmark suite"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "A new version of SimpleScalar that has been adapted to the ARM instruction set is used to characterize the performance of the benchmarks using configurations similar to current and next generation embedded processors."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the Fourth Annual IEEE International Workshop on Workload Characterization. WWC-4 (Cat. No.01EX538)"
            },
            "year": 2001
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1734183"
                        ],
                        "name": "N. Roussopoulos",
                        "slug": "N.-Roussopoulos",
                        "structuredName": {
                            "firstName": "Nick",
                            "lastName": "Roussopoulos",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Roussopoulos"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "152678519"
                        ],
                        "name": "Stephen Kelley",
                        "slug": "Stephen-Kelley",
                        "structuredName": {
                            "firstName": "Stephen",
                            "lastName": "Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stephen Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32265381"
                        ],
                        "name": "F. Vincent",
                        "slug": "F.-Vincent",
                        "structuredName": {
                            "firstName": "Fr\u00e9d\u00e9ic",
                            "lastName": "Vincent",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Vincent"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": ", nearest-neighbor search (NNS) [9], decision trees [10], and supervised fully connected neural network (FCNNs), and contextual bandits based on deep RL."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 9396970,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "200ffb6ad03482850c6a574848fa4ed24c4175d2",
            "isKey": false,
            "numCitedBy": 1584,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "A frequently encountered type of query in Geographic Information Systems is to find the k nearest neighbor objects to a given point in space. Processing such queries requires substantially different search algorithms than those for location or range queries. In this paper we present an efficient branch-and-bound R-tree traversal algorithm to find the nearest neighbor object to a point, and then generalize it to finding the k nearest neighbors. We also discuss metrics for an optimistic and a pessimistic search ordering strategy as well as for pruning. Finally, we present the results of several experiments obtained using the implementation of our algorithm and examine the behavior of the metrics and the scalability of the algorithm."
            },
            "slug": "Nearest-neighbor-queries-Roussopoulos-Kelley",
            "title": {
                "fragments": [],
                "text": "Nearest neighbor queries"
            },
            "tldr": {
                "abstractSimilarityScore": 53,
                "text": "This paper presents an efficient branch-and-bound R-tree traversal algorithm to find the nearest neighbor object to a point, and then generalizes it to finding the k nearest neighbors."
            },
            "venue": {
                "fragments": [],
                "text": "SIGMOD '95"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2071247139"
                        ],
                        "name": "R. Kennedy",
                        "slug": "R.-Kennedy",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Kennedy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Kennedy"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 107639937,
            "fieldsOfStudy": [
                "Engineering"
            ],
            "id": "9a0c6a0d4dca919421793cd21467da26f23bd644",
            "isKey": false,
            "numCitedBy": 69,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : This Change 1 to DoD Directive 5134.10, dated February 17, 1995, is provided to DTIC. NOTE: In accordance with Section 908 of the DoD Authorization Act for FY 1996 (P.L. 104-106), this change redesignates the Advanced Research Projects Agency (ARPA) as the Defense Advanced Research Projects Agency (DARPA)."
            },
            "slug": "Defense-Advanced-Research-Projects-Agency-(DARPA).-Kennedy",
            "title": {
                "fragments": [],
                "text": "Defense Advanced Research Projects Agency (DARPA). Change 1"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1996
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 79,
                                "start": 70
                            }
                        ],
                        "text": "Figure 10 shows the performance of deep RL, Polly and the baseline on PolyBench."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 39,
                                "start": 30
                            }
                        ],
                        "text": "Polly was optimized to run on PolyBench, yet deep RL outperformed Polly on three out of the six benchmarks."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 142,
                                "start": 133
                            }
                        ],
                        "text": "To that end we evaluate the trained model on two benchmarks: MiBench [27] where the loops constitute a minor portion of the code and PolyBench [28] where the loops constitute a major portion of the code."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 156,
                                "start": 147
                            }
                        ],
                        "text": "For example, due to memory dependencies, controlflow or lack of loops, it was not possible to vectorize adpcm, dijkstra, basicmath, blowfish, etc. PolyBench includes benchmarks that perform matrix operations, decomposition, and linear algebra for which Polly is optimized to run on."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 147,
                                "start": 143
                            }
                        ],
                        "text": "To that end we evaluate the trained model on two benchmarks: MiBench [10] where the loops constitute a minor portion of the code and PolyBench [30] where the loops constitute a major portion of the code."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Polybench: The polyhedral benchmark suite"
            },
            "venue": {
                "fragments": [],
                "text": "URL: http://www. cs. ucla. edu/pouchet/software/polybench"
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 122,
                                "start": 119
                            }
                        ],
                        "text": "We run the kernel on 16 GB 2133MHz LPDDR3memory and 2.7 GHz (up to 4.5 GHz) Intel 4-Core i7-8559U [11], which supports AVX."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 158,
                                "start": 154
                            }
                        ],
                        "text": "Modern computers typically have vector instructions that perform multiple basic operations simultaneously, such as Intel Advanced Vector Extensions (AVX) [20]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 152,
                                "start": 149
                            }
                        ],
                        "text": "Modern computers typically have vector instructions that perform multiple basic operations simultaneously, such as Intel Advanced Vector Extensions (AVX) [1]."
                    },
                    "intents": []
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Introduction to intel advanced vector extensions"
            },
            "venue": {
                "fragments": [],
                "text": "Intel White Paper (2011),"
            },
            "year": 2011
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 81,
                                "start": 77
                            }
                        ],
                        "text": "Many recent works are being conducted on explaining neural network decisions [27] and their application in code optimization will also benefit from that."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Explainable artificial intelligence (xai),\u201dDefense"
            },
            "venue": {
                "fragments": [],
                "text": "Advanced Research Projects Agency (DARPA), nd Web,"
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Learning distributed representations of code"
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the ACM on Programming Languages"
            },
            "year": 2019
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2020
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Playing atari with deep reinforcement learn Reinforcement learning in continuous time and space"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1996
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2019
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2000
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2016
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2011
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2015
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2019
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2018
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2003
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2011
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2013
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 17,
                                "start": 9
                            }
                        ],
                        "text": "Finally, [27, 29] improve SLP and rely on fixed cost models such as weighted instruction count or the current LLVM cost models."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "2017. SuperGraph-SLP Auto-Vectorization"
            },
            "venue": {
                "fragments": [],
                "text": "26th International Conference on Parallel Architectures and Compilation Techniques (PACT). IEEE,"
            },
            "year": 2017
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2018
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 33,
                                "start": 29
                            }
                        ],
                        "text": "5 GHz) Intel 4-Core i7-8559U [10], which supports AVX."
                    },
                    "intents": []
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Intel Core i7-8559U Processor Specification"
            },
            "venue": {
                "fragments": [],
                "text": "2018."
            },
            "year": 2018
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 2012
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1986
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": ""
            },
            "venue": {
                "fragments": [],
                "text": ""
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "2019 . code 2 vec : Learning distributed representations of code"
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the ACM on Programming Languages"
            }
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 18,
            "methodology": 17
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 67,
        "totalPages": 7
    },
    "page_url": "https://www.semanticscholar.org/paper/NeuroVectorizer:-end-to-end-vectorization-with-deep-Haj-Ali-Ahmed/938a603d320d580aab79715abd0c0dcd3093db4b?sort=total-citations"
}